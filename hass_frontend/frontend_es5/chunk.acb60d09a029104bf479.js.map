{"version":3,"sources":["webpack:///./node_modules/es6-object-assign/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/mdn-polyfills/Array.prototype.includes.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/unfetch/polyfill/polyfill.mjs","webpack:///./node_modules/unfetch/src/index.mjs","webpack:///./src/entrypoints/compatibility.ts"],"names":["assign","target","firstSource","TypeError","to","Object","i","arguments","length","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","undefined","enumerable","module","exports","polyfill","defineProperty","configurable","writable","value","webpackPolyfill","deprecate","paths","children","get","l","Array","prototype","includes","r","this","e","n","parseInt","t","o","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","fetch","url","options","request","XMLHttpRequest","all","headers","open","onload","getAllResponseHeaders","replace","m","toLowerCase","response","ok","status","statusText","responseURL","text","responseText","json","JSON","parse","blob","Blob","clone","entries","has","onerror","withCredentials","credentials","setRequestHeader","send","body","objAssign","map","String","padStart","targetLength","padString","repeat"],"mappings":"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","file":"chunk.acb60d09a029104bf479.js","sourcesContent":["/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","Array.prototype.includes||(Array.prototype.includes=function(r){if(null==this)throw new TypeError(\"Array.prototype.includes called on null or undefined\");var e=Object(this),n=parseInt(e.length,10)||0;if(0===n)return!1;var t,o,i=parseInt(arguments[1],10)||0;for(0<=i?t=i:(t=n+i)<0&&(t=0);t<n;){if(r===(o=e[t])||r!=r&&o!=o)return!0;t++}return!1});\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import unfetch from '../src/index.mjs';\nif (!self.fetch) self.fetch = unfetch;\n","export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","import \"mdn-polyfills/Array.prototype.includes\";\nimport \"unfetch/polyfill\";\nimport \"regenerator-runtime/runtime\";\nimport objAssign from \"es6-object-assign\";\n\nobjAssign.polyfill();\n\nif (Object.values === undefined) {\n  Object.values = (target) => {\n    return Object.keys(target).map((key) => target[key]);\n  };\n}\n\n/* tslint:disable */\n// https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nif (!String.prototype.padStart) {\n  String.prototype.padStart = function padStart(targetLength, padString) {\n    targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;\n    padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n    if (this.length >= targetLength) {\n      return String(this);\n    } else {\n      targetLength = targetLength - this.length;\n      if (targetLength > padString.length) {\n        padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n      }\n      return padString.slice(0, targetLength) + String(this);\n    }\n  };\n}\n/* tslint:enable */\n"],"sourceRoot":""}