{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-behavior.js","webpack:///./node_modules/@polymer/paper-item/paper-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-shared-styles.js","webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/config/ha-config-section.js","webpack:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/panels/config/dashboard/ha-config-navigation.ts","webpack:///./src/panels/config/dashboard/ha-config-dashboard.ts"],"names":["PaperItemBehavior","IronButtonState","IronControlState","hostAttributes","role","tabindex","Polymer","_template","html","is","behaviors","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","HaCard","property","css","this","header","LitElement","customElements","define","ironIconClass","get","loaded","HaIcon","node","eventName","methodName","_iconsetName","HaConfigSection","hass","type","Object","narrow","Boolean","isWide","value","classes","PolymerElement","AppLayoutBehavior","properties","hasScrollingRegion","reflectToAttribute","observers","dom","$","headerSlot","getDistributedNodes","_updateLayoutStates","isAttached","wrapper","classList","remove","scrollTarget","contentContainer","ownerDocument","documentElement","headerHeight","offsetHeight","style","left","right","requestAnimationFrame","rect","getBoundingClientRect","rightOffset","clientWidth","bind","containerStyle","fixed","condenses","marginTop","paddingTop","HaIconNext","setTimeout","icon","window","getComputedStyle","direction","customElement","pages","map","page","core","advanced","isComponentLoaded","showAdvanced","localize","cloudStatus","logged_in","email","haStyle"],"mappings":"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","file":"chunk.1f616370471d8f5c0a8d.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronButtonState} from '@polymer/iron-behaviors/iron-button-state.js';\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\n\n/*\n`PaperItemBehavior` is a convenience behavior shared by <paper-item> and\n<paper-icon-item> that manages the shared control states and attributes of\nthe items.\n*/\n/** @polymerBehavior PaperItemBehavior */\nexport const PaperItemBehaviorImpl = {\n  hostAttributes: {role: 'option', tabindex: '0'}\n};\n\n/** @polymerBehavior */\nexport const PaperItemBehavior =\n    [IronButtonState, IronControlState, PaperItemBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/**\nMaterial design:\n[Lists](https://www.google.com/design/spec/components/lists.html)\n\n`<paper-item>` is an interactive list item. By default, it is a horizontal\nflexbox.\n\n    <paper-item>Item</paper-item>\n\nUse this element with `<paper-item-body>` to make Material Design styled\ntwo-line and three-line items.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n      <iron-icon icon=\"warning\"></iron-icon>\n    </paper-item>\n\nTo use `paper-item` as a link, wrap it in an anchor tag. Since `paper-item` will\nalready receive focus, you may want to prevent the anchor tag from receiving\nfocus as well by setting its tabindex to -1.\n\n    <a href=\"https://www.polymer-project.org/\" tabindex=\"-1\">\n      <paper-item raised>Polymer Project</paper-item>\n    </a>\n\nIf you are concerned about performance and want to use `paper-item` in a\n`paper-listbox` with many items, you can just use a native `button` with the\n`paper-item` class applied (provided you have correctly included the shared\nstyles):\n\n    <style is=\"custom-style\" include=\"paper-item-shared-styles\"></style>\n\n    <paper-listbox>\n      <button class=\"paper-item\" role=\"option\">Inbox</button>\n      <button class=\"paper-item\" role=\"option\">Starred</button>\n      <button class=\"paper-item\" role=\"option\">Sent mail</button>\n    </paper-listbox>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-min-height` | Minimum height of the item | `48px`\n`--paper-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n### Accessibility\n\nThis element has `role=\"listitem\"` by default. Depending on usage, it may be\nmore appropriate to set `role=\"menuitem\"`, `role=\"menuitemcheckbox\"` or\n`role=\"menuitemradio\"`.\n\n    <paper-item role=\"menuitemcheckbox\">\n      <paper-item-body>\n        Show your status\n      </paper-item-body>\n      <paper-checkbox></paper-checkbox>\n    </paper-item>\n\n@group Paper Elements\n@element paper-item\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\">\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n      }\n    </style>\n    <slot></slot>\n`,\n\n  is: 'paper-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/color.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-item-shared-styles\">\n  <template>\n    <style>\n      :host, .paper-item {\n        display: block;\n        position: relative;\n        min-height: var(--paper-item-min-height, 48px);\n        padding: 0px 16px;\n      }\n\n      .paper-item {\n        @apply --paper-font-subhead;\n        border:none;\n        outline: none;\n        background: white;\n        width: 100%;\n        text-align: left;\n      }\n\n      :host([hidden]), .paper-item[hidden] {\n        display: none !important;\n      }\n\n      :host(.iron-selected), .paper-item.iron-selected {\n        font-weight: var(--paper-item-selected-weight, bold);\n\n        @apply --paper-item-selected;\n      }\n\n      :host([disabled]), .paper-item[disabled] {\n        color: var(--paper-item-disabled-color, var(--disabled-text-color));\n\n        @apply --paper-item-disabled;\n      }\n\n      :host(:focus), .paper-item:focus {\n        position: relative;\n        outline: 0;\n\n        @apply --paper-item-focused;\n      }\n\n      :host(:focus):before, .paper-item:focus:before {\n        @apply --layout-fit;\n\n        background: currentColor;\n        content: '';\n        opacity: var(--dark-divider-opacity);\n        pointer-events: none;\n\n        @apply --paper-item-focused-before;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {AppLayoutBehavior} from '../app-layout-behavior/app-layout-behavior.js';\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\nPolymer({\n  /** @override */\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n\n  is: 'app-header-layout',\n  behaviors: [AppLayoutBehavior],\n\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {type: Boolean, value: false, reflectToAttribute: true}\n  },\n\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return dom(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function() {\n    var header = this.header;\n    if (!this.isAttached || !header) {\n      return;\n    }\n    // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n    this.$.wrapper.classList.remove('initializing');\n    // Update scroll target.\n    header.scrollTarget = this.hasScrollingRegion ?\n        this.$.contentContainer :\n        this.ownerDocument.documentElement;\n    // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n    var headerHeight = header.offsetHeight;\n    // Update the header position.\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function() {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    }\n    // Update the content container position.\n    var containerStyle = this.$.contentContainer.style;\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n\nexport interface ConfigPageNavigation {\n  page: string;\n  core?: boolean;\n  advanced?: boolean;\n}\n\n@customElement(\"ha-config-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n  @property() public pages!: ConfigPageNavigation[];\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-card>\n        ${this.pages.map(({ page, core, advanced }) =>\n          (core || isComponentLoaded(this.hass, page)) &&\n          (!advanced || this.showAdvanced)\n            ? html`\n                <a href=${`/config/${page}`}>\n                  <paper-item>\n                    <paper-item-body two-line=\"\">\n                      ${this.hass.localize(`ui.panel.config.${page}.caption`)}\n                      <div secondary>\n                        ${this.hass.localize(\n                          `ui.panel.config.${page}.description`\n                        )}\n                      </div>\n                    </paper-item-body>\n                    <ha-icon-next></ha-icon-next>\n                  </paper-item>\n                </a>\n              `\n            : \"\"\n        )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-navigation\": HaConfigNavigation;\n  }\n}\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResultArray,\n  css,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/app-layout/app-header-layout/app-header-layout\";\nimport \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\n\nimport \"../../../components/ha-menu-button\";\n\nimport { haStyle } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { CloudStatus, CloudStatusLoggedIn } from \"../../../data/cloud\";\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\n\nimport \"../../../components/ha-card\";\n\nimport \"../ha-config-section\";\nimport \"./ha-config-navigation\";\n\n@customElement(\"ha-config-dashboard\")\nclass HaConfigDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public isWide!: boolean;\n  @property() public cloudStatus!: CloudStatus;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <app-header-layout has-scrolling-region>\n        <app-header fixed slot=\"header\">\n          <app-toolbar>\n            <ha-menu-button\n              .hass=${this.hass}\n              .narrow=${this.narrow}\n            ></ha-menu-button>\n            <div main-title>${this.hass.localize(\"panel.config\")}</div>\n          </app-toolbar>\n        </app-header>\n\n        <ha-config-section .narrow=${this.narrow} .isWide=${this.isWide}>\n          <div slot=\"header\">\n            ${this.hass.localize(\"ui.panel.config.header\")}\n          </div>\n\n          <div slot=\"introduction\">\n            ${this.hass.localize(\"ui.panel.config.introduction\")}\n          </div>\n\n          ${isComponentLoaded(this.hass, \"cloud\")\n            ? html`\n          <ha-card>\n            <a href='/config/cloud' tabindex=\"-1\">\n              <paper-item>\n                <paper-item-body two-line=\"\">\n                ${this.hass.localize(\"ui.panel.config.cloud.caption\")}\n                  ${\n                    this.cloudStatus.logged_in\n                      ? html`\n                          <div secondary=\"\">\n                            ${this.hass.localize(\n                              \"ui.panel.config.cloud.description_login\",\n                              \"email\",\n                              (this.cloudStatus as CloudStatusLoggedIn).email\n                            )}\n                          </div>\n                        `\n                      : html`\n                          <div secondary=\"\">\n                            ${this.hass.localize(\n                              \"ui.panel.config.cloud.description_features\"\n                            )}\n                          </div>\n                        `\n                  }\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </ha-card>\n          </a>\n        `\n            : \"\"}\n\n          <ha-config-navigation\n            .hass=${this.hass}\n            .showAdvanced=${this.showAdvanced}\n            .pages=${[\n              { page: \"integrations\", core: true },\n              { page: \"devices\", core: true },\n              { page: \"automation\" },\n              { page: \"script\" },\n              { page: \"scene\" },\n            ]}\n          ></ha-config-navigation>\n\n          <ha-config-navigation\n            .hass=${this.hass}\n            .showAdvanced=${this.showAdvanced}\n            .pages=${[\n              { page: \"core\", core: true },\n              { page: \"server_control\", core: true },\n              { page: \"entity_registry\", core: true },\n              { page: \"area_registry\", core: true },\n              { page: \"person\" },\n              { page: \"users\", core: true },\n              { page: \"zha\" },\n              { page: \"zwave\" },\n              { page: \"customize\", core: true, advanced: true },\n            ]}\n          ></ha-config-navigation>\n\n          ${!this.showAdvanced\n            ? html`\n                <div class=\"promo-advanced\">\n                  ${this.hass.localize(\n                    \"ui.panel.profile.advanced_mode.hint_enable\"\n                  )}\n                  <a href=\"/profile\"\n                    >${this.hass.localize(\n                      \"ui.panel.profile.advanced_mode.link_profile_page\"\n                    )}</a\n                  >.\n                </div>\n              `\n            : \"\"}\n        </ha-config-section>\n      </app-header-layout>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyle,\n      css`\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card a {\n          text-decoration: none;\n          color: var(--primary-text-color);\n        }\n        .promo-advanced {\n          text-align: center;\n          color: var(--secondary-text-color);\n        }\n        .promo-advanced a {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-dashboard\": HaConfigDashboard;\n  }\n}\n"],"sourceRoot":""}