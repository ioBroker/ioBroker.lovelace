{"version":3,"sources":["webpack:///./src/mixins/localize-mixin.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./node_modules/@polymer/iron-image/iron-image.js","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/panels/map/ha-entity-marker.js","webpack:///./src/panels/map/ha-panel-map.js"],"names":["dedupingMixin","superClass","hass","Object","localize","type","Function","computed","computeStateName","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","EventsMixin","detail","options","fireEvent","node","this","ironIconClass","customElements","get","loaded","HaIcon","eventName","methodName","_iconsetName","define","computeStateDomain","computeDomain","entityId","substr","indexOf","Polymer","_template","html","is","properties","src","String","value","alt","crossorigin","preventLoad","Boolean","sizing","reflectToAttribute","position","preload","placeholder","observer","fade","notify","readOnly","loading","error","width","Number","height","observers","created","_resolvedSrc","_imgOnLoad","$","img","_resolveSrc","_setLoading","_setLoaded","_setError","_imgOnError","removeAttribute","sizedImgDiv","style","backgroundImage","_computePlaceholderHidden","_computePlaceholderClassName","_computeImgDivHidden","_computeImgDivARIAHidden","_computeImgDivARIALabel","split","pop","_computeImgHidden","_widthChanged","isNaN","_heightChanged","_loadStateObserver","newResolvedSrc","_placeholderChanged","_transformChanged","sizedImgDivStyle","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","testSrc","resolved","resolveUrl","baseURIAnchor","href","length","location","origin","protocol","host","setupLeafletMap","mapElement","async","darkMode","parentNode","Error","Leaflet","Icon","Default","imagePath","map","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","HaEntityMarker","entityName","entityPicture","addEventListener","ev","badgeTap","stopPropagation","fire","PolymerElement","HaPanelMap","narrow","loadMap","_map","drawEntities","invalidateSize","fitMap","remove","bounds","_mapItems","LatLng","config","latitude","longitude","latLngBounds","item","getLatLng","fitBounds","pad","forEach","marker","mapItems","keys","states","entity","title","hidden","state","icon","passive","iconHTML","el","outerHTML","innerHTML","divIcon","iconSize","className","push","interactive","circle","color","radius","entity_picture","part","join","gps_accuracy","LocalizeMixin"],"mappings":"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","file":"chunk.bb85e939029b3e79ef0b.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {resolveUrl} from '@polymer/polymer/lib/utils/resolve-url.js';\n\n/**\n`iron-image` is an element for displaying an image that provides useful sizing and\npreloading options not found on the standard `<img>` tag.\n\nThe `sizing` option allows the image to be either cropped (`cover`) or\nletterboxed (`contain`) to fill a fixed user-size placed on the element.\n\nThe `preload` option prevents the browser from rendering the image until the\nimage is fully loaded.  In the interim, either the element's CSS `background-color`\ncan be be used as the placeholder, or the `placeholder` property can be\nset to a URL (preferably a data-URI, for instant rendering) for an\nplaceholder image.\n\nThe `fade` option (only valid when `preload` is set) will cause the placeholder\nimage/color to be faded out once the image is rendered.\n\nExamples:\n\n  Basically identical to `<img src=\"...\">` tag:\n\n    <iron-image src=\"http://lorempixel.com/400/400\"></iron-image>\n\n  Will letterbox the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"contain\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will crop the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"cover\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show light-gray background until the image loads:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show a base-64 encoded placeholder image until the image loads:\n\n    <iron-image style=\"width:400px; height:400px;\" placeholder=\"data:image/gif;base64,...\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will fade the light-gray background out once the image is loaded:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload fade src=\"http://lorempixel.com/600/400\"></iron-image>\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-image-placeholder` | Mixin applied to #placeholder | `{}`\n`--iron-image-width` | Sets the width of the wrapped image | `auto`\n`--iron-image-height` | Sets the height of the wrapped image | `auto`\n\n@group Iron Elements\n@element iron-image\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        overflow: hidden;\n        position: relative;\n      }\n\n      #baseURIAnchor {\n        display: none;\n      }\n\n      #sizedImgDiv {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        display: none;\n      }\n\n      #img {\n        display: block;\n        width: var(--iron-image-width, auto);\n        height: var(--iron-image-height, auto);\n      }\n\n      :host([sizing]) #sizedImgDiv {\n        display: block;\n      }\n\n      :host([sizing]) #img {\n        display: none;\n      }\n\n      #placeholder {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        background-color: inherit;\n        opacity: 1;\n\n        @apply --iron-image-placeholder;\n      }\n\n      #placeholder.faded-out {\n        transition: opacity 0.5s linear;\n        opacity: 0;\n      }\n    </style>\n\n    <a id=\"baseURIAnchor\" href=\"#\"></a>\n    <div id=\"sizedImgDiv\" role=\"img\" hidden$=\"[[_computeImgDivHidden(sizing)]]\" aria-hidden$=\"[[_computeImgDivARIAHidden(alt)]]\" aria-label$=\"[[_computeImgDivARIALabel(alt, src)]]\"></div>\n    <img id=\"img\" alt$=\"[[alt]]\" hidden$=\"[[_computeImgHidden(sizing)]]\" crossorigin$=\"[[crossorigin]]\" on-load=\"_imgOnLoad\" on-error=\"_imgOnError\">\n    <div id=\"placeholder\" hidden$=\"[[_computePlaceholderHidden(preload, fade, loading, loaded)]]\" class$=\"[[_computePlaceholderClassName(preload, fade, loading, loaded)]]\"></div>\n`,\n\n  is: 'iron-image',\n\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {type: String, value: ''},\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {type: String, value: null},\n\n    /**\n     * CORS enabled images support:\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n     */\n    crossorigin: {type: String, value: null},\n\n    /**\n     * When true, the image is prevented from loading and any placeholder is\n     * shown.  This may be useful when a binding to the src property is known to\n     * be invalid, to prevent 404 requests.\n     */\n    preventLoad: {type: Boolean, value: false},\n\n    /**\n     * Sets a sizing option for the image.  Valid values are `contain` (full\n     * aspect ratio of the image is contained within the element and\n     * letterboxed) or `cover` (image is cropped in order to fully cover the\n     * bounds of the element), or `null` (default: image takes natural size).\n     */\n    sizing: {type: String, value: null, reflectToAttribute: true},\n\n    /**\n     * When a sizing option is used (`cover` or `contain`), this determines\n     * how the image is aligned within the element bounds.\n     */\n    position: {type: String, value: 'center'},\n\n    /**\n     * When `true`, any change to the `src` property will cause the\n     * `placeholder` image to be shown until the new image has loaded.\n     */\n    preload: {type: Boolean, value: false},\n\n    /**\n     * This image will be used as a background/placeholder until the src image\n     * has loaded.  Use of a data-URI for placeholder is encouraged for instant\n     * rendering.\n     */\n    placeholder: {type: String, value: null, observer: '_placeholderChanged'},\n\n    /**\n     * When `preload` is true, setting `fade` to true will cause the image to\n     * fade into place.\n     */\n    fade: {type: Boolean, value: false},\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that tracks the loading state of the image when the\n     * `preload` option is used.\n     */\n    loading: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also\n     * be set via CSS.\n     */\n    width: {observer: '_widthChanged', type: Number, value: null},\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also\n     * be set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {observer: '_heightChanged', type: Number, value: null},\n  },\n\n  observers: [\n    '_transformChanged(sizing, position)',\n    '_loadStateObserver(src, preventLoad)'\n  ],\n\n  created: function() {\n    this._resolvedSrc = '';\n  },\n\n  _imgOnLoad: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _imgOnError: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computePlaceholderHidden: function() {\n    return !this.preload || (!this.fade && !this.loading && this.loaded);\n  },\n\n  _computePlaceholderClassName: function() {\n    return (this.preload && this.fade && !this.loading && this.loaded) ?\n        'faded-out' :\n        '';\n  },\n\n  _computeImgDivHidden: function() {\n    return !this.sizing;\n  },\n\n  _computeImgDivARIAHidden: function() {\n    return this.alt === '' ? 'true' : undefined;\n  },\n\n  _computeImgDivARIALabel: function() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // Polymer.ResolveUrl.resolveUrl will resolve '' relative to a URL x to\n    // that URL x, but '' is the default for src.\n    if (this.src === '') {\n      return '';\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved.replace(/[?|#].*/g, '').split('/').pop();\n  },\n\n  _computeImgHidden: function() {\n    return !!this.sizing;\n  },\n\n  _widthChanged: function() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + 'px';\n  },\n\n  _heightChanged: function() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + 'px';\n  },\n\n  _loadStateObserver: function(src, preventLoad) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n\n    this._resolvedSrc = '';\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    if (src === '' || preventLoad) {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this._resolvedSrc = newResolvedSrc;\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage =\n          'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _placeholderChanged: function() {\n    this.$.placeholder.style.backgroundImage =\n        this.placeholder ? 'url(\"' + this.placeholder + '\")' : '';\n  },\n\n  _transformChanged: function() {\n    var sizedImgDivStyle = this.$.sizedImgDiv.style;\n    var placeholderStyle = this.$.placeholder.style;\n\n    sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize =\n        this.sizing;\n\n    sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition =\n        this.sizing ? this.position : '';\n\n    sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat =\n        this.sizing ? 'no-repeat' : '';\n  },\n\n  _resolveSrc: function(testSrc) {\n    var resolved = resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved.length >= 2 && resolved[0] === '/' && resolved[1] !== '/') {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved = (location.origin || location.protocol + '//' + location.host) +\n          resolved;\n    }\n    return resolved;\n  }\n});\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import \"@polymer/iron-image/iron-image\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaEntityMarker extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-positioning\"></style>\n      <style>\n        .marker {\n          vertical-align: top;\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: 2.5em;\n          text-align: center;\n          height: 2.5em;\n          line-height: 2.5em;\n          font-size: 1.5em;\n          border-radius: 50%;\n          border: 0.1em solid\n            var(--ha-marker-color, var(--default-primary-color));\n          color: rgb(76, 76, 76);\n          background-color: white;\n        }\n        iron-image {\n          border-radius: 50%;\n        }\n      </style>\n\n      <div class=\"marker\">\n        <template is=\"dom-if\" if=\"[[entityName]]\"\n          >[[entityName]]</template\n        >\n        <template is=\"dom-if\" if=\"[[entityPicture]]\">\n          <iron-image\n            sizing=\"cover\"\n            class=\"fit\"\n            src=\"[[entityPicture]]\"\n          ></iron-image>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      entityId: {\n        type: String,\n        value: \"\",\n      },\n\n      entityName: {\n        type: String,\n        value: null,\n      },\n\n      entityPicture: {\n        type: String,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.badgeTap(ev));\n  }\n\n  badgeTap(ev) {\n    ev.stopPropagation();\n    if (this.entityId) {\n      this.fire(\"hass-more-info\", { entityId: this.entityId });\n    }\n  }\n}\n\ncustomElements.define(\"ha-entity-marker\", HaEntityMarker);\n","import \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-icon\";\n\nimport \"./ha-entity-marker\";\n\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\nimport { setupLeafletMap } from \"../../common/dom/setup-leaflet-map\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelMap extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        #map {\n          height: calc(100% - 64px);\n          width: 100%;\n          z-index: 0;\n        }\n\n        .light {\n          color: #000000;\n        }\n      </style>\n\n      <app-toolbar>\n        <ha-menu-button hass=\"[[hass]]\" narrow=\"[[narrow]]\"></ha-menu-button>\n        <div main-title>[[localize('panel.map')]]</div>\n      </app-toolbar>\n\n      <div id=\"map\"></div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"drawEntities\",\n      },\n      narrow: Boolean,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.loadMap();\n  }\n\n  async loadMap() {\n    [this._map, this.Leaflet] = await setupLeafletMap(this.$.map);\n    this.drawEntities(this.hass);\n    this._map.invalidateSize();\n    this.fitMap();\n  }\n\n  disconnectedCallback() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  fitMap() {\n    var bounds;\n\n    if (this._mapItems.length === 0) {\n      this._map.setView(\n        new this.Leaflet.LatLng(\n          this.hass.config.latitude,\n          this.hass.config.longitude\n        ),\n        14\n      );\n    } else {\n      bounds = new this.Leaflet.latLngBounds(\n        this._mapItems.map((item) => item.getLatLng())\n      );\n      this._map.fitBounds(bounds.pad(0.5));\n    }\n  }\n\n  drawEntities(hass) {\n    /* eslint-disable vars-on-top */\n    var map = this._map;\n    if (!map) return;\n\n    if (this._mapItems) {\n      this._mapItems.forEach(function(marker) {\n        marker.remove();\n      });\n    }\n    var mapItems = (this._mapItems = []);\n\n    Object.keys(hass.states).forEach((entityId) => {\n      var entity = hass.states[entityId];\n      var title = computeStateName(entity);\n\n      if (\n        (entity.attributes.hidden && computeStateDomain(entity) !== \"zone\") ||\n        entity.state === \"home\" ||\n        !(\"latitude\" in entity.attributes) ||\n        !(\"longitude\" in entity.attributes)\n      ) {\n        return;\n      }\n\n      var icon;\n\n      if (computeStateDomain(entity) === \"zone\") {\n        // DRAW ZONE\n        if (entity.attributes.passive) return;\n\n        // create icon\n        var iconHTML = \"\";\n        if (entity.attributes.icon) {\n          const el = document.createElement(\"ha-icon\");\n          el.setAttribute(\"icon\", entity.attributes.icon);\n          iconHTML = el.outerHTML;\n        } else {\n          const el = document.createElement(\"span\");\n          el.innerHTML = title;\n          iconHTML = el.outerHTML;\n        }\n\n        icon = this.Leaflet.divIcon({\n          html: iconHTML,\n          iconSize: [24, 24],\n          className: \"light\",\n        });\n\n        // create marker with the icon\n        mapItems.push(\n          this.Leaflet.marker(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              icon: icon,\n              interactive: false,\n              title: title,\n            }\n          ).addTo(map)\n        );\n\n        // create circle around it\n        mapItems.push(\n          this.Leaflet.circle(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              interactive: false,\n              color: \"#FF9800\",\n              radius: entity.attributes.radius,\n            }\n          ).addTo(map)\n        );\n\n        return;\n      }\n\n      // DRAW ENTITY\n      // create icon\n      var entityPicture = entity.attributes.entity_picture || \"\";\n      var entityName = title\n        .split(\" \")\n        .map(function(part) {\n          return part.substr(0, 1);\n        })\n        .join(\"\");\n      /* Leaflet clones this element before adding it to the map. This messes up\n         our Polymer object and we can't pass data through. Thus we hack like this. */\n      icon = this.Leaflet.divIcon({\n        html:\n          \"<ha-entity-marker entity-id='\" +\n          entity.entity_id +\n          \"' entity-name='\" +\n          entityName +\n          \"' entity-picture='\" +\n          entityPicture +\n          \"'></ha-entity-marker>\",\n        iconSize: [45, 45],\n        className: \"\",\n      });\n\n      // create market with the icon\n      mapItems.push(\n        this.Leaflet.marker(\n          [entity.attributes.latitude, entity.attributes.longitude],\n          {\n            icon: icon,\n            title: computeStateName(entity),\n          }\n        ).addTo(map)\n      );\n\n      // create circle around if entity has accuracy\n      if (entity.attributes.gps_accuracy) {\n        mapItems.push(\n          this.Leaflet.circle(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              interactive: false,\n              color: \"#0288D1\",\n              radius: entity.attributes.gps_accuracy,\n            }\n          ).addTo(map)\n        );\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-panel-map\", HaPanelMap);\n"],"sourceRoot":""}