{"version":3,"sources":["webpack:///./src/panels/config/cloud/forgot-password/cloud-forgot-password.js"],"names":["CloudForgotPassword","html","hass","Object","email","type","String","notify","observer","_requestInProgress","Boolean","value","_error","this","$","invalid","ev","keyCode","_handleEmailPasswordReset","preventDefault","includes","callApi","then","fire","flashMessage","err","setProperties","body","message","LocalizeMixin","EventsMixin","PolymerElement","customElements","define"],"mappings":"2jGAcMA,E,ucAEF,OAAOC,YAAP,O,iCA+DA,MAAO,CACLC,KAAMC,OACNC,MAAO,CACLC,KAAMC,OACNC,QAAQ,EACRC,SAAU,iBAEZC,mBAAoB,CAClBJ,KAAMK,QACNC,OAAO,GAETC,OAAQ,CACNP,KAAMC,OACNK,MAAO,S,yCAMXE,KAAKD,OAAS,GACdC,KAAKC,EAAEV,MAAMW,SAAU,I,+BAGhBC,GAEY,KAAfA,EAAGC,UACLJ,KAAKK,4BACLF,EAAGG,oB,kDAIqB,WACrBN,KAAKT,OAAUS,KAAKT,MAAMgB,SAAS,OACtCP,KAAKC,EAAEV,MAAMW,SAAU,GAGrBF,KAAKC,EAAEV,MAAMW,UAEjBF,KAAKJ,oBAAqB,EAE1BI,KAAKX,KACFmB,QAAQ,OAAQ,wBAAyB,CACxCjB,MAAOS,KAAKT,QAEbkB,MACC,WACE,EAAKb,oBAAqB,EAC1B,EAAKc,KAAK,aAAc,CACtBC,aACE,8EAGN,SAACC,GAAD,OACE,EAAKC,cAAc,CACjBjB,oBAAoB,EACpBG,OACEa,GAAOA,EAAIE,MAAQF,EAAIE,KAAKC,QACxBH,EAAIE,KAAKC,QACT,2B,8BA3HgBC,YAAcC,YAAYC,OAiI5DC,eAAeC,OAAO,wBAAyBjC","file":"chunk.77d55f90f94dfd7ee62d.js","sourcesContent":["import \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudForgotPassword extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n\n        ha-card {\n          max-width: 600px;\n          margin: 0 auto;\n          margin-top: 24px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        .card-actions a {\n          color: var(--primary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <hass-subpage header=[[localize('ui.panel.config.cloud.forgot_password.title')]]>\n        <div class=\"content\">\n          <ha-card header=[[localize('ui.panel.config.cloud.forgot_password.subtitle')]]>\n            <div class=\"card-content\">\n              <p>\n                [[localize('ui.panel.config.cloud.forgot_password.instructions')]]\n              </p>\n              <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n              <paper-input\n                autofocus=\"\"\n                id=\"email\"\n                label=\"[[localize('ui.panel.config.cloud.forgot_password.email')]]\"\n                value=\"{{email}}\"\n                type=\"email\"\n                on-keydown=\"_keyDown\"\n                error-message=\"[[localize('ui.panel.config.cloud.forgot_password.email_error_msg')]]\"\n              ></paper-input>\n            </div>\n            <div class=\"card-actions\">\n              <ha-progress-button\n                on-click=\"_handleEmailPasswordReset\"\n                progress=\"[[_requestInProgress]]\"\n                >[[localize('ui.panel.config.cloud.forgot_password.send_reset_email')]]</ha-progress-button\n              >\n            </div>\n          </ha-card>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      email: {\n        type: String,\n        notify: true,\n        observer: \"_emailChanged\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      _error: {\n        type: String,\n        value: \"\",\n      },\n    };\n  }\n\n  _emailChanged() {\n    this._error = \"\";\n    this.$.email.invalid = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleEmailPasswordReset();\n      ev.preventDefault();\n    }\n  }\n\n  _handleEmailPasswordReset() {\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n    }\n\n    if (this.$.email.invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/forgot_password\", {\n        email: this.email,\n      })\n      .then(\n        () => {\n          this._requestInProgress = false;\n          this.fire(\"cloud-done\", {\n            flashMessage:\n              \"[[localize('ui.panel.config.cloud.forgot_password.check_your_email')]]\",\n          });\n        },\n        (err) =>\n          this.setProperties({\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          })\n      );\n  }\n}\n\ncustomElements.define(\"cloud-forgot-password\", CloudForgotPassword);\n"],"sourceRoot":""}