{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./node_modules/@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js","webpack:///./node_modules/@polymer/paper-input/paper-textarea.js","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/lovelace/components/hui-action-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-picture-glance-card-editor.ts"],"names":["struct","superstruct","types","value","includes","icon","customElement","property","themes","concat","Object","keys","this","hass","sort","html","label","localize","_changed","map","theme","css","ev","target","fireEvent","LitElement","Polymer","_template","is","behaviors","IronValidatableBehavior","IronControlState","properties","observer","type","String","notify","bindValue","rows","Number","maxRows","autocomplete","autofocus","Boolean","inputmode","placeholder","readonly","required","minlength","maxlength","listeners","$","textarea","selectionStart","selectionEnd","attached","navigator","userAgent","match","style","marginLeft","validate","valid","validity","hasValidator","call","invalid","fire","_bindValueChanged","_valueChanged","mirror","innerHTML","_valueForMirror","_onInput","event","eventPath","dom","path","_constrain","tokens","_tokens","length","slice","push","join","input","replace","split","_updateCached","PaperInputBehavior","IronFormElementBehavior","_ariaLabelledBy","_ariaDescribedBy","start","end","_ariaLabelledByChanged","ariaLabelledBy","_focusableElement","setAttribute","_ariaDescribedByChanged","ariaDescribedBy","inputElement","actionConfigStruct","action","navigation_path","url_path","service","service_data","entitiesConfigStruct","union","entity","name","HaComboBox","allowCustomValue","items","_items","itemLabelPath","itemValuePath","opened","newVal","item","stopPropagation","EventsMixin","PolymerElement","customElements","define","HaServicePicker","_services","Array","oldHass","services","result","forEach","domain","i","LocalizeMixin","config","actions","indexOf","_action","_navigation_path","_url_path","_service","configValue","cardConfigStruct","title","image","camera_image","camera_view","aspect_ratio","tap_action","optional","hold_action","entities","HuiPictureGlanceCardEditor","_config","_configEntities","processEditorEntities","_camera_image","state_image","show_name","show_state","views","configElementStyle","_title","_image","_camera_view","view","_aspect_ratio","_entity","_tap_action","_hold_action","_theme","detail"],"mappings":"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","file":"chunk.565949d7f15c94064be5.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-autogrow-textarea` is an element containing a textarea that grows in\nheight as more lines of input are entered. Unless an explicit height or the\n`maxRows` property is set, it will never scroll.\n\nExample:\n\n    <iron-autogrow-textarea></iron-autogrow-textarea>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-autogrow-textarea` | Mixin applied to the textarea | `{}`\n`--iron-autogrow-textarea-placeholder` | Mixin applied to the textarea placeholder | `{}`\n\n@group Iron Elements\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        width: 400px;\n        border: 1px solid;\n        padding: 2px;\n        -moz-appearance: textarea;\n        -webkit-appearance: textarea;\n        overflow: hidden;\n      }\n\n      .mirror-text {\n        visibility: hidden;\n        word-wrap: break-word;\n        @apply --iron-autogrow-textarea;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n\n      textarea {\n        position: relative;\n        outline: none;\n        border: none;\n        resize: none;\n        background: inherit;\n        color: inherit;\n        /* see comments in template */\n        width: 100%;\n        height: 100%;\n        font-size: inherit;\n        font-family: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        @apply --iron-autogrow-textarea;\n      }\n\n      textarea::-webkit-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea::-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-ms-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n    </style>\n\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\n    <div id=\"mirror\" class=\"mirror-text\" aria-hidden=\"true\">&nbsp;</div>\n\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\n    <div class=\"textarea-container fit\">\n      <textarea id=\"textarea\" name\\$=\"[[name]]\" aria-label\\$=\"[[label]]\" autocomplete\\$=\"[[autocomplete]]\" autofocus\\$=\"[[autofocus]]\" inputmode\\$=\"[[inputmode]]\" placeholder\\$=\"[[placeholder]]\" readonly\\$=\"[[readonly]]\" required\\$=\"[[required]]\" disabled\\$=\"[[disabled]]\" rows\\$=\"[[rows]]\" minlength\\$=\"[[minlength]]\" maxlength\\$=\"[[maxlength]]\"></textarea>\n    </div>\n`,\n\n  is: 'iron-autogrow-textarea',\n  behaviors: [IronValidatableBehavior, IronControlState],\n\n  properties: {\n    /**\n     * Use this property instead of `bind-value` for two-way data binding.\n     * @type {string|number}\n     */\n    value: {observer: '_valueChanged', type: String, notify: true},\n\n    /**\n     * This property is deprecated, and just mirrors `value`. Use `value`\n     * instead.\n     * @type {string|number}\n     */\n    bindValue: {observer: '_bindValueChanged', type: String, notify: true},\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type number\n     * @default 1\n     */\n    rows: {type: Number, value: 1, observer: '_updateCached'},\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type number\n     * @default 0\n     */\n    maxRows: {type: Number, value: 0, observer: '_updateCached'},\n\n    /**\n     * Bound to the textarea's `autocomplete` attribute.\n     */\n    autocomplete: {type: String, value: 'off'},\n\n    /**\n     * Bound to the textarea's `autofocus` attribute.\n     */\n    autofocus: {type: Boolean, value: false},\n\n    /**\n     * Bound to the textarea's `inputmode` attribute.\n     */\n    inputmode: {type: String},\n\n    /**\n     * Bound to the textarea's `placeholder` attribute.\n     */\n    placeholder: {type: String},\n\n    /**\n     * Bound to the textarea's `readonly` attribute.\n     */\n    readonly: {type: String},\n\n    /**\n     * Set to true to mark the textarea as required.\n     */\n    required: {type: Boolean},\n\n    /**\n     * The minimum length of the input value.\n     */\n    minlength: {type: Number},\n\n    /**\n     * The maximum length of the input value.\n     */\n    maxlength: {type: Number},\n\n    /**\n     * Bound to the textarea's `aria-label` attribute.\n     */\n    label: {type: String}\n\n  },\n\n  listeners: {'input': '_onInput'},\n\n  /**\n   * Returns the underlying textarea.\n   * @return {!HTMLTextAreaElement}\n   */\n  get textarea() {\n    return this.$.textarea;\n  },\n\n  /**\n   * Returns textarea's selection start.\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.textarea.selectionStart;\n  },\n\n  /**\n   * Returns textarea's selection end.\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.textarea.selectionEnd;\n  },\n\n  /**\n   * Sets the textarea's selection start.\n   */\n  set selectionStart(value) {\n    this.$.textarea.selectionStart = value;\n  },\n\n  /**\n   * Sets the textarea's selection end.\n   */\n  set selectionEnd(value) {\n    this.$.textarea.selectionEnd = value;\n  },\n\n  attached: function() {\n    /* iOS has an arbitrary left margin of 3px that isn't present\n     * in any other browser, and means that the paper-textarea's cursor\n     * overlaps the label.\n     * See https://github.com/PolymerElements/paper-input/issues/468.\n     */\n    var IS_IOS = navigator.userAgent.match(/iP(?:[oa]d|hone)/);\n    if (IS_IOS) {\n      this.$.textarea.style.marginLeft = '-3px';\n    }\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, if it exists; otherwise, the `textarea`'s validity\n   * is used.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    // Use the nested input's native validity.\n    var valid = this.$.textarea.validity.valid;\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.value === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.value);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _bindValueChanged: function(bindValue) {\n    this.value = bindValue;\n  },\n\n  _valueChanged: function(value) {\n    var textarea = this.textarea;\n    if (!textarea) {\n      return;\n    }\n\n    // If the bindValue changed manually, then we need to also update\n    // the underlying textarea's value. Otherwise this change was probably\n    // generated from the _onInput handler, and the two values are already\n    // the same.\n    if (textarea.value !== value) {\n      textarea.value = !(value || value === 0) ? '' : value;\n    }\n\n    this.bindValue = value;\n    this.$.mirror.innerHTML = this._valueForMirror();\n\n    // Manually notify because we don't want to notify until after setting\n    // value.\n    this.fire('bind-value-changed', {value: this.bindValue});\n  },\n\n  _onInput: function(event) {\n    var eventPath = dom(event).path;\n    this.value = eventPath ? eventPath[0].value : event.target.value;\n  },\n\n  _constrain: function(tokens) {\n    var _tokens;\n    tokens = tokens || [''];\n    // Enforce the min and max heights for a multiline input to avoid\n    // measurement\n    if (this.maxRows > 0 && tokens.length > this.maxRows) {\n      _tokens = tokens.slice(0, this.maxRows);\n    } else {\n      _tokens = tokens.slice(0);\n    }\n    while (this.rows > 0 && _tokens.length < this.rows) {\n      _tokens.push('');\n    }\n    // Use &#160; instead &nbsp; of to allow this element to be used in XHTML.\n    return _tokens.join('<br/>') + '&#160;';\n  },\n\n  _valueForMirror: function() {\n    var input = this.textarea;\n    if (!input) {\n      return;\n    }\n    this.tokens = (input && input.value) ? input.value.replace(/&/gm, '&amp;')\n                                               .replace(/\"/gm, '&quot;')\n                                               .replace(/'/gm, '&#39;')\n                                               .replace(/</gm, '&lt;')\n                                               .replace(/>/gm, '&gt;')\n                                               .split('\\n') :\n                                           [''];\n    return this._constrain(this.tokens);\n  },\n\n  _updateCached: function() {\n    this.$.mirror.innerHTML = this._constrain(this.tokens);\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/*\n`<paper-textarea>` is a multi-line text field with Material Design styling.\n\n    <paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container no-label-float$=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <iron-autogrow-textarea class=\"paper-input-input\" slot=\"input\" id$=\"[[_inputId]]\" aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" bind-value=\"{{value}}\" invalid=\"{{invalid}}\" validator$=\"[[validator]]\" disabled$=\"[[disabled]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" required$=\"[[required]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" autocapitalize$=\"[[autocapitalize]]\" rows$=\"[[rows]]\" max-rows$=\"[[maxRows]]\" on-change=\"_onChange\"></iron-autogrow-textarea>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n`,\n\n  is: 'paper-textarea',\n\n  behaviors: [\n    PaperInputBehavior,\n    IronFormElementBehavior,\n  ],\n\n  properties: {\n    _ariaLabelledBy: {\n      observer: '_ariaLabelledByChanged',\n      type: String,\n    },\n\n    _ariaDescribedBy: {\n      observer: '_ariaDescribedByChanged',\n      type: String,\n    },\n\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String,\n    },\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type {number}\n     * @default 1\n     */\n    rows: {\n      type: Number,\n      value: 1,\n    },\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type {number}\n     * @default 0\n     */\n    maxRows: {\n      type: Number,\n      value: 0,\n    },\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.input.textarea.selectionStart;\n  },\n\n  set selectionStart(start) {\n    this.$.input.textarea.selectionStart = start;\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.input.textarea.selectionEnd;\n  },\n\n  set selectionEnd(end) {\n    this.$.input.textarea.selectionEnd = end;\n  },\n\n  _ariaLabelledByChanged: function(ariaLabelledBy) {\n    this._focusableElement.setAttribute('aria-labelledby', ariaLabelledBy);\n  },\n\n  _ariaDescribedByChanged: function(ariaDescribedBy) {\n    this._focusableElement.setAttribute('aria-describedby', ariaDescribedBy);\n  },\n\n  get _focusableElement() {\n    return this.inputElement.textarea;\n  }\n});\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../components/ha-service-picker\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { EditorTarget } from \"../editor/types\";\nimport {\n  ActionConfig,\n  NavigateActionConfig,\n  CallServiceActionConfig,\n  UrlActionConfig,\n} from \"../../../data/lovelace\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"action-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"action-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-action-editor\")\nexport class HuiActionEditor extends LitElement {\n  @property() public config?: ActionConfig;\n\n  @property() public label?: string;\n\n  @property() public actions?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  get _action(): string {\n    return this.config!.action || \"\";\n  }\n\n  get _navigation_path(): string {\n    const config = this.config! as NavigateActionConfig;\n    return config.navigation_path || \"\";\n  }\n\n  get _url_path(): string {\n    const config = this.config! as UrlActionConfig;\n    return config.url_path || \"\";\n  }\n\n  get _service(): string {\n    const config = this.config! as CallServiceActionConfig;\n    return config.service || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.actions) {\n      return html``;\n    }\n    return html`\n      <paper-dropdown-menu\n        .label=\"${this.label}\"\n        .configValue=\"${\"action\"}\"\n        @value-changed=\"${this._valueChanged}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.actions.indexOf(this._action)}\"\n        >\n          ${this.actions.map((action) => {\n            return html`\n              <paper-item>${action}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n      ${this._action === \"navigate\"\n        ? html`\n            <paper-input\n              label=\"Navigation Path\"\n              .value=\"${this._navigation_path}\"\n              .configValue=\"${\"navigation_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this._action === \"url\"\n        ? html`\n            <paper-input\n              label=\"Url Path\"\n              .value=\"${this._url_path}\"\n              .configValue=\"${\"url_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this.config && this.config.action === \"call-service\"\n        ? html`\n            <ha-service-picker\n              .hass=\"${this.hass}\"\n              .value=\"${this._service}\"\n              .configValue=\"${\"service\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></ha-service-picker>\n            <h3>Toggle Editor to input Service Data</h3>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue === \"action\") {\n      this.config = { action: \"none\" };\n    }\n    if (target.configValue) {\n      this.config = { ...this.config!, [target.configValue!]: target.value };\n      fireEvent(this, \"action-changed\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-action-editor\": HuiActionEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../components/hui-action-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../components/hui-theme-select-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { PictureGlanceCardConfig } from \"../../cards/types\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  entity: \"string?\",\n  image: \"string?\",\n  camera_image: \"string?\",\n  camera_view: \"string?\",\n  aspect_ratio: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n  entities: [entitiesConfigStruct],\n  theme: \"string?\",\n});\n\n@customElement(\"hui-picture-glance-card-editor\")\nexport class HuiPictureGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureGlanceCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: PictureGlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _image(): string {\n    return this._config!.image || this._camera_image\n      ? \"\"\n      : \"https://www.home-assistant.io/images/merchandise/shirt-frontpage.png\";\n  }\n\n  get _camera_image(): string {\n    return this._config!.camera_image || \"\";\n  }\n\n  get _camera_view(): string {\n    return this._config!.camera_view || this._camera_image ? \"auto\" : \"\";\n  }\n\n  get _state_image(): {} {\n    return this._config!.state_image || {};\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"more-info\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"more-info\" };\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || false;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || false;\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"more-info\", \"toggle\", \"navigate\", \"call-service\", \"none\"];\n    const views = [\"auto\", \"live\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._image}\"\n          .configValue=\"${\"image\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.camera_image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._camera_image}\"\n          .configValue=${\"camera_image\"}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n          include-domains='[\"camera\"]'\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-dropdown-menu\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.camera_view\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .configValue=\"${\"camera_view\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=\"${views.indexOf(this._camera_view)}\"\n            >\n              ${views.map((view) => {\n                return html`\n                  <paper-item>${view}</paper-item>\n                `;\n              })}\n            </paper-listbox>\n          </paper-dropdown-menu>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${Number(this._aspect_ratio.replace(\"%\", \"\"))}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.tap_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hold_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n        </div>\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._valueChanged}\"\n        ></hui-entity-editor>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    let value = target.value;\n\n    if (target.configValue! === \"aspect_ratio\" && target.value) {\n      value += \"%\";\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        this[`_${target.configValue}`] === value ||\n        this[`_${target.configValue}`] === target.config\n      ) {\n        return;\n      }\n\n      if (value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: value ? value : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-glance-card-editor\": HuiPictureGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}