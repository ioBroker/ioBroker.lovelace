{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-shopping-list-editor.ts"],"names":["struct","superstruct","types","value","includes","icon","customElement","property","themes","concat","Object","keys","this","hass","sort","html","label","localize","_changed","map","theme","css","ev","target","fireEvent","LitElement","cardConfigStruct","type","title","HuiShoppingListEditor","config","_config","_title","_valueChanged","_theme","configValue"],"mappings":"oGAAA,kCAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACL,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,+C,03QCqBX,EADCE,YAAc,6BACf,yD,4FAAA,0F,qEAAA,gE,kOAAA,yCACGC,eADH,oDAEGA,eAFH,oDAGGA,eAHH,2DAKE,WACE,IAAMC,EAAS,CAAC,mBAAoB,WAAWC,OAC7CC,OAAOC,KAAKC,KAAKC,KAAML,OAAOA,QAAQM,QAGxC,OAAOC,YAAP,IAEaH,KAAKI,OACZJ,KAAKC,KAAMI,SAAS,+CAClB,KACAL,KAAKC,KAAMI,SACT,iDAEF,IAEcL,KAAKM,SAIRN,KAAKT,MAGhBK,EAAOW,KAAI,SAACC,GACZ,OAAOL,YAAP,IACuBK,EAAUA,SA7B7C,yCAqCE,WACE,OAAOC,YAAP,OAtCJ,oCA6CE,SAAiBC,GACVV,KAAKC,MAA4B,KAApBS,EAAGC,OAAOpB,QAG5BS,KAAKT,MAAQmB,EAAGC,OAAOpB,MACvBqB,YAAUZ,KAAM,wBAlDsBa,M,s/ECR1C,IAAMC,EAAmB1B,YAAO,CAC9B2B,KAAM,SACNC,MAAO,UACPR,MAAO,YAIIS,E,+1LAAb,EADCvB,YAAc,mCACf,yD,4FAAA,0F,qEAAA,gE,kOAAA,yCAEGC,eAFH,mDAIGA,eAJH,iEAME,SAAiBuB,GACfA,EAASJ,EAAiBI,GAC1BlB,KAAKmB,QAAUD,IARnB,+BAWE,WACE,OAAOlB,KAAKmB,QAASH,OAAS,KAZlC,+BAeE,WACE,OAAOhB,KAAKmB,QAASX,OAAS,qBAhBlC,kCAmBE,WACE,OAAKR,KAAKC,KAIHE,YAAP,IAGgBH,KAAKC,KAAKI,SAClB,+CACIL,KAAKC,KAAKI,SACd,iDAEQL,KAAKoB,OACC,QACEpB,KAAKqB,cAGdrB,KAAKC,KACJD,KAAKsB,OACC,QACEtB,KAAKqB,eAnBpBlB,YAAP,OArBN,yCA8CE,SAAsBO,GACpB,GAAKV,KAAKmB,SAAYnB,KAAKC,KAA3B,CAGA,I,MAAMU,EAASD,EAAGC,OAElB,GAAIX,KAAK,IAAL,OAASW,EAAOY,gBAAmBZ,EAAOpB,MAG1CoB,EAAOY,cACY,KAAjBZ,EAAOpB,aACFS,KAAKmB,QAAQR,EAAOY,aAE3BvB,KAAKmB,QAAL,iBACKnB,KAAKmB,S,EADV,G,EAEGR,EAAOY,Y,EAAeZ,EAAOpB,M,kGAIpCqB,YAAUZ,KAAM,iBAAkB,CAAEkB,OAAQlB,KAAKmB,iBAjEVN","file":"chunk.6ad5d980c8928015c292.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { ShoppingListCardConfig } from \"../../cards/types\";\n\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-shopping-list-card-editor\")\nexport class HuiShoppingListEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: ShoppingListCardConfig;\n\n  public setConfig(config: ShoppingListCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-shopping-list-card-editor\": HuiShoppingListEditor;\n  }\n}\n"],"sourceRoot":""}