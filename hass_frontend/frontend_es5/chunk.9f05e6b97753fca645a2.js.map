{"version":3,"sources":["webpack:///./src/resources/markdown_worker.ts","webpack:///../src/rpc-wrapper.js","webpack:///./src/components/ha-markdown.ts","webpack:///./src/components/ha-paper-slider.js","webpack:///./src/components/ha-form/ha-form-string.ts","webpack:///./src/components/ha-form/ha-form-integer.ts","webpack:///./src/components/ha-form/ha-form-float.ts","webpack:///./src/components/ha-form/ha-form-boolean.ts","webpack:///./src/components/ha-form/ha-form-select.ts","webpack:///./src/components/ha-form/ha-form-positive_time_period_dict.ts","webpack:///./src/components/ha-form/ha-form.ts","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./node_modules/@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js","webpack:///./src/panels/profile/ha-mfa-module-setup-flow.js"],"names":["addMethods","methods","module","exports","w","Worker","name","worker","c","callbacks","e","d","f","Object","Error","evt","document","method","Promise","id","a","type","params","customElement","HaMarkdown","property","Boolean","changedProps","markdownWorker","this","_render","renderMarkdown","content","breaks","gfm","tables","allowSvg","innerHTML","_resize","walker","createTreeWalker","nextNode","node","currentNode","HTMLAnchorElement","host","location","target","rel","addEventListener","fireEvent","UpdatingElement","PaperSliderClass","customElements","get","HaPaperSlider","tpl","createElement","template","styleEl","appendChild","define","query","_input","focus","schema","includes","html","_unmaskedPassword","label","data","required","_valueChanged","_toggleUnmaskedPassword","_stringType","ev","active","value","format","LitElement","_value","valueMin","valueMax","Number","suffix","checked","css","options","map","item","_optionValue","_optionLabel","Array","isArray","detail","itemValue","_parseDuration","_hours","_minutes","_seconds","_hourChanged","_minChanged","_secChanged","hours","minutes","seconds","toString","padStart","_durationChanged","unit","Math","floor","input","_childForm","_elementContainer","lastChild","undefined","error","base","_computeError","_getValue","computeError","computeLabel","computeSuffix","changedProperties","schemaChanged","has","oldSchema","element","_computeLabel","_computeSuffix","removeChild","description","obj","stopPropagation","HaIronFocusablesHelper","getTabbableNodes","result","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","tabIndex","_normalizedTabIndex","needsSort","push","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","haTabFixBehaviorImpl","HaPaperDialog","mixinBehaviors","Polymer","_template","is","properties","dialogElement","$","scrollable","ready","_ensureTarget","classList","add","attached","requestAnimationFrame","updateScrollState","bind","toggleClass","scrollTarget","scrollTop","offsetHeight","scrollHeight","parentElement","behaviors","indexOf","PaperDialogBehaviorImpl","sizingTarget","remove","instance","HaMfaModuleSetupFlow","_hass","_dialogClosedCallback","Function","_instance","_loading","_errorMsg","String","_opened","_step","_stepData","keyCode","_submitStep","hass","continueFlowId","mfaModuleId","dialogClosedCallback","_createdFromHandler","fetchStep","callWS","flow_id","mfa_module_id","curInstance","then","step","_processStep","setTimeout","dialog","center","user_input","err","body","message","errors","keys","flowFinished","b","_flowDone","localize","handler","reason","step_id","args","placeholders","description_placeholders","forEach","key","LocalizeMixin","EventsMixin","PolymerElement"],"mappings":"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","file":"chunk.9f05e6b97753fca645a2.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"renderMarkdown\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"e6e258f7ff337a3dd465.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","export default function addMethods(worker, methods) {\n\tlet c = 0;\n\tlet callbacks = {};\n\tworker.addEventListener('message', (e) => {\n\t\tlet d = e.data;\n\t\tif (d.type!=='RPC') return;\n\t\tif (d.id) {\n\t\t\tlet f = callbacks[d.id];\n\t\t\tif (f) {\n\t\t\t\tdelete callbacks[d.id];\n\t\t\t\tif (d.error) {\n\t\t\t\t\tf[1](Object.assign(Error(d.error.message), d.error));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf[0](d.result);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet evt = document.createEvent('Event');\n\t\t\tevt.initEvent(d.method, false, false);\n\t\t\tevt.data = d.params;\n\t\t\tworker.dispatchEvent(evt);\n\t\t}\n\t});\n\tmethods.forEach( method => {\n\t\tworker[method] = (...params) => new Promise( (a, b) => {\n\t\t\tlet id = ++c;\n\t\t\tcallbacks[id] = [a, b];\n\t\t\tworker.postMessage({ type: 'RPC', id, method, params });\n\t\t});\n\t});\n}\n","import { UpdatingElement, property, customElement } from \"lit-element\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// @ts-ignore\n// tslint:disable-next-line: no-implicit-dependencies\nimport markdownWorker from \"workerize-loader!../resources/markdown_worker\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\nlet worker: any | undefined;\n\n@customElement(\"ha-markdown\")\nclass HaMarkdown extends UpdatingElement {\n  @property() public content = \"\";\n  @property({ type: Boolean }) public allowSvg = false;\n\n  protected update(changedProps) {\n    super.update(changedProps);\n\n    if (!worker) {\n      worker = markdownWorker();\n    }\n\n    this._render();\n  }\n\n  private async _render() {\n    this.innerHTML = await worker.renderMarkdown(\n      this.content,\n      {\n        breaks: true,\n        gfm: true,\n        tables: true,\n      },\n      {\n        allowSvg: this.allowSvg,\n      }\n    );\n\n    this._resize();\n\n    const walker = document.createTreeWalker(\n      this,\n      1 /* SHOW_ELEMENT */,\n      null,\n      false\n    );\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode;\n\n      // Open external links in a new window\n      if (\n        node instanceof HTMLAnchorElement &&\n        node.host !== document.location.host\n      ) {\n        node.target = \"_blank\";\n\n        // protect referrer on external links and deny window.opener access for security reasons\n        // (see https://mathiasbynens.github.io/rel-noopener/)\n        node.rel = \"noreferrer noopener\";\n\n        // Fire a resize event when images loaded to notify content resized\n      } else if (node) {\n        node.addEventListener(\"load\", this._resize);\n      }\n    }\n  }\n\n  private _resize = () => fireEvent(this, \"iron-resize\");\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n","import \"@polymer/paper-slider/paper-slider\";\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin paper-slider\n */\nconst PaperSliderClass = customElements.get(\"paper-slider\");\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement(\"template\");\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = document.createElement(\"style\");\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n\n      :host([dir=\"rtl\"]) .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        }\n    `;\n    tpl.content.appendChild(styleEl);\n    return tpl;\n  }\n}\ncustomElements.define(\"ha-paper-slider\", HaPaperSlider);\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\n\nimport { HaFormElement, HaFormStringData, HaFormStringSchema } from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\n\n@customElement(\"ha-form-string\")\nexport class HaFormString extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormStringSchema;\n  @property() public data!: HaFormStringData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @property() private _unmaskedPassword = false;\n  @query(\"paper-input\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return this.schema.name.includes(\"password\")\n      ? html`\n          <paper-input\n            .type=${this._unmaskedPassword ? \"text\" : \"password\"}\n            .label=${this.label}\n            .value=${this.data}\n            .required=${this.schema.required}\n            .autoValidate=${this.schema.required}\n            @value-changed=${this._valueChanged}\n          >\n            <paper-icon-button\n              toggles\n              .active=${this._unmaskedPassword}\n              slot=\"suffix\"\n              .icon=${this._unmaskedPassword ? \"hass:eye-off\" : \"hass:eye\"}\n              id=\"iconButton\"\n              title=\"Click to toggle between masked and clear password\"\n              @click=${this._toggleUnmaskedPassword}\n            >\n            </paper-icon-button>\n          </paper-input>\n        `\n      : html`\n          <paper-input\n            .type=${this._stringType}\n            .label=${this.label}\n            .value=${this.data}\n            .required=${this.schema.required}\n            .autoValidate=${this.schema.required}\n            error-message=\"Required\"\n            @value-changed=${this._valueChanged}\n          ></paper-input>\n        `;\n  }\n\n  private _toggleUnmaskedPassword(ev: Event) {\n    this._unmaskedPassword = (ev.target as any).active;\n  }\n\n  private _valueChanged(ev: Event) {\n    const value = (ev.target as PaperInputElement).value;\n    if (this.data === value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n\n  private _stringType() {\n    if (this.schema.format) {\n      if ([\"email\", \"url\"].includes(this.schema.format)) {\n        return this.schema.format;\n      }\n      if (this.schema.format === \"fqdnurl\") {\n        return \"url\";\n      }\n    }\n    return \"text\";\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-string\": HaFormString;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\nimport {\n  HaFormElement,\n  HaFormIntegerData,\n  HaFormIntegerSchema,\n} from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nimport \"../ha-paper-slider\";\nimport \"@polymer/paper-input/paper-input\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { PaperSliderElement } from \"@polymer/paper-slider/paper-slider\";\n\n@customElement(\"ha-form-integer\")\nexport class HaFormInteger extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormIntegerSchema;\n  @property() public data!: HaFormIntegerData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @query(\"paper-input ha-paper-slider\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return \"valueMin\" in this.schema && \"valueMax\" in this.schema\n      ? html`\n          <div>\n            ${this.label}\n            <ha-paper-slider\n              pin=\"\"\n              .value=${this._value}\n              .min=${this.schema.valueMin}\n              .max=${this.schema.valueMax}\n              @value-changed=${this._valueChanged}\n            ></ha-paper-slider>\n          </div>\n        `\n      : html`\n          <paper-input\n            type=\"number\"\n            .label=${this.label}\n            .value=${this.data}\n            .required=${this.schema.required}\n            .autoValidate=${this.schema.required}\n            @value-changed=${this._valueChanged}\n          ></paper-input>\n        `;\n  }\n\n  private get _value() {\n    return this.data || 0;\n  }\n\n  private _valueChanged(ev: Event) {\n    const value = Number(\n      (ev.target as PaperInputElement | PaperSliderElement).value\n    );\n    if (this._value === value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-integer\": HaFormInteger;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\nimport { HaFormElement, HaFormFloatData, HaFormFloatSchema } from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nimport \"@polymer/paper-input/paper-input\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\n\n@customElement(\"ha-form-float\")\nexport class HaFormFloat extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormFloatSchema;\n  @property() public data!: HaFormFloatData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @query(\"paper-input\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .label=${this.label}\n        .value=${this._value}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        @value-changed=${this._valueChanged}\n      >\n        <span suffix=\"\" slot=\"suffix\">${this.suffix}</span>\n      </paper-input>\n    `;\n  }\n\n  private get _value() {\n    return this.data || 0;\n  }\n\n  private _valueChanged(ev: Event) {\n    const value = Number((ev.target as PaperInputElement).value);\n    if (this._value === value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-float\": HaFormFloat;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  CSSResult,\n  css,\n  query,\n} from \"lit-element\";\nimport {\n  HaFormElement,\n  HaFormBooleanData,\n  HaFormBooleanSchema,\n} from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nimport \"@polymer/paper-checkbox/paper-checkbox\";\n// Not duplicate, is for typing\n// tslint:disable-next-line\nimport { PaperCheckboxElement } from \"@polymer/paper-checkbox/paper-checkbox\";\n\n@customElement(\"ha-form-boolean\")\nexport class HaFormBoolean extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormBooleanSchema;\n  @property() public data!: HaFormBooleanData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @query(\"paper-checkbox\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-checkbox .checked=${this.data} @change=${this._valueChanged}>\n        ${this.label}\n      </paper-checkbox>\n    `;\n  }\n\n  private _valueChanged(ev: Event) {\n    fireEvent(this, \"value-changed\", {\n      value: (ev.target as PaperCheckboxElement).checked,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-checkbox {\n        display: inline-block;\n        padding: 22px 0;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-boolean\": HaFormBoolean;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\nimport { HaFormElement, HaFormSelectData, HaFormSelectSchema } from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-item/paper-item\";\n\n@customElement(\"ha-form-select\")\nexport class HaFormSelect extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormSelectSchema;\n  @property() public data!: HaFormSelectData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @query(\"paper-dropdown-menu\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-dropdown-menu .label=${this.label}>\n        <paper-listbox\n          slot=\"dropdown-content\"\n          attr-for-selected=\"item-value\"\n          .selected=${this.data}\n          @selected-item-changed=${this._valueChanged}\n        >\n          ${this.schema.options!.map(\n            (item) => html`\n              <paper-item .itemValue=${this._optionValue(item)}>\n                ${this._optionLabel(item)}\n              </paper-item>\n            `\n          )}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  private _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  private _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!ev.detail.value) {\n      return;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: ev.detail.value.itemValue,\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-select\": HaFormSelect;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  TemplateResult,\n  query,\n} from \"lit-element\";\nimport { HaFormElement, HaFormTimeData, HaFormTimeSchema } from \"./ha-form\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\n@customElement(\"ha-form-positive_time_period_dict\")\nexport class HaFormTimePeriod extends LitElement implements HaFormElement {\n  @property() public schema!: HaFormTimeSchema;\n  @property() public data!: HaFormTimeData;\n  @property() public label!: string;\n  @property() public suffix!: string;\n  @query(\"paper-time-input\") private _input?: HTMLElement;\n\n  public focus() {\n    if (this._input) {\n      this._input.focus();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    return html`\n      <paper-time-input\n        .label=${this.label}\n        .required=${this.schema.required}\n        .autoValidate=${this.schema.required}\n        error-message=\"Required\"\n        enable-second\n        format=\"24\"\n        .hour=${this._parseDuration(this._hours)}\n        .min=${this._parseDuration(this._minutes)}\n        .sec=${this._parseDuration(this._seconds)}\n        @hour-changed=${this._hourChanged}\n        @min-changed=${this._minChanged}\n        @sec-changed=${this._secChanged}\n        float-input-labels\n        no-hours-limit\n        always-float-input-labels\n        hour-label=\"hh\"\n        min-label=\"mm\"\n        sec-label=\"ss\"\n      ></paper-time-input>\n    `;\n  }\n\n  private get _hours() {\n    return this.data && this.data.hours ? Number(this.data.hours) : 0;\n  }\n\n  private get _minutes() {\n    return this.data && this.data.minutes ? Number(this.data.minutes) : 0;\n  }\n\n  private get _seconds() {\n    return this.data && this.data.seconds ? Number(this.data.seconds) : 0;\n  }\n\n  private _parseDuration(value) {\n    return value.toString().padStart(2, \"0\");\n  }\n\n  private _hourChanged(ev) {\n    this._durationChanged(ev, \"hours\");\n  }\n\n  private _minChanged(ev) {\n    this._durationChanged(ev, \"minutes\");\n  }\n\n  private _secChanged(ev) {\n    this._durationChanged(ev, \"seconds\");\n  }\n\n  private _durationChanged(ev, unit) {\n    let value = Number(ev.detail.value);\n\n    if (value === this[`_${unit}`]) {\n      return;\n    }\n\n    let hours = this._hours;\n    let minutes = this._minutes;\n\n    if (unit === \"seconds\" && value > 59) {\n      minutes = minutes + Math.floor(value / 60);\n      value %= 60;\n    }\n\n    if (unit === \"minutes\" && value > 59) {\n      hours = hours + Math.floor(value / 60);\n      value %= 60;\n    }\n\n    fireEvent(this, \"value-changed\", {\n      value: {\n        hours,\n        minutes,\n        seconds: this._seconds,\n        ...{ [unit]: value },\n      },\n    });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form-positive_time_period_dict\": HaFormTimePeriod;\n  }\n}\n","import {\n  customElement,\n  LitElement,\n  html,\n  property,\n  query,\n  CSSResult,\n  css,\n  PropertyValues,\n} from \"lit-element\";\n\nimport \"./ha-form-string\";\nimport \"./ha-form-integer\";\nimport \"./ha-form-float\";\nimport \"./ha-form-boolean\";\nimport \"./ha-form-select\";\nimport \"./ha-form-positive_time_period_dict\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaFormSchema =\n  | HaFormStringSchema\n  | HaFormIntegerSchema\n  | HaFormFloatSchema\n  | HaFormBooleanSchema\n  | HaFormSelectSchema\n  | HaFormTimeSchema;\n\nexport interface HaFormBaseSchema {\n  name: string;\n  default?: HaFormData;\n  required?: boolean;\n  optional?: boolean;\n  description?: { suffix?: string };\n}\n\nexport interface HaFormIntegerSchema extends HaFormBaseSchema {\n  type: \"integer\";\n  default?: HaFormIntegerData;\n  valueMin?: number;\n  valueMax?: number;\n}\n\nexport interface HaFormSelectSchema extends HaFormBaseSchema {\n  type: \"select\";\n  options?: string[];\n}\n\nexport interface HaFormFloatSchema extends HaFormBaseSchema {\n  type: \"float\";\n}\n\nexport interface HaFormStringSchema extends HaFormBaseSchema {\n  type: \"string\";\n  format?: string;\n}\n\nexport interface HaFormBooleanSchema extends HaFormBaseSchema {\n  type: \"boolean\";\n}\n\nexport interface HaFormTimeSchema extends HaFormBaseSchema {\n  type: \"time\";\n}\n\nexport interface HaFormDataContainer {\n  [key: string]: HaFormData;\n}\n\nexport type HaFormData =\n  | HaFormStringData\n  | HaFormIntegerData\n  | HaFormFloatData\n  | HaFormBooleanData\n  | HaFormSelectData\n  | HaFormTimeData;\n\nexport type HaFormStringData = string;\nexport type HaFormIntegerData = number;\nexport type HaFormFloatData = number;\nexport type HaFormBooleanData = boolean;\nexport type HaFormSelectData = string;\nexport interface HaFormTimeData {\n  hours?: number;\n  minutes?: number;\n  seconds?: number;\n}\n\nexport interface HaFormElement extends LitElement {\n  schema: HaFormSchema;\n  data: HaFormDataContainer | HaFormData;\n  label?: string;\n  suffix?: string;\n}\n\n@customElement(\"ha-form\")\nexport class HaForm extends LitElement implements HaFormElement {\n  @property() public data!: HaFormDataContainer | HaFormData;\n  @property() public schema!: HaFormSchema;\n  @property() public error;\n  @property() public computeError?: (schema: HaFormSchema, error) => string;\n  @property() public computeLabel?: (schema: HaFormSchema) => string;\n  @property() public computeSuffix?: (schema: HaFormSchema) => string;\n  @query(\"ha-form\") private _childForm?: HaForm;\n  @query(\"#element\") private _elementContainer?: HTMLDivElement;\n\n  public focus() {\n    const input = this._childForm\n      ? this._childForm\n      : this._elementContainer\n      ? this._elementContainer.lastChild\n      : undefined;\n\n    if (!input) {\n      return;\n    }\n\n    (input as HTMLElement).focus();\n  }\n\n  protected render() {\n    if (Array.isArray(this.schema)) {\n      return html`\n        ${this.error && this.error.base\n          ? html`\n              <div class=\"error\">\n                ${this._computeError(this.error.base, this.schema)}\n              </div>\n            `\n          : \"\"}\n        ${this.schema.map(\n          (item) => html`\n            <ha-form\n              .data=${this._getValue(this.data, item)}\n              .schema=${item}\n              .error=${this._getValue(this.error, item)}\n              @value-changed=${this._valueChanged}\n              .computeError=${this.computeError}\n              .computeLabel=${this.computeLabel}\n              .computeSuffix=${this.computeSuffix}\n            ></ha-form>\n          `\n        )}\n      `;\n    }\n\n    return html`\n      ${this.error\n        ? html`\n            <div class=\"error\">\n              ${this._computeError(this.error, this.schema)}\n            </div>\n          `\n        : \"\"}\n      <div id=\"element\"></div>\n    `;\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    const schemaChanged = changedProperties.has(\"schema\");\n    const oldSchema = schemaChanged\n      ? changedProperties.get(\"schema\")\n      : undefined;\n    if (\n      !Array.isArray(this.schema) &&\n      schemaChanged &&\n      (!oldSchema || (oldSchema as HaFormSchema).type !== this.schema.type)\n    ) {\n      const element = document.createElement(\n        `ha-form-${this.schema.type}`\n      ) as HaFormElement;\n      element.schema = this.schema;\n      element.data = this.data;\n      element.label = this._computeLabel(this.schema);\n      element.suffix = this._computeSuffix(this.schema);\n      if (this._elementContainer!.lastChild) {\n        this._elementContainer!.removeChild(this._elementContainer!.lastChild);\n      }\n      this._elementContainer!.appendChild(element);\n    } else if (this._elementContainer && this._elementContainer.lastChild) {\n      const element = this._elementContainer!.lastChild as HaFormElement;\n      element.schema = this.schema;\n      element.data = this.data;\n      element.label = this._computeLabel(this.schema);\n      element.suffix = this._computeSuffix(this.schema);\n    }\n  }\n\n  private _computeLabel(schema: HaFormSchema) {\n    return this.computeLabel\n      ? this.computeLabel(schema)\n      : schema\n      ? schema.name\n      : \"\";\n  }\n\n  private _computeSuffix(schema: HaFormSchema) {\n    return this.computeSuffix\n      ? this.computeSuffix(schema)\n      : schema && schema.description\n      ? schema.description.suffix\n      : \"\";\n  }\n\n  private _computeError(error, schema: HaFormSchema) {\n    return this.computeError ? this.computeError(error, schema) : error;\n  }\n\n  private _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    ev.stopPropagation();\n    const schema = (ev.target as HaFormElement).schema;\n    const data = this.data as HaFormDataContainer;\n    data[schema.name] = ev.detail.value;\n    fireEvent(this, \"value-changed\", {\n      value: { ...data },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .error {\n        color: var(--error-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-form\": HaForm;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\n\nimport {PaperDialogBehaviorImpl} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`paper-dialog-scrollable` implements a scrolling area used in a Material Design\ndialog. It shows a divider at the top and/or bottom indicating more content,\ndepending on scroll position. Use this together with elements implementing\n`Polymer.PaperDialogBehavior`.\n\n    <paper-dialog-impl>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\nIt shows a top divider after scrolling if it is not the first child in its\nparent container, indicating there is more content above. It shows a bottom\ndivider if it is scrollable and it is not the last child in its parent\ncontainer, indicating there is more content below. The bottom divider is hidden\nif it is scrolled to the bottom.\n\nIf `paper-dialog-scrollable` is not a direct child of the element implementing\n`Polymer.PaperDialogBehavior`, remember to set the `dialogElement`:\n\n    <paper-dialog-impl id=\"myDialog\">\n      <h2>Header</h2>\n      <div class=\"my-content-wrapper\">\n        <h4>Sub-header</h4>\n        <paper-dialog-scrollable>\n          Lorem ipsum...\n        </paper-dialog-scrollable>\n      </div>\n      <div class=\"buttons\">\n        <paper-button>OK</paper-button>\n      </div>\n    </paper-dialog-impl>\n\n    <script>\n      var scrollable =\nPolymer.dom(myDialog).querySelector('paper-dialog-scrollable');\n      scrollable.dialogElement = myDialog;\n    </script>\n\n### Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-scrollable` | Mixin for the scrollable content | {}\n\n@group Paper Elements\n@element paper-dialog-scrollable\n@demo demo/index.html\n@hero hero.svg\n*/\nPolymer({\n  _template: html`\n    <style>\n\n      :host {\n        display: block;\n        @apply --layout-relative;\n      }\n\n      :host(.is-scrolled:not(:first-child))::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      :host(.can-scroll:not(.scrolled-to-bottom):not(:last-child))::after {\n        content: '';\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: 1px;\n        background: var(--divider-color);\n      }\n\n      .scrollable {\n        padding: 0 24px;\n\n        @apply --layout-scroll;\n        @apply --paper-dialog-scrollable;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n    </style>\n\n    <div id=\"scrollable\" class=\"scrollable\" on-scroll=\"updateScrollState\">\n      <slot></slot>\n    </div>\n`,\n\n  is: 'paper-dialog-scrollable',\n\n  properties: {\n\n    /**\n     * The dialog element that implements `Polymer.PaperDialogBehavior`\n     * containing this element.\n     * @type {?Node}\n     */\n    dialogElement: {type: Object}\n\n  },\n\n  /**\n   * Returns the scrolling element.\n   */\n  get scrollTarget() {\n    return this.$.scrollable;\n  },\n\n  ready: function() {\n    this._ensureTarget();\n    this.classList.add('no-padding');\n  },\n\n  attached: function() {\n    this._ensureTarget();\n    requestAnimationFrame(this.updateScrollState.bind(this));\n  },\n\n  updateScrollState: function() {\n    this.toggleClass('is-scrolled', this.scrollTarget.scrollTop > 0);\n    this.toggleClass(\n        'can-scroll',\n        this.scrollTarget.offsetHeight < this.scrollTarget.scrollHeight);\n    this.toggleClass(\n        'scrolled-to-bottom',\n        this.scrollTarget.scrollTop + this.scrollTarget.offsetHeight >=\n            this.scrollTarget.scrollHeight);\n  },\n\n  _ensureTarget: function() {\n    // Read parentElement instead of parentNode in order to skip shadowRoots.\n    this.dialogElement = this.dialogElement || this.parentElement;\n    // Check if dialog implements paper-dialog-behavior. If not, fit\n    // scrollTarget to host.\n    if (this.dialogElement && this.dialogElement.behaviors &&\n        this.dialogElement.behaviors.indexOf(PaperDialogBehaviorImpl) >= 0) {\n      this.dialogElement.sizingTarget = this.scrollTarget;\n      this.scrollTarget.classList.remove('fit');\n    } else if (this.dialogElement) {\n      this.scrollTarget.classList.add('fit');\n    }\n  }\n});\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/dialog/ha-paper-dialog\";\nimport \"../../components/ha-form/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\n\nimport { EventsMixin } from \"../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\n\nlet instance = 0;\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaMfaModuleSetupFlow extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"ha-style-dialog\">\n        .error {\n          color: red;\n        }\n        ha-paper-dialog {\n          max-width: 500px;\n        }\n        ha-markdown img:first-child:last-child,\n        ha-markdown svg:first-child:last-child {\n          background-color: white;\n          display: block;\n          margin: 0 auto;\n        }\n        ha-markdown a {\n          color: var(--primary-color);\n        }\n        .init-spinner {\n          padding: 10px 100px 34px;\n          text-align: center;\n        }\n        .submit-spinner {\n          margin-right: 16px;\n        }\n      </style>\n      <ha-paper-dialog\n        id=\"dialog\"\n        with-backdrop=\"\"\n        opened=\"{{_opened}}\"\n        on-opened-changed=\"_openedChanged\"\n      >\n        <h2>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            [[localize('ui.panel.profile.mfa_setup.title_aborted')]]\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            [[localize('ui.panel.profile.mfa_setup.title_success')]]\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            [[_computeStepTitle(localize, _step)]]\n          </template>\n        </h2>\n        <paper-dialog-scrollable>\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class=\"error\">[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_step]]\">\n            <div class=\"init-spinner\">\n              <paper-spinner active></paper-spinner>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_step]]\">\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n              <ha-markdown\n                allowsvg\n                content=\"[[_computeStepAbortedReason(localize, _step)]]\"\n              ></ha-markdown>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n              <p>\n                [[localize('ui.panel.profile.mfa_setup.step_done', 'step',\n                _step.title)]]\n              </p>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n              <template\n                is=\"dom-if\"\n                if=\"[[_computeStepDescription(localize, _step)]]\"\n              >\n                <ha-markdown\n                  allowsvg\n                  content=\"[[_computeStepDescription(localize, _step)]]\"\n                ></ha-markdown>\n              </template>\n\n              <ha-form\n                data=\"{{_stepData}}\"\n                schema=\"[[_step.data_schema]]\"\n                error=\"[[_step.errors]]\"\n                compute-label=\"[[_computeLabelCallback(localize, _step)]]\"\n                compute-error=\"[[_computeErrorCallback(localize, _step)]]\"\n              ></ha-form>\n            </template>\n          </template>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\">\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            <mwc-button on-click=\"_flowDone\"\n              >[[localize('ui.panel.profile.mfa_setup.close')]]</mwc-button\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            <mwc-button on-click=\"_flowDone\"\n              >[[localize('ui.panel.profile.mfa_setup.close')]]</mwc-button\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            <template is=\"dom-if\" if=\"[[_loading]]\">\n              <div class=\"submit-spinner\">\n                <paper-spinner active></paper-spinner>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[!_loading]]\">\n              <mwc-button on-click=\"_submitStep\"\n                >[[localize('ui.panel.profile.mfa_setup.submit')]]</mwc-button\n              >\n            </template>\n          </template>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get properties() {\n    return {\n      _hass: Object,\n      _dialogClosedCallback: Function,\n      _instance: Number,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n\n      _step: {\n        type: Object,\n        value: null,\n      },\n\n      /*\n       * Store user entered data.\n       */\n      _stepData: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  showDialog({ hass, continueFlowId, mfaModuleId, dialogClosedCallback }) {\n    this.hass = hass;\n    this._instance = instance++;\n    this._dialogClosedCallback = dialogClosedCallback;\n    this._createdFromHandler = !!mfaModuleId;\n    this._loading = true;\n    this._opened = true;\n\n    const fetchStep = continueFlowId\n      ? this.hass.callWS({\n          type: \"auth/setup_mfa\",\n          flow_id: continueFlowId,\n        })\n      : this.hass.callWS({\n          type: \"auth/setup_mfa\",\n          mfa_module_id: mfaModuleId,\n        });\n\n    const curInstance = this._instance;\n\n    fetchStep.then((step) => {\n      if (curInstance !== this._instance) return;\n\n      this._processStep(step);\n      this._loading = false;\n      // When the flow changes, center the dialog.\n      // Don't do it on each step or else the dialog keeps bouncing.\n      setTimeout(() => this.$.dialog.center(), 0);\n    });\n  }\n\n  _submitStep() {\n    this._loading = true;\n    this._errorMsg = null;\n\n    const curInstance = this._instance;\n\n    this.hass\n      .callWS({\n        type: \"auth/setup_mfa\",\n        flow_id: this._step.flow_id,\n        user_input: this._stepData,\n      })\n      .then(\n        (step) => {\n          if (curInstance !== this._instance) return;\n\n          this._processStep(step);\n          this._loading = false;\n        },\n        (err) => {\n          this._errorMsg =\n            (err && err.body && err.body.message) || \"Unknown error occurred\";\n          this._loading = false;\n        }\n      );\n  }\n\n  _processStep(step) {\n    if (!step.errors) step.errors = {};\n    this._step = step;\n    // We got a new form if there are no errors.\n    if (Object.keys(step.errors).length === 0) {\n      this._stepData = {};\n    }\n  }\n\n  _flowDone() {\n    this._opened = false;\n    const flowFinished =\n      this._step && [\"create_entry\", \"abort\"].includes(this._step.type);\n\n    if (this._step && !flowFinished && this._createdFromHandler) {\n      // console.log('flow not finish');\n    }\n\n    this._dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._errorMsg = null;\n    this._step = null;\n    this._stepData = {};\n    this._dialogClosedCallback = null;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    if (this._step && !ev.detail.value) {\n      this._flowDone();\n    }\n  }\n\n  _computeStepAbortedReason(localize, step) {\n    return localize(\n      `component.auth.mfa_setup.${step.handler}.abort.${step.reason}`\n    );\n  }\n\n  _computeStepTitle(localize, step) {\n    return (\n      localize(\n        `component.auth.mfa_setup.${step.handler}.step.${step.step_id}.title`\n      ) || \"Setup Multi-factor Authentication\"\n    );\n  }\n\n  _computeStepDescription(localize, step) {\n    const args = [\n      `component.auth.mfa_setup.${step.handler}.step.${step.step_id}.description`,\n    ];\n    const placeholders = step.description_placeholders || {};\n    Object.keys(placeholders).forEach((key) => {\n      args.push(key);\n      args.push(placeholders[key]);\n    });\n    return localize(...args);\n  }\n\n  _computeLabelCallback(localize, step) {\n    // Returns a callback for ha-form to calculate labels per schema object\n    return (schema) =>\n      localize(\n        `component.auth.mfa_setup.${step.handler}.step.${step.step_id}.data.${schema.name}`\n      ) || schema.name;\n  }\n\n  _computeErrorCallback(localize, step) {\n    // Returns a callback for ha-form to calculate error messages\n    return (error) =>\n      localize(`component.auth.mfa_setup.${step.handler}.error.${error}`) ||\n      error;\n  }\n}\n\ncustomElements.define(\"ha-mfa-module-setup-flow\", HaMfaModuleSetupFlow);\n"],"sourceRoot":""}