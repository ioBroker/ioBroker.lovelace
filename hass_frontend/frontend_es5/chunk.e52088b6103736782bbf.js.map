{"version":3,"sources":["webpack:///./src/panels/lovelace/editor/card-editor/hui-dialog-move-card-view.ts"],"names":["HuiDialogMoveCardView","customElement","property","params","this","_params","updateComplete","html","_openedChanged","lovelace","config","path","_moveCard","css","shadowRoot","querySelector","e","newView","detail","view","saveConfig","moveCard","_dialog","close","ev","value","undefined","LitElement"],"mappings":"yiGAqBO,IAAMA,E,+1LAAb,EADCC,YAAc,+BACf,yD,4FAAA,0F,qEAAA,gE,kOAAA,yCACGC,eADH,kEAGE,SAAwBC,GAAxB,wFACEC,KAAKC,QAAUF,EADjB,kCAEQC,KAAKE,gBAFb,iDAHF,kCAQE,WACE,OAAKF,KAAKC,QAGHE,YAAP,IAIuBH,KAAKI,eAINJ,KAAKC,QAASI,SAASC,OAC7BN,KAAKC,QAASM,KAAM,GACfP,KAAKQ,WAZjBL,YAAP,OAVN,yCA4BE,WACE,OAAOM,YAAP,OA7BJ,gCAsDE,WACE,OAAOT,KAAKU,WAAYC,cAAc,qBAvD1C,qCA0DE,SAAkBC,GAChB,IAAMC,EAAUD,EAAEE,OAAOC,KACnBR,EAAOP,KAAKC,QAASM,KAC3B,GAAIM,IAAYN,EAAK,GAArB,CAIA,IAAMF,EAAWL,KAAKC,QAASI,SAC/BA,EAASW,WAAWC,YAASZ,EAASC,OAAQC,EAAM,CAACM,KACrDb,KAAKkB,QAAQC,WAnEjB,0CAsEE,SAAuBC,GACfA,EAAGN,OAAeO,QACtBrB,KAAKC,aAAUqB,SAxEsBC","file":"chunk.e52088b6103736782bbf.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\n\nimport \"../../components/hui-views-list\";\n\nimport { moveCard } from \"../config-util\";\nimport { MoveCardViewDialogParams } from \"./show-move-card-view-dialog\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\n\n@customElement(\"hui-dialog-move-card-view\")\nexport class HuiDialogMoveCardView extends LitElement {\n  @property() private _params?: MoveCardViewDialogParams;\n\n  public async showDialog(params: MoveCardViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Choose view to move card</h2>\n        <hui-views-list \n        .lovelaceConfig=${this._params!.lovelace.config} \n        .selected=${this._params!.path![0]} \n        @view-selected=${this._moveCard}>\n        </hui-view-list>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-item {\n        margin: 8px;\n        cursor: pointer;\n      }\n      paper-item[active] {\n        color: var(--primary-color);\n      }\n      paper-item[active]:before {\n        border-radius: 4px;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        content: \"\";\n        background-color: var(--primary-color);\n        opacity: 0.12;\n        transition: opacity 15ms linear;\n        will-change: opacity;\n      }\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _moveCard(e: CustomEvent): void {\n    const newView = e.detail.view;\n    const path = this._params!.path!;\n    if (newView === path[0]) {\n      return;\n    }\n\n    const lovelace = this._params!.lovelace!;\n    lovelace.saveConfig(moveCard(lovelace.config, path, [newView!]));\n    this._dialog.close();\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-move-card-view\": HuiDialogMoveCardView;\n  }\n}\n"],"sourceRoot":""}