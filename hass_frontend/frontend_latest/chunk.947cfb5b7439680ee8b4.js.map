{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/lovelace/components/hui-action-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-picture-glance-card-editor.ts"],"names":["Polymer","_template","html","is","behaviors","PaperItemBehavior","struct","superstruct","types","value","includes","icon","customElement","property","themes","concat","Object","keys","this","hass","sort","label","localize","_changed","map","theme","css","ev","target","fireEvent","LitElement","actionConfigStruct","action","navigation_path","url_path","service","service_data","entitiesConfigStruct","union","entity","name","HaComboBox","EventsMixin","PolymerElement","allowCustomValue","Boolean","items","type","observer","_items","itemLabelPath","String","itemValuePath","autofocus","opened","notify","_openedChanged","newVal","_itemsChanged","_computeToggleIcon","_computeItemLabel","item","_fireChanged","stopPropagation","fire","customElements","define","HaServicePicker","LocalizeMixin","_services","Array","_hassChanged","oldHass","services","result","forEach","domain","i","length","push","config","actions","_valueChanged","indexOf","_action","_navigation_path","_url_path","_service","configValue","cardConfigStruct","title","image","camera_image","camera_view","aspect_ratio","tap_action","optional","hold_action","entities","HuiPictureGlanceCardEditor","_config","_configEntities","processEditorEntities","_camera_image","state_image","show_name","show_state","views","configElementStyle","_title","_image","_camera_view","view","Number","_aspect_ratio","replace","_entity","_tap_action","_hold_action","_theme","detail"],"mappings":"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","file":"chunk.947cfb5b7439680ee8b4.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../components/ha-service-picker\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { EditorTarget } from \"../editor/types\";\nimport {\n  ActionConfig,\n  NavigateActionConfig,\n  CallServiceActionConfig,\n  UrlActionConfig,\n} from \"../../../data/lovelace\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"action-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"action-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-action-editor\")\nexport class HuiActionEditor extends LitElement {\n  @property() public config?: ActionConfig;\n\n  @property() public label?: string;\n\n  @property() public actions?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  get _action(): string {\n    return this.config!.action || \"\";\n  }\n\n  get _navigation_path(): string {\n    const config = this.config! as NavigateActionConfig;\n    return config.navigation_path || \"\";\n  }\n\n  get _url_path(): string {\n    const config = this.config! as UrlActionConfig;\n    return config.url_path || \"\";\n  }\n\n  get _service(): string {\n    const config = this.config! as CallServiceActionConfig;\n    return config.service || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.actions) {\n      return html``;\n    }\n    return html`\n      <paper-dropdown-menu\n        .label=\"${this.label}\"\n        .configValue=\"${\"action\"}\"\n        @value-changed=\"${this._valueChanged}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.actions.indexOf(this._action)}\"\n        >\n          ${this.actions.map((action) => {\n            return html`\n              <paper-item>${action}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n      ${this._action === \"navigate\"\n        ? html`\n            <paper-input\n              label=\"Navigation Path\"\n              .value=\"${this._navigation_path}\"\n              .configValue=\"${\"navigation_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this._action === \"url\"\n        ? html`\n            <paper-input\n              label=\"Url Path\"\n              .value=\"${this._url_path}\"\n              .configValue=\"${\"url_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this.config && this.config.action === \"call-service\"\n        ? html`\n            <ha-service-picker\n              .hass=\"${this.hass}\"\n              .value=\"${this._service}\"\n              .configValue=\"${\"service\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></ha-service-picker>\n            <h3>Toggle Editor to input Service Data</h3>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue === \"action\") {\n      this.config = { action: \"none\" };\n    }\n    if (target.configValue) {\n      this.config = { ...this.config!, [target.configValue!]: target.value };\n      fireEvent(this, \"action-changed\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-action-editor\": HuiActionEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../components/hui-action-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../components/hui-theme-select-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { PictureGlanceCardConfig } from \"../../cards/types\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { processEditorEntities } from \"../process-editor-entities\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  entity: \"string?\",\n  image: \"string?\",\n  camera_image: \"string?\",\n  camera_view: \"string?\",\n  aspect_ratio: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n  entities: [entitiesConfigStruct],\n  theme: \"string?\",\n});\n\n@customElement(\"hui-picture-glance-card-editor\")\nexport class HuiPictureGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureGlanceCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: PictureGlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _image(): string {\n    return this._config!.image || this._camera_image\n      ? \"\"\n      : \"https://www.home-assistant.io/images/merchandise/shirt-frontpage.png\";\n  }\n\n  get _camera_image(): string {\n    return this._config!.camera_image || \"\";\n  }\n\n  get _camera_view(): string {\n    return this._config!.camera_view || this._camera_image ? \"auto\" : \"\";\n  }\n\n  get _state_image(): {} {\n    return this._config!.state_image || {};\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"more-info\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"more-info\" };\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || false;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || false;\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"more-info\", \"toggle\", \"navigate\", \"call-service\", \"none\"];\n    const views = [\"auto\", \"live\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._image}\"\n          .configValue=\"${\"image\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.camera_image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._camera_image}\"\n          .configValue=${\"camera_image\"}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n          include-domains='[\"camera\"]'\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <paper-dropdown-menu\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.camera_view\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .configValue=\"${\"camera_view\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=\"${views.indexOf(this._camera_view)}\"\n            >\n              ${views.map((view) => {\n                return html`\n                  <paper-item>${view}</paper-item>\n                `;\n              })}\n            </paper-listbox>\n          </paper-dropdown-menu>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${Number(this._aspect_ratio.replace(\"%\", \"\"))}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.tap_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hold_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n        </div>\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._valueChanged}\"\n        ></hui-entity-editor>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    let value = target.value;\n\n    if (target.configValue! === \"aspect_ratio\" && target.value) {\n      value += \"%\";\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        this[`_${target.configValue}`] === value ||\n        this[`_${target.configValue}`] === target.config\n      ) {\n        return;\n      }\n\n      if (value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: value ? value : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-glance-card-editor\": HuiPictureGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}