{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/lovelace/components/hui-action-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-picture-card-editor.ts"],"names":["struct","superstruct","types","value","includes","icon","customElement","property","themes","concat","Object","keys","this","hass","sort","html","label","localize","_changed","map","theme","css","ev","target","fireEvent","LitElement","configElementStyle","actionConfigStruct","action","navigation_path","url_path","service","service_data","entitiesConfigStruct","union","entity","name","HaComboBox","EventsMixin","PolymerElement","allowCustomValue","Boolean","items","type","observer","_items","itemLabelPath","String","itemValuePath","autofocus","opened","notify","_openedChanged","newVal","_itemsChanged","_computeToggleIcon","_computeItemLabel","item","_fireChanged","stopPropagation","fire","customElements","define","HaServicePicker","LocalizeMixin","_services","Array","_hassChanged","oldHass","services","result","forEach","domain","i","length","push","config","actions","_valueChanged","indexOf","_action","_navigation_path","_url_path","_service","configValue","cardConfigStruct","image","tap_action","optional","hold_action","HuiPictureCardEditor","_config","_image","_tap_action","_hold_action","_theme"],"mappings":"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","file":"chunk.dc12ec8c42a631e1d5bd.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../components/ha-service-picker\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { EditorTarget } from \"../editor/types\";\nimport {\n  ActionConfig,\n  NavigateActionConfig,\n  CallServiceActionConfig,\n  UrlActionConfig,\n} from \"../../../data/lovelace\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"action-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"action-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-action-editor\")\nexport class HuiActionEditor extends LitElement {\n  @property() public config?: ActionConfig;\n\n  @property() public label?: string;\n\n  @property() public actions?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  get _action(): string {\n    return this.config!.action || \"\";\n  }\n\n  get _navigation_path(): string {\n    const config = this.config! as NavigateActionConfig;\n    return config.navigation_path || \"\";\n  }\n\n  get _url_path(): string {\n    const config = this.config! as UrlActionConfig;\n    return config.url_path || \"\";\n  }\n\n  get _service(): string {\n    const config = this.config! as CallServiceActionConfig;\n    return config.service || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.actions) {\n      return html``;\n    }\n    return html`\n      <paper-dropdown-menu\n        .label=\"${this.label}\"\n        .configValue=\"${\"action\"}\"\n        @value-changed=\"${this._valueChanged}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.actions.indexOf(this._action)}\"\n        >\n          ${this.actions.map((action) => {\n            return html`\n              <paper-item>${action}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n      ${this._action === \"navigate\"\n        ? html`\n            <paper-input\n              label=\"Navigation Path\"\n              .value=\"${this._navigation_path}\"\n              .configValue=\"${\"navigation_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this._action === \"url\"\n        ? html`\n            <paper-input\n              label=\"Url Path\"\n              .value=\"${this._url_path}\"\n              .configValue=\"${\"url_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this.config && this.config.action === \"call-service\"\n        ? html`\n            <ha-service-picker\n              .hass=\"${this.hass}\"\n              .value=\"${this._service}\"\n              .configValue=\"${\"service\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></ha-service-picker>\n            <h3>Toggle Editor to input Service Data</h3>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue === \"action\") {\n      this.config = { action: \"none\" };\n    }\n    if (target.configValue) {\n      this.config = { ...this.config!, [target.configValue!]: target.value };\n      fireEvent(this, \"action-changed\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-action-editor\": HuiActionEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-action-editor\";\nimport \"../../components/hui-theme-select-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { PictureCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  image: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n  theme: \"string?\",\n});\n\n@customElement(\"hui-picture-card-editor\")\nexport class HuiPictureCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureCardConfig;\n\n  public setConfig(config: PictureCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _image(): string {\n    return this._config!.image || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"none\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"none\" };\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"navigate\", \"url\", \"call-service\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._image}\"\n          .configValue=\"${\"image\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.tap_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hold_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (\n      this[`_${target.configValue}`] === target.value ||\n      this[`_${target.configValue}`] === target.config\n    ) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value ? target.value : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-card-editor\": HuiPictureCardEditor;\n  }\n}\n"],"sourceRoot":""}