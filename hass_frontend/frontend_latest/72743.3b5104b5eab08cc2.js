export const __webpack_ids__=["72743"];export const __webpack_modules__={97674:function(e,t,n){n.a(e,(async function(e,o){try{n.d(t,{AH:()=>m,Ai:()=>d,Al:()=>h,vA:()=>p});var r=n(86319),s=n(3938),i=n(6542),a=n(23459),c=n(2621),_=n(14276),l=n(23711),f=n(35895),y=n(20382),g=e([f]);f=(g.then?(await g)():g)[0];const u=(e,t,n,o)=>{const r=n((0,f.zW)(e,t),o);return r instanceof Date?(0,f.Nm)(r,t):r},m=(e,t,n,o,r)=>n.time_zone===y.c_.server?u(e,o.time_zone,t,r):t(e,r),p=(e,t,n,o,r)=>n.time_zone===y.c_.server?u(e,o.time_zone,t,r):t(e,r),d=(e,t,n,o,r)=>p(e,n,o,r,o.time_zone===y.c_.server?(0,f.zW)(t,r.time_zone):t),h=(e,t,n,o,f)=>{let y,g;if(p(e,r.b,o,f)&&p(t,s.h,o,f)){const r=(d(t,e,i.d,o,f)+1)*(n?1:-1);y=m(e,a.z,o,f,r),g=m(m(t,a.z,o,f,r),c.V,o,f)}else{const r=(d(t,e,_._,o,f)+1)*(n?1:-1);y=m(e,l.n,o,f,r),g=m(t,l.n,o,f,r)}return{start:y,end:g}};o()}catch(e){o(e)}}))},47558:function(e,t,n){n.d(t,{v:()=>o});n(92745);const o=(e,t)=>{const n={};for(const o of e){const e=t(o);e in n?n[e].push(o):n[e]=[o]}return n}},75101:function(e,t,n){n.d(t,{$H:()=>o,DJ:()=>a,LZ:()=>s,Nn:()=>y,Ny:()=>g,Pk:()=>m,Q4:()=>i,RQ:()=>_,SO:()=>l,T0:()=>u,aR:()=>r,iJ:()=>f,pB:()=>c});n(9359),n(56475),n(1331);const o=(e,t)=>e.callWS({type:"config_entries/subentries/list",entry_id:t}),r=(e,t,n)=>e.callWS({type:"config_entries/subentries/delete",entry_id:t,subentry_id:n}),s=99387==n.j?["migration_error","setup_error","setup_retry"]:null,i=99387==n.j?["not_loaded","loaded","setup_error","setup_retry"]:null,a=(e,t,n)=>{const o={type:"config_entries/subscribe"};return n&&n.type&&(o.type_filter=n.type),e.connection.subscribeMessage((e=>t(e)),o)},c=(e,t)=>{const n={};return t&&(t.type&&(n.type_filter=t.type),t.domain&&(n.domain=t.domain)),e.callWS({type:"config_entries/get",...n})},_=(e,t)=>e.callWS({type:"config_entries/get_single",entry_id:t}),l=(e,t,n)=>e.callWS({type:"config_entries/update",entry_id:t,...n}),f=(e,t)=>e.callApi("DELETE",`config/config_entries/entry/${t}`),y=(e,t)=>e.callApi("POST",`config/config_entries/entry/${t}/reload`),g=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:"user"}),u=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:null}),m=(e,t)=>{if(!t)return e;const n=e.find((e=>e.entry_id===t));if(!n)return e;return[n,...e.filter((e=>e.entry_id!==t))]}},1118:function(e,t,n){n.a(e,(async function(e,o){try{n.d(t,{Bm:()=>S,Cj:()=>H,E4:()=>G,EH:()=>U,G9:()=>N,Jj:()=>O,KU:()=>D,P:()=>W,UB:()=>$,ZC:()=>j,_Z:()=>z,b:()=>Q,gy:()=>C,iK:()=>k,jB:()=>x,kJ:()=>R,o1:()=>E,rl:()=>A,vE:()=>I,xZ:()=>P,yH:()=>Z});n(92745),n(9359),n(31526),n(70104);var r=n(13809),s=n(86319),i=n(3938),a=n(23459),c=n(6542),_=n(32424),l=n(23711),f=n(7591),y=n(96500),g=n(38836),u=n(62212),m=n(27486),p=n(97674),d=n(33570),h=n(47558),b=n(75101),v=n(17705),w=e([d,p]);[d,p]=w.then?(await w)():w;const T=[],S=()=>({stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),E=()=>({stat_energy_to:"",stat_compensation:null,entity_energy_price:null,number_energy_price:null}),k=()=>({type:"grid",flow_from:[],flow_to:[],cost_adjustment_day:0}),A=()=>({type:"solar",stat_energy_from:"",config_entry_solar_forecast:null}),W=()=>({type:"battery",stat_energy_from:"",stat_energy_to:""}),D=()=>({type:"gas",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),H=()=>({type:"water",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),P=e=>e.callWS({type:"energy/info"}),C=async e=>(await e.loadBackendTranslation("issues","energy"),e.callWS({type:"energy/validate"})),j=e=>e.callWS({type:"energy/get_prefs"}),z=async(e,t)=>{const n=e.callWS({type:"energy/save_prefs",...t});return J(e),n},L=async(e,t,n,o,r,s="hour")=>e.callWS({type:"energy/fossil_energy_consumption",start_time:t.toISOString(),end_time:r?.toISOString(),energy_statistic_ids:n,co2_statistic_id:o,period:s}),O=e=>(0,h.v)(e.energy_sources,(e=>e.type)),Z=(e,t,n)=>{const o=[];for(const r of e.energy_sources)if(!n||n.includes(r.type))if("solar"!==r.type)if("gas"!==r.type&&"water"!==r.type)if("battery"!==r.type){for(const e of r.flow_from){o.push(e.stat_energy_from),e.stat_cost&&o.push(e.stat_cost);const n=t.cost_sensors[e.stat_energy_from];n&&o.push(n)}for(const e of r.flow_to){o.push(e.stat_energy_to),e.stat_compensation&&o.push(e.stat_compensation);const n=t.cost_sensors[e.stat_energy_to];n&&o.push(n)}}else o.push(r.stat_energy_from),o.push(r.stat_energy_to);else{o.push(r.stat_energy_from),r.stat_cost&&o.push(r.stat_cost);const e=t.cost_sensors[r.stat_energy_from];e&&o.push(e)}else o.push(r.stat_energy_from);return n&&!n.includes("device")||o.push(...e.device_consumption.map((e=>e.stat_consumption))),o},B=async(e,t,n,o,f)=>{const[y,g]=await Promise.all([(0,b.pB)(e,{domain:"co2signal"}),P(e)]),u=y.length?y[0]:void 0;let m;if(u)for(const t of Object.values(e.entities)){if("co2signal"!==t.platform)continue;const n=e.states[t.entity_id];if(n&&"%"===n.attributes.unit_of_measurement){m=n.entity_id;break}}const d=[];for(const e of t.energy_sources)if("grid"===e.type)for(const t of e.flow_from)d.push(t.stat_energy_from);const h=Z(t,g,["grid","solar","battery","gas","device"]),w=Z(t,g,["water"]),T=[...h,...w],S=(0,r.j)(o||new Date,n),E=(0,s.b)(n)&&(!o||(0,i.h)(o))&&S>35?"month":S>2?"day":"hour",k=e.config.unit_system.length||"",A={energy:"kWh",volume:"km"===k?"m続":"ft続"},W={volume:"km"===k?"L":"gal"},D=h.length?(0,v.dL)(e,n,o,h,E,A,["change"]):{},H=w.length?(0,v.dL)(e,n,o,w,E,W,["change"]):{};let C,j,z,O,B,J={},M={};f&&(j=(0,p.vA)(n,s.b,e.locale,e.config)&&(0,p.vA)(o||new Date,i.h,e.locale,e.config)?(0,p.AH)(n,a.z,e.locale,e.config,-(0,p.Ai)(o||new Date,n,c.d,e.locale,e.config)-1):(0,p.AH)(n,_.E,e.locale,e.config,-1*(S+1)),z=(0,l.n)(n,-1),h.length&&(J=(0,v.dL)(e,j,z,h,E,A,["change"])),w.length&&(M=(0,v.dL)(e,j,z,w,E,W,["change"]))),void 0!==m&&(O=L(e,n,d,m,o,S>35?"month":S>2?"day":"hour"),f&&(B=L(e,j,d,m,z,S>35?"month":S>2?"day":"hour")));const $={},x=T.length?(0,v.Py)(e,T):[],[K,N,I,Q,R,U,q]=await Promise.all([D,H,J,M,x,O,B]),G={...K,...N};f&&(C={...I,...Q}),T.length&&R.forEach((e=>{$[e.statistic_id]=e}));return{start:n,end:o,startCompare:j,endCompare:z,info:g,prefs:t,stats:G,statsMetadata:$,statsCompare:C,co2SignalConfigEntry:u,co2SignalEntity:m,fossilEnergyConsumption:U,fossilEnergyConsumptionCompare:q}},J=e=>{T.forEach((t=>{const n=$(e,{key:t});n.clearPrefs(),n._active&&n.refresh()}))},M=e=>{if(e._refreshTimeout&&clearTimeout(e._refreshTimeout),e._active&&(!e.end||e.end>new Date)){const t=new Date;t.getMinutes()>=20&&t.setHours(t.getHours()+1),t.setMinutes(20,0,0),e._refreshTimeout=window.setTimeout((()=>e.refresh()),t.getTime()-Date.now())}},$=(e,t={})=>{let n="_energy";if(t.key){if(!t.key.startsWith("energy_"))throw new Error("Key need to start with energy_");n=`_${t.key}`}if(e.connection[n])return e.connection[n];T.push(t.key);const o=(0,u._)(e.connection,n,(async()=>(o.prefs||(o.prefs=await j(e)),M(o),B(e,o.prefs,o.start,o.end,o.compare)))),r=o.subscribe;o.subscribe=e=>{const t=r(e);return o._active++,void 0===o._refreshTimeout&&M(o),()=>{o._active--,o._active<1&&(clearTimeout(o._refreshTimeout),o._refreshTimeout=void 0),t()}},o._active=0,o.prefs=t.prefs;const s=new Date,i=(0,d.Zs)(s,e.locale,e.config).split(":")[0];o.start=(0,p.AH)("0"===i?(0,_.E)(s,-1):s,f.b,e.locale,e.config),o.end=(0,p.AH)("0"===i?(0,_.E)(s,-1):s,y.i,e.locale,e.config);const a=()=>{o._updatePeriodTimeout=window.setTimeout((()=>{o.start=(0,p.AH)(new Date,f.b,e.locale,e.config),o.end=(0,p.AH)(new Date,y.i,e.locale,e.config),a()}),(0,g.T)((0,p.AH)(s,y.i,e.locale,e.config),1).getTime()-Date.now())};return a(),o.clearPrefs=()=>{o.prefs=void 0},o.setPeriod=(t,n)=>{o.start=t,o.end=n,o.start.getTime()!==(0,p.AH)(new Date,f.b,e.locale,e.config).getTime()||o.end?.getTime()!==(0,p.AH)(new Date,y.i,e.locale,e.config).getTime()||o._updatePeriodTimeout?o._updatePeriodTimeout&&(clearTimeout(o._updatePeriodTimeout),o._updatePeriodTimeout=void 0):a()},o.setCompare=e=>{o.compare=e},o},x=e=>e.callWS({type:"energy/solar_forecast"}),K=["volume","energy"],N=(e,t,n={})=>{for(const o of e.energy_sources){if("gas"!==o.type)continue;if(t&&t===o.stat_energy_from)continue;const e=n[o.stat_energy_from];if(K.includes(e?.unit_class))return e.unit_class}},I=(e,t,n={})=>{const o=N(t,void 0,n);if(void 0!==o)return"energy"===o?"kWh":"km"===e.config.unit_system.length?"m続":"ft続"},Q=e=>"km"===e.config.unit_system.length?"L":"gal",R="/docs/energy/faq/#troubleshooting-missing-entities",U=(0,m.Z)((e=>({summedData:q(e),compareSummedData:e.statsCompare?q(e,!0):void 0}))),q=(e,t)=>{const n={};for(const t of e.prefs.energy_sources)if("solar"!==t.type)if("battery"!==t.type){if("grid"===t.type){for(const e of t.flow_from)n.from_grid?n.from_grid.push(e.stat_energy_from):n.from_grid=[e.stat_energy_from];for(const e of t.flow_to)n.to_grid?n.to_grid.push(e.stat_energy_to):n.to_grid=[e.stat_energy_to]}}else n.to_battery?(n.to_battery.push(t.stat_energy_to),n.from_battery.push(t.stat_energy_from)):(n.to_battery=[t.stat_energy_to],n.from_battery=[t.stat_energy_from]);else n.solar?n.solar.push(t.stat_energy_from):n.solar=[t.stat_energy_from];const o={};return Object.entries(n).forEach((([n,r])=>{const s={},i={};r.forEach((n=>{const o=t?e.statsCompare[n]:e.stats[n];if(!o)return;o.forEach((e=>{if(null===e.change||void 0===e.change)return;const t=e.change;s[e.start]=e.start in s?s[e.start]+t:t})),i[n]={}})),o[n]=s})),o},G=(0,m.Z)(((e,t)=>({consumption:V(e),compareConsumption:t?V(t):void 0}))),V=e=>{const t={total:{}};return Object.keys(e).forEach((n=>{Object.keys(e[n]).forEach((n=>{if(void 0===t.total[n]){const o=(e.from_grid?.[n]||0)+(e.solar?.[n]||0)+(e.from_battery?.[n]||0)-(e.to_grid?.[n]||0)-(e.to_battery?.[n]||0);t.total[n]=o}}))})),t};o()}catch(e){o(e)}}))}};
//# sourceMappingURL=72743.3b5104b5eab08cc2.js.map