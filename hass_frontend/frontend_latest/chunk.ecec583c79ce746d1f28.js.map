{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/components/hui-input-list-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-map-card-editor.ts"],"names":["struct","superstruct","types","value","includes","icon","actionConfigStruct","action","navigation_path","url_path","service","service_data","entitiesConfigStruct","union","entity","name","customElement","property","this","html","map","listEntry","index","inputLabel","_valueChanged","_consolidateEntries","_removeEntry","_addEntry","ev","target","newEntries","concat","fireEvent","blur","stopPropagation","splice","parent","currentTarget","parentElement","css","LitElement","cardConfigStruct","type","title","aspect_ratio","default_zoom","dark_mode","entities","geo_location_sources","HuiMapCardEditor","config","_config","_configEntities","processEditorEntities","NaN","hass","configElementStyle","localize","_title","_aspect_ratio","_default_zoom","_dark_mode","_entitiesValueChanged","_geo_location_sources","detail","configValue","Number","isNaN","undefined","checked"],"mappings":"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","file":"chunk.ecec583c79ce746d1f28.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  css,\n  LitElement,\n  property,\n  TemplateResult,\n  CSSResult,\n  customElement,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\n\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-input-list-editor\")\nexport class HuiInputListEditor extends LitElement {\n  @property() protected value?: string[];\n  @property() protected hass?: HomeAssistant;\n  @property() protected inputLabel?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.value) {\n      return html``;\n    }\n\n    return html`\n      ${this.value.map((listEntry, index) => {\n        return html`\n          <paper-input\n            label=\"${this.inputLabel}\"\n            .value=\"${listEntry}\"\n            .configValue=\"${\"entry\"}\"\n            .index=\"${index}\"\n            @value-changed=\"${this._valueChanged}\"\n            @blur=\"${this._consolidateEntries}\"\n            ><paper-icon-button\n              slot=\"suffix\"\n              class=\"clear-button\"\n              icon=\"hass:close\"\n              no-ripple\n              @click=\"${this._removeEntry}\"\n              >Clear</paper-icon-button\n            ></paper-input\n          >\n        `;\n      })}\n      <paper-input\n        label=\"${this.inputLabel}\"\n        @change=\"${this._addEntry}\"\n      ></paper-input>\n    `;\n  }\n\n  private _addEntry(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newEntries = this.value!.concat(target.value as string);\n    target.value = \"\";\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n    (ev.target! as LitElement).blur();\n  }\n\n  private _valueChanged(ev: Event): void {\n    ev.stopPropagation();\n    const target = ev.target! as EditorTarget;\n    const newEntries = this.value!.concat();\n    newEntries[target.index!] = target.value!;\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  private _consolidateEntries(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      const newEntries = this.value!.concat();\n      newEntries.splice(target.index!, 1);\n      fireEvent(this, \"value-changed\", {\n        value: newEntries,\n      });\n    }\n  }\n\n  private _removeEntry(ev: Event): void {\n    const parent = (ev.currentTarget as any).parentElement;\n    const newEntries = this.value!.concat();\n    newEntries.splice(parent.index!, 1);\n    fireEvent(this, \"value-changed\", {\n      value: newEntries,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-list-editor\": HuiInputListEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-entity-editor\";\nimport \"../../components/hui-input-list-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntityConfig } from \"../../entity-rows/types\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { MapCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  aspect_ratio: \"string?\",\n  default_zoom: \"number?\",\n  dark_mode: \"boolean?\",\n  entities: [entitiesConfigStruct],\n  geo_location_sources: \"array?\",\n});\n\n@customElement(\"hui-map-card-editor\")\nexport class HuiMapCardEditor extends LitElement implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MapCardConfig;\n\n  @property() private _configEntities?: EntityConfig[];\n\n  public setConfig(config: MapCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _aspect_ratio(): string {\n    return this._config!.aspect_ratio || \"\";\n  }\n\n  get _default_zoom(): number {\n    return this._config!.default_zoom || NaN;\n  }\n\n  get _geo_location_sources(): string[] {\n    return this._config!.geo_location_sources || [];\n  }\n\n  get _dark_mode(): boolean {\n    return this._config!.dark_mode || false;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.aspect_ratio\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._aspect_ratio}\"\n            .configValue=\"${\"aspect_ratio\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.default_zoom\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._default_zoom}\"\n            .configValue=\"${\"default_zoom\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <ha-switch\n          ?checked=\"${this._dark_mode !== false}\"\n          .configValue=\"${\"dark_mode\"}\"\n          @change=\"${this._valueChanged}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.dark_mode\"\n          )}</ha-switch\n        >\n        <hui-entity-editor\n          .hass=\"${this.hass}\"\n          .entities=\"${this._configEntities}\"\n          @entities-changed=\"${this._entitiesValueChanged}\"\n        ></hui-entity-editor>\n        <h3>\n          ${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.map.geo_location_sources\"\n          )}\n        </h3>\n        <div class=\"geo_location_sources\">\n          <hui-input-list-editor\n            inputLabel=${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.map.source\"\n            )}\n            .hass=\"${this.hass}\"\n            .value=\"${this._geo_location_sources}\"\n            .configValue=\"${\"geo_location_sources\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></hui-input-list-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _entitiesValueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<any>): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    let value: any = target.value;\n    if (target.type === \"number\") {\n      value = Number(value);\n    }\n    if (target.value === \"\" || (target.type === \"number\" && isNaN(value))) {\n      delete this._config[target.configValue!];\n    } else if (target.configValue) {\n      this._config = {\n        ...this._config,\n        [target.configValue]:\n          target.checked !== undefined ? target.checked : value,\n      };\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .geo_location_sources {\n        padding-left: 20px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-map-card-editor\": HuiMapCardEditor;\n  }\n}\n"],"sourceRoot":""}