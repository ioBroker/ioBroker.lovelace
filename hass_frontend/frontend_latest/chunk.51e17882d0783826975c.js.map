{"version":3,"sources":["webpack:///./src/mixins/localize-mixin.js","webpack:///./src/components/ha-card.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/common/datetime/format_date_time.ts","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/mixins/navigate-mixin.js","webpack:///./src/util/toast-saved-success.ts","webpack:///./src/components/buttons/ha-call-api-button.js","webpack:///./src/data/alexa.ts","webpack:///./src/panels/config/cloud/account/cloud-webhooks.ts","webpack:///./src/panels/config/cloud/dialog-manage-cloudhook/show-dialog-manage-cloudhook.ts","webpack:///./src/data/webhook.ts","webpack:///./src/panels/config/cloud/account/cloud-alexa-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-google-pref.ts","webpack:///./src/panels/config/cloud/account/cloud-remote-pref.ts","webpack:///./src/panels/config/cloud/dialog-cloud-certificate/show-dialog-cloud-certificate.ts","webpack:///./src/panels/config/cloud/account/cloud-account.js","webpack:///./src/panels/config/cloud/login/cloud-login.js","webpack:///./src/panels/config/cloud/ha-config-cloud.ts"],"names":["dedupingMixin","superClass","hass","Object","localize","type","Function","computed","__computeLocalize","HaCard","property","css","html","this","header","LitElement","customElements","define","EventsMixin","fire","detail","options","fireEvent","node","ironIconClass","get","loaded","HaIcon","listen","eventName","methodName","super","_iconsetName","MwcSwitch","customElement","HaSwitch","query","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","length","HaConfigSection","PolymerElement","narrow","isWide","value","computeContentClasses","classes","computeClasses","toLocaleStringSupportsOptions","Date","toLocaleString","e","name","dateObj","locales","year","month","day","hour","minute","fecha","format","HaProgressButton","progress","disabled","tempClass","className","$","container","add","setTimeout","remove","ready","addEventListener","ev","buttonTapped","stopPropagation","actionSuccess","actionError","computeDisabled","HaIconNext","connectedCallback","icon","window","getComputedStyle","direction","navigate","args","showSaveSuccessToast","el","showToast","message","HaCallApiButton","render","_buttonTapped","constructor","method","data","path","String","renderRoot","querySelector","eventData","resp","callApi","progressButton","success","response","err","fetchCloudAlexaEntities","callWS","syncCloudAlexaEntities","CloudWebhooks","_progress","_fetchData","renderStyle","_renderBody","changedProps","has","cloudStatus","_cloudHooks","prefs","cloudhooks","_localHooks","map","entry","domain","toLowerCase","webhook_id","includes","_handleManageButton","_enableWebhook","webhookId","webhook","find","ent","cloudhook","element","webhookDialogParams","disableHook","_disableWebhook","dialogTag","dialogImport","dialogParams","currentTarget","parentElement","_showDialog","updatedWebhook","createCloudhook","alert","filter","wid","deleteCloudhook","newHooks","config","components","fetchWebhooks","CloudAlexaPref","alexa_enabled","alexa_report_state","_enabledToggleChanged","_reportToggleChanged","_handleSync","_syncing","body","target","updateCloudPref","checked","CloudGooglePref","google_enabled","google_report_state","google_secure_devices_pin","_enableToggleChanged","_pinChanged","id","input","remote_connected","remote_domain","remote_certificate","_toggleChanged","_openCertInfo","certificateInfo","connectCloudRemote","disconnectCloudRemote","CloudAccount","LocalizeMixin","_subscription","_fetchSubscriptionInfo","_computeRemoteConnected","connected","fetchCloudSubscriptionInfo","provider","cloud","handleLogout","then","_formatSubscription","subInfo","description","human_description","plan_renewal_date","replace","formatDateTime","language","CloudLogin","NavigateMixin","email","notify","_password","_requestInProgress","flashMessage","_error","requestAnimationFrame","flashRipple","simulatedRipple","_inputChanged","invalid","password","_keyDown","keyCode","_handleLogin","preventDefault","focus","setProperties","errCode","code","props","_handleRegister","_handleForgotPassword","_dismissFlash","LOGGED_IN_URLS","NOT_LOGGED_IN_URLS","HaConfigCloud","defaultPage","showLoading","initialLoad","_cloudStatusLoaded","beforeRender","page","logged_in","routes","login","tag","register","load","account","alexa","Promise","resolve","_resolveCloudStatusLoaded","_flashMessage","oldStatus","undefined","route","prefix","_loginEmail","_currentPage","HassRouterPage"],"mappings":"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","file":"chunk.51e17882d0783826975c.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","import fecha from \"fecha\";\n\n// Check for support of native locale string options\nfunction toLocaleStringSupportsOptions() {\n  try {\n    new Date().toLocaleString(\"i\");\n  } catch (e) {\n    return e.name === \"RangeError\";\n  }\n  return false;\n}\n\nexport default (toLocaleStringSupportsOptions()\n  ? (dateObj: Date, locales: string) =>\n      dateObj.toLocaleString(locales, {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n      })\n  : (dateObj: Date) => fecha.format(dateObj, \"haDateTime\"));\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\nimport { navigate } from \"../common/navigate\";\n\n/*\n * @polymerMixin\n * @appliesMixin EventsMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      navigate(...args) {\n        navigate(this, ...args);\n      }\n    }\n);\n","import { showToast } from \"./toast\";\nimport { HomeAssistant } from \"../types\";\n\nexport const showSaveSuccessToast = (el: HTMLElement, hass: HomeAssistant) =>\n  showToast(el, {\n    message: hass!.localize(\"ui.common.successfully_saved\"),\n  });\n","import { LitElement, html } from \"lit-element\";\n\nimport \"./ha-progress-button\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nclass HaCallApiButton extends LitElement {\n  render() {\n    return html`\n      <ha-progress-button\n        .progress=\"${this.progress}\"\n        @click=\"${this._buttonTapped}\"\n        ?disabled=\"${this.disabled}\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.method = \"POST\";\n    this.data = {};\n    this.disabled = false;\n    this.progress = false;\n  }\n\n  static get properties() {\n    return {\n      hass: {},\n      progress: Boolean,\n      path: String,\n      method: String,\n      data: {},\n      disabled: Boolean,\n    };\n  }\n\n  get progressButton() {\n    return this.renderRoot.querySelector(\"ha-progress-button\");\n  }\n\n  async _buttonTapped() {\n    this.progress = true;\n    const eventData = {\n      method: this.method,\n      path: this.path,\n      data: this.data,\n    };\n\n    try {\n      const resp = await this.hass.callApi(this.method, this.path, this.data);\n      this.progress = false;\n      this.progressButton.actionSuccess();\n      eventData.success = true;\n      eventData.response = resp;\n    } catch (err) {\n      this.progress = false;\n      this.progressButton.actionError();\n      eventData.success = false;\n      eventData.response = err;\n    }\n\n    fireEvent(this, \"hass-api-called\", eventData);\n  }\n}\n\ncustomElements.define(\"ha-call-api-button\", HaCallApiButton);\n","import { HomeAssistant } from \"../types\";\n\nexport interface AlexaEntity {\n  entity_id: string;\n  display_categories: string[];\n  interfaces: string[];\n}\n\nexport const fetchCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS<AlexaEntity[]>({ type: \"cloud/alexa/entities\" });\n\nexport const syncCloudAlexaEntities = (hass: HomeAssistant) =>\n  hass.callWS({ type: \"cloud/alexa/sync\" });\n","import { html, LitElement, PropertyValues, property } from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\nimport { HomeAssistant, WebhookError } from \"../../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../../data/webhook\";\nimport {\n  createCloudhook,\n  deleteCloudhook,\n  CloudWebhook,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showManageCloudhookDialog } from \"../dialog-manage-cloudhook/show-dialog-manage-cloudhook\";\n\nexport class CloudWebhooks extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _cloudHooks?: { [webhookId: string]: CloudWebhook };\n  @property() private _localHooks?: Webhook[];\n  @property() private _progress: string[];\n\n  constructor() {\n    super();\n    this._progress = [];\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.webhooks.title\"\n        )}\n      >\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.webhooks.info\")}\n          ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://www.nabucasa.com/config/webhooks\" target=\"_blank\">\n              ${this.hass!.localize(\n                \"ui.panel.config.cloud.account.webhooks.link_learn_more\"\n              )}\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (changedProps.has(\"cloudStatus\") && this.cloudStatus) {\n      this._cloudHooks = this.cloudStatus.prefs.cloudhooks || {};\n    }\n  }\n\n  private _renderBody() {\n    if (!this.cloudStatus || !this._localHooks || !this._cloudHooks) {\n      return html`\n        <div class=\"body-text\">\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.loading\"\n          )}\n        </div>\n      `;\n    }\n\n    if (this._localHooks.length === 0) {\n      return html`\n        <div class=\"body-text\">\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.no_hooks_yet\"\n          )}\n          <a href=\"/config/integrations\"\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.account.webhooks.no_hooks_yet_link_integration\"\n            )}</a\n          >\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.account.webhooks.no_hooks_yet2\"\n          )}\n          <a href=\"/config/automation/new\"\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.account.webhooks.no_hooks_yet_link_automation\"\n            )}</a\n          >.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        <div class=\"webhook\" .entry=\"${entry}\">\n          <paper-item-body two-line>\n            <div>\n              ${entry.name}\n              ${entry.domain === entry.name.toLowerCase()\n                ? \"\"\n                : ` (${entry.domain})`}\n            </div>\n            <div secondary>${entry.webhook_id}</div>\n          </paper-item-body>\n          ${this._progress.includes(entry.webhook_id)\n            ? html`\n                <div class=\"progress\">\n                  <paper-spinner active></paper-spinner>\n                </div>\n              `\n            : this._cloudHooks![entry.webhook_id]\n            ? html`\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.webhooks.manage\"\n                  )}\n                </mwc-button>\n              `\n            : html`\n                <ha-switch @click=\"${this._enableWebhook}\"></ha-switch>\n              `}\n        </div>\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    const cloudhook = this._cloudHooks![webhookId];\n    showManageCloudhookDialog(this, {\n      webhook,\n      cloudhook,\n      disableHook: () => this._disableWebhook(webhookId),\n    });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _enableWebhook(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry;\n    this._progress = [...this._progress, entry.webhook_id];\n    let updatedWebhook;\n\n    try {\n      updatedWebhook = await createCloudhook(this.hass!, entry.webhook_id);\n    } catch (err) {\n      alert((err as WebhookError).message);\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== entry.webhook_id);\n    }\n\n    this._cloudHooks = {\n      ...this._cloudHooks,\n      [entry.webhook_id]: updatedWebhook,\n    };\n\n    // Only open dialog if we're not also enabling others, otherwise it's confusing\n    if (this._progress.length === 0) {\n      this._showDialog(entry.webhook_id);\n    }\n  }\n\n  private async _disableWebhook(webhookId: string) {\n    this._progress = [...this._progress, webhookId];\n    try {\n      await deleteCloudhook(this.hass!, webhookId!);\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.webhooks.disable_hook_error_msg\"\n        )} ${(err as WebhookError).message}`\n      );\n      return;\n    } finally {\n      this._progress = this._progress.filter((wid) => wid !== webhookId);\n    }\n\n    // Remove cloud related parts from entry.\n    const { [webhookId]: disabledHook, ...newHooks } = this._cloudHooks!;\n    this._cloudHooks = newHooks;\n  }\n\n  private async _fetchData() {\n    this._localHooks = this.hass!.config.components.includes(\"webhook\")\n      ? await fetchWebhooks(this.hass!)\n      : [];\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-webhooks\": CloudWebhooks;\n  }\n}\n\ncustomElements.define(\"cloud-webhooks\", CloudWebhooks);\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\nimport { CloudWebhook } from \"../../../../data/cloud\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n  cloudhook: CloudWebhook;\n  disableHook: () => void;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-cloudhook\",\n    dialogImport: () =>\n      import(\n        /* webpackChunkName: \"cloud-webhook-manage-dialog\" */ \"./dialog-manage-cloudhook\"\n      ),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import { HomeAssistant } from \"../types\";\n\nexport interface Webhook {\n  webhook_id: string;\n  domain: string;\n  name: string;\n}\n\nexport const fetchWebhooks = (hass: HomeAssistant): Promise<Webhook[]> =>\n  hass.callWS({\n    type: \"webhook/list\",\n  });\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { syncCloudAlexaEntities } from \"../../../../data/alexa\";\n\nexport class CloudAlexaPref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n  @property() private _syncing = false;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const { alexa_enabled, alexa_report_state } = this.cloudStatus!.prefs;\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            .checked=${alexa_enabled}\n            @change=${this._enabledToggleChanged}\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.alexa.info\")}\n          <ul>\n            <li>\n              <a\n                href=\"https://skills-store.amazon.com/deeplink/dp/B0772J1QKB?deviceType=app\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.alexa.enable_ha_skill\"\n                )}\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/amazon_alexa/\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.alexa.config_documentation\"\n                )}\n              </a>\n            </li>\n          </ul>\n          ${alexa_enabled\n            ? html`\n                <div class=\"state-reporting\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.alexa.enable_state_reporting\"\n                    )}\n                  </h3>\n                  <div class=\"state-reporting-switch\">\n                    <ha-switch\n                      .checked=${alexa_report_state}\n                      @change=${this._reportToggleChanged}\n                    ></ha-switch>\n                  </div>\n                </div>\n                <p>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.alexa.info_state_reporting\"\n                  )}\n                </p>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <mwc-button @click=${this._handleSync} .disabled=${this._syncing}>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.alexa.sync_entities\"\n            )}\n          </mwc-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/alexa\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.alexa.manage_entities\"\n              )}</mwc-button\n            >\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _handleSync() {\n    this._syncing = true;\n    try {\n      await syncCloudAlexaEntities(this.hass!);\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.sync_entities_error\"\n        )} ${err.body.message}`\n      );\n    } finally {\n      this._syncing = false;\n    }\n  }\n\n  private async _enabledToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, { alexa_enabled: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, {\n        alexa_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.alexa.state_reporting_error\",\n          \"enable_disable\",\n          this.hass!.localize(\n            toggle.checked\n              ? \"ui.panel.config.cloud.account.alexa.enable\"\n              : \"ui.panel.config.cloud.account.alexa.disable\"\n          )\n        )} ${err.message}`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      .state-reporting {\n        display: flex;\n        margin-top: 1.5em;\n      }\n      .state-reporting + p {\n        margin-top: 0.5em;\n      }\n      .state-reporting h3 {\n        flex-grow: 1;\n        margin: 0;\n      }\n      .state-reporting-switch {\n        margin-top: 0.25em;\n        margin-right: 7px;\n        margin-left: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-alexa-pref\": CloudAlexaPref;\n  }\n}\n\ncustomElements.define(\"cloud-alexa-pref\", CloudAlexaPref);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"../../../../components/buttons/ha-call-api-button\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { CloudStatusLoggedIn, updateCloudPref } from \"../../../../data/cloud\";\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { showSaveSuccessToast } from \"../../../../util/toast-saved-success\";\n\nexport class CloudGooglePref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      google_enabled,\n      google_report_state,\n      google_secure_devices_pin,\n    } = this.cloudStatus.prefs;\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.google.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            id=\"google_enabled\"\n            .checked=\"${google_enabled}\"\n            @change=\"${this._enableToggleChanged}\"\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.google.info\")}\n          <ul>\n            <li>\n              <a\n                href=\"https://assistant.google.com/services/a/uid/00000091fd5fb875?hl=en-US\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.google.enable_ha_skill\"\n                )}\n              </a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.nabucasa.com/config/google_assistant/\"\n                target=\"_blank\"\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.cloud.account.google.config_documentation\"\n                )}\n              </a>\n            </li>\n          </ul>\n          ${google_enabled\n            ? html`\n                <div class=\"state-reporting\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.enable_state_reporting\"\n                    )}\n                  </h3>\n                  <div class=\"state-reporting-switch\">\n                    <ha-switch\n                      .checked=${google_report_state}\n                      @change=${this._reportToggleChanged}\n                    ></ha-switch>\n                  </div>\n                </div>\n                <p>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.google.info_state_reporting\"\n                  )}\n                </p>\n                <div class=\"secure_devices\">\n                  <h3>\n                    ${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.security_devices\"\n                    )}\n                  </h3>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.google.enter_pin_info\"\n                  )}\n                  <paper-input\n                    label=\"${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.devices_pin\"\n                    )}\"\n                    id=\"google_secure_devices_pin\"\n                    placeholder=\"${this.hass!.localize(\n                      \"ui.panel.config.cloud.account.google.enter_pin_hint\"\n                    )}\"\n                    .value=${google_secure_devices_pin || \"\"}\n                    @change=\"${this._pinChanged}\"\n                  ></paper-input>\n                </div>\n              `\n            : \"\"}\n        </div>\n        <div class=\"card-actions\">\n          <ha-call-api-button\n            .hass=\"${this.hass}\"\n            .disabled=\"${!google_enabled}\"\n            path=\"cloud/google_actions/sync\"\n          >\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.google.sync_entities\"\n            )}\n          </ha-call-api-button>\n          <div class=\"spacer\"></div>\n          <a href=\"/config/cloud/google-assistant\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.google.manage_entities\"\n              )}</mwc-button\n            >\n          </a>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private async _enableToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, { [toggle.id]: toggle.checked! });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _reportToggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n    try {\n      await updateCloudPref(this.hass!, {\n        google_report_state: toggle.checked!,\n      });\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `Unable to ${toggle.checked ? \"enable\" : \"disable\"} report state. ${\n          err.message\n        }`\n      );\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  private async _pinChanged(ev) {\n    const input = ev.target as PaperInputElement;\n    try {\n      await updateCloudPref(this.hass!, {\n        [input.id]: input.value || null,\n      });\n      showSaveSuccessToast(this, this.hass!);\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(\n        `${this.hass!.localize(\n          \"ui.panel.config.cloud.account.google.enter_pin_error\"\n        )} ${err.message}`\n      );\n      input.value = this.cloudStatus!.prefs.google_secure_devices_pin;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      ha-call-api-button {\n        color: var(--primary-color);\n        font-weight: 500;\n      }\n      .secure_devices {\n        padding-top: 8px;\n      }\n      paper-input {\n        width: 250px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n      .state-reporting {\n        display: flex;\n        margin-top: 1.5em;\n      }\n      .state-reporting + p {\n        margin-top: 0.5em;\n      }\n      h3 {\n        margin: 0 0 8px 0;\n      }\n      .state-reporting h3 {\n        flex-grow: 1;\n        margin: 0;\n      }\n      .state-reporting-switch {\n        margin-top: 0.25em;\n        margin-right: 7px;\n        margin-left: 0.5em;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-google-pref\": CloudGooglePref;\n  }\n}\n\ncustomElements.define(\"cloud-google-pref\", CloudGooglePref);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  CSSResult,\n  css,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-switch\";\n\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  connectCloudRemote,\n  disconnectCloudRemote,\n  CloudStatusLoggedIn,\n} from \"../../../../data/cloud\";\nimport { showCloudCertificateDialog } from \"../dialog-cloud-certificate/show-dialog-cloud-certificate\";\n\n@customElement(\"cloud-remote-pref\")\nexport class CloudRemotePref extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public cloudStatus?: CloudStatusLoggedIn;\n\n  protected render(): TemplateResult | void {\n    if (!this.cloudStatus) {\n      return html``;\n    }\n\n    const {\n      remote_connected,\n      remote_domain,\n      remote_certificate,\n    } = this.cloudStatus;\n\n    if (!remote_certificate) {\n      return html`\n        <ha-card\n          header=${this.hass!.localize(\n            \"ui.panel.config.cloud.account.remote.title\"\n          )}\n        >\n          <div class=\"preparing\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.account.remote.access_is_being_prepared\"\n            )}\n          </div>\n        </ha-card>\n      `;\n    }\n\n    return html`\n      <ha-card\n        header=${this.hass!.localize(\n          \"ui.panel.config.cloud.account.remote.title\"\n        )}\n      >\n        <div class=\"switch\">\n          <ha-switch\n            .checked=\"${remote_connected}\"\n            @change=\"${this._toggleChanged}\"\n          ></ha-switch>\n        </div>\n        <div class=\"card-content\">\n          ${this.hass!.localize(\"ui.panel.config.cloud.account.remote.info\")}\n          ${remote_connected\n            ? this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.instance_is_available\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.instance_will_be_available\"\n              )}\n          <a href=\"https://${remote_domain}\" target=\"_blank\" class=\"break-word\">\n            https://${remote_domain}</a\n          >.\n        </div>\n        <div class=\"card-actions\">\n          <a href=\"https://www.nabucasa.com/config/remote/\" target=\"_blank\">\n            <mwc-button\n              >${this.hass!.localize(\n                \"ui.panel.config.cloud.account.remote.link_learn_how_it_works\"\n              )}</mwc-button\n            >\n          </a>\n          ${remote_certificate\n            ? html`\n                <div class=\"spacer\"></div>\n                <mwc-button @click=${this._openCertInfo}>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.cloud.account.remote.certificate_info\"\n                  )}\n                </mwc-button>\n              `\n            : \"\"}\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _openCertInfo() {\n    showCloudCertificateDialog(this, {\n      certificateInfo: this.cloudStatus!.remote_certificate!,\n    });\n  }\n\n  private async _toggleChanged(ev) {\n    const toggle = ev.target as HaSwitch;\n\n    try {\n      if (toggle.checked) {\n        await connectCloudRemote(this.hass!);\n      } else {\n        await disconnectCloudRemote(this.hass!);\n      }\n      fireEvent(this, \"ha-refresh-cloud-status\");\n    } catch (err) {\n      alert(err.message);\n      toggle.checked = !toggle.checked;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .preparing {\n        padding: 0 16px 16px;\n      }\n      a {\n        color: var(--primary-color);\n      }\n      .break-word {\n        overflow-wrap: break-word;\n      }\n      .switch {\n        position: absolute;\n        right: 24px;\n        top: 32px;\n      }\n      .card-actions {\n        display: flex;\n      }\n      .card-actions a {\n        text-decoration: none;\n      }\n      .spacer {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-remote-pref\": CloudRemotePref;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { CertificateInformation } from \"../../../../data/cloud\";\n\nexport interface CloudCertificateParams {\n  certificateInfo: CertificateInformation;\n}\n\nexport const showCloudCertificateDialog = (\n  element: HTMLElement,\n  webhookDialogParams: CloudCertificateParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-cloud-certificate\",\n    dialogImport: () =>\n      import(\n        /* webpackChunkName: \"dialog-cloud-certificate\" */ \"./dialog-cloud-certificate\"\n      ),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-call-api-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\nimport \"../../ha-config-section\";\nimport \"./cloud-webhooks\";\nimport \"./cloud-alexa-pref\";\nimport \"./cloud-google-pref\";\nimport \"./cloud-remote-pref\";\n\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport { fetchCloudSubscriptionInfo } from \"../../../../data/cloud\";\n\nimport formatDateTime from \"../../../../common/datetime/format_date_time\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudAccount extends EventsMixin(LocalizeMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        .account-row {\n          display: flex;\n          padding: 0 16px;\n        }\n        mwc-button {\n          align-self: center;\n        }\n        .soon {\n          font-style: italic;\n          margin-top: 24px;\n          text-align: center;\n        }\n        .nowrap {\n          white-space: nowrap;\n        }\n        .wrap {\n          white-space: normal;\n        }\n        .status {\n          text-transform: capitalize;\n          padding: 16px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n      </style>\n      <hass-subpage header=\"[[localize('ui.panel.config.cloud.caption')]]\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.caption')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.account.thank_you_note')]]\n              </p>\n            </div>\n\n            <ha-card\n              header=\"[[localize('ui.panel.config.cloud.account.nabu_casa_account')]]\"\n            >\n              <div class=\"account-row\">\n                <paper-item-body two-line=\"\">\n                  [[cloudStatus.email]]\n                  <div secondary class=\"wrap\">\n                    [[_formatSubscription(_subscription)]]\n                  </div>\n                </paper-item-body>\n              </div>\n\n              <div class=\"account-row\">\n                <paper-item-body\n                  >[[localize('ui.panel.config.cloud.account.connection_status')]]</paper-item-body\n                >\n                <div class=\"status\">[[cloudStatus.cloud]]</div>\n              </div>\n\n              <div class=\"card-actions\">\n                <a href=\"https://account.nabucasa.com\" target=\"_blank\"\n                  ><mwc-button\n                    >[[localize('ui.panel.config.cloud.account.manage_account')]]</mwc-button\n                  ></a\n                >\n                <mwc-button style=\"float: right\" on-click=\"handleLogout\"\n                  >[[localize('ui.panel.config.cloud.account.sign_out')]]</mwc-button\n                >\n              </div>\n            </ha-card>\n          </ha-config-section>\n\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.account.integrations')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.account.integrations_introduction')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.account.integrations_introduction2')]]\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >[[localize('ui.panel.config.cloud.account.integrations_link_all_features')]]</a\n                >.\n              </p>\n            </div>\n\n            <cloud-remote-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-remote-pref>\n\n            <cloud-alexa-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-alexa-pref>\n\n            <cloud-google-pref\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-google-pref>\n\n            <cloud-webhooks\n              hass=\"[[hass]]\"\n              cloud-status=\"[[cloudStatus]]\"\n            ></cloud-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      cloudStatus: Object,\n      _subscription: {\n        type: Object,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this._fetchSubscriptionInfo();\n  }\n\n  _computeRemoteConnected(connected) {\n    return connected\n      ? this.hass.localize(\"ui.panel.config.cloud.account.connected\")\n      : this.hass.localize(\"ui.panel.config.cloud.account.not_connected\");\n  }\n\n  async _fetchSubscriptionInfo() {\n    this._subscription = await fetchCloudSubscriptionInfo(this.hass);\n    if (\n      this._subscription.provider &&\n      this.cloudStatus &&\n      this.cloudStatus.cloud !== \"connected\"\n    ) {\n      this.fire(\"ha-refresh-cloud-status\");\n    }\n  }\n\n  handleLogout() {\n    this.hass\n      .callApi(\"post\", \"cloud/logout\")\n      .then(() => this.fire(\"ha-refresh-cloud-status\"));\n  }\n\n  _formatSubscription(subInfo) {\n    if (subInfo === null) {\n      return this.hass.localize(\n        \"ui.panel.config.cloud.account.fetching_subscription\"\n      );\n    }\n\n    let description = subInfo.human_description;\n\n    if (subInfo.plan_renewal_date) {\n      description = description.replace(\n        \"{periodEnd}\",\n        formatDateTime(\n          new Date(subInfo.plan_renewal_date * 1000),\n          this.hass.language\n        )\n      );\n    }\n\n    return description;\n  }\n}\n\ncustomElements.define(\"cloud-account\", CloudAccount);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-ripple/paper-ripple\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/buttons/ha-progress-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../resources/ha-style\";\n\nimport \"../../ha-config-section\";\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport NavigateMixin from \"../../../../mixins/navigate-mixin\";\nimport \"../../../../components/ha-icon-next\";\nimport LocalizeMixin from \"../../../../mixins/localize-mixin\";\n/*\n * @appliesMixin NavigateMixin\n * @appliesMixin EventsMixin\n * @appliesMixin LocalizeMixin\n */\nclass CloudLogin extends LocalizeMixin(\n  NavigateMixin(EventsMixin(PolymerElement))\n) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 24px;\n          direction: ltr;\n        }\n        [slot=\"introduction\"] {\n          margin: -1em 0;\n        }\n        [slot=\"introduction\"] a {\n          color: var(--primary-color);\n        }\n        paper-item {\n          cursor: pointer;\n        }\n        ha-card {\n          overflow: hidden;\n        }\n        ha-card .card-header {\n          margin-bottom: -8px;\n        }\n        h1 {\n          @apply --paper-font-headline;\n          margin: 0;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .card-actions {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n        [hidden] {\n          display: none;\n        }\n        .flash-msg {\n          padding-right: 44px;\n        }\n        .flash-msg paper-icon-button {\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          color: var(--secondary-text-color);\n        }\n      </style>\n      <hass-subpage header=\"[[localize('ui.panel.config.cloud.caption')]]\">\n        <div class=\"content\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\"\n              >[[localize('ui.panel.config.cloud.caption')]]</span\n            >\n            <div slot=\"introduction\">\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction2')]]\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >Nabu&nbsp;Casa,&nbsp;Inc</a\n                >\n                [[localize('ui.panel.config.cloud.login.introduction2a')]]\n              </p>\n              <p>\n                [[localize('ui.panel.config.cloud.login.introduction3')]]\n              </p>\n              <p>\n                <a href=\"https://www.nabucasa.com\" target=\"_blank\"\n                  >[[localize('ui.panel.config.cloud.login.learn_more_link')]]</a\n                >\n              </p>\n            </div>\n\n            <ha-card hidden$=\"[[!flashMessage]]\">\n              <div class=\"card-content flash-msg\">\n                [[flashMessage]]\n                <paper-icon-button icon=\"hass:close\" on-click=\"_dismissFlash\"\n                  >[[localize('ui.panel.config.cloud.login.dismiss')]]</paper-icon-button\n                >\n                <paper-ripple id=\"flashRipple\" noink=\"\"></paper-ripple>\n              </div>\n            </ha-card>\n\n            <ha-card\n              header=\"[[localize('ui.panel.config.cloud.login.sign_in')]]\"\n            >\n              <div class=\"card-content\">\n                <div class=\"error\" hidden$=\"[[!_error]]\">[[_error]]</div>\n                <paper-input\n                  label=\"[[localize('ui.panel.config.cloud.login.email')]]\"\n                  id=\"email\"\n                  type=\"email\"\n                  value=\"{{email}}\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"[[localize('ui.panel.config.cloud.login.email_error_msg')]]\"\n                ></paper-input>\n                <paper-input\n                  id=\"password\"\n                  label=\"[[localize('ui.panel.config.cloud.login.password')]]\"\n                  value=\"{{_password}}\"\n                  type=\"password\"\n                  on-keydown=\"_keyDown\"\n                  error-message=\"[[localize('ui.panel.config.cloud.login.password_error_msg')]]\"\n                ></paper-input>\n              </div>\n              <div class=\"card-actions\">\n                <ha-progress-button\n                  on-click=\"_handleLogin\"\n                  progress=\"[[_requestInProgress]]\"\n                  >[[localize('ui.panel.config.cloud.login.sign_in')]]</ha-progress-button\n                >\n                <button\n                  class=\"link\"\n                  hidden=\"[[_requestInProgress]]\"\n                  on-click=\"_handleForgotPassword\"\n                >\n                  [[localize('ui.panel.config.cloud.login.forgot_password')]]\n                </button>\n              </div>\n            </ha-card>\n\n            <ha-card>\n              <paper-item on-click=\"_handleRegister\">\n                <paper-item-body two-line=\"\">\n                  [[localize('ui.panel.config.cloud.login.start_trial')]]\n                  <div secondary=\"\">\n                    [[localize('ui.panel.config.cloud.login.trial_info')]]\n                  </div>\n                </paper-item-body>\n                <ha-icon-next></ha-icon-next>\n              </paper-item>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      email: {\n        type: String,\n        notify: true,\n      },\n      _password: {\n        type: String,\n        value: \"\",\n      },\n      _requestInProgress: {\n        type: Boolean,\n        value: false,\n      },\n      flashMessage: {\n        type: String,\n        notify: true,\n      },\n      _error: String,\n    };\n  }\n\n  static get observers() {\n    return [\"_inputChanged(email, _password)\"];\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.flashMessage) {\n      // Wait for DOM to be drawn\n      requestAnimationFrame(() =>\n        requestAnimationFrame(() => this.$.flashRipple.simulatedRipple())\n      );\n    }\n  }\n\n  _inputChanged() {\n    this.$.email.invalid = false;\n    this.$.password.invalid = false;\n    this._error = false;\n  }\n\n  _keyDown(ev) {\n    // validate on enter\n    if (ev.keyCode === 13) {\n      this._handleLogin();\n      ev.preventDefault();\n    }\n  }\n\n  _handleLogin() {\n    let invalid = false;\n\n    if (!this.email || !this.email.includes(\"@\")) {\n      this.$.email.invalid = true;\n      this.$.email.focus();\n      invalid = true;\n    }\n\n    if (this._password.length < 8) {\n      this.$.password.invalid = true;\n\n      if (!invalid) {\n        invalid = true;\n        this.$.password.focus();\n      }\n    }\n\n    if (invalid) return;\n\n    this._requestInProgress = true;\n\n    this.hass\n      .callApi(\"post\", \"cloud/login\", {\n        email: this.email,\n        password: this._password,\n      })\n      .then(\n        () => {\n          this.fire(\"ha-refresh-cloud-status\");\n          this.setProperties({\n            email: \"\",\n            _password: \"\",\n          });\n        },\n        (err) => {\n          // Do this before setProperties because changing it clears errors.\n          this._password = \"\";\n\n          const errCode = err && err.body && err.body.code;\n          if (errCode === \"PasswordChangeRequired\") {\n            alert(\n              \"[[localize('ui.panel.config.cloud.login.alert_password_change_required')]]\"\n            );\n            this.navigate(\"/config/cloud/forgot-password\");\n            return;\n          }\n\n          const props = {\n            _requestInProgress: false,\n            _error:\n              err && err.body && err.body.message\n                ? err.body.message\n                : \"Unknown error\",\n          };\n\n          if (errCode === \"UserNotConfirmed\") {\n            props._error =\n              \"[[localize('ui.panel.config.cloud.login.alert_email_confirm_necessary')]]\";\n          }\n\n          this.setProperties(props);\n          this.$.email.focus();\n        }\n      );\n  }\n\n  _handleRegister() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/register\");\n  }\n\n  _handleForgotPassword() {\n    this.flashMessage = \"\";\n    this.navigate(\"/config/cloud/forgot-password\");\n  }\n\n  _dismissFlash() {\n    // give some time to let the ripple finish.\n    setTimeout(() => {\n      this.flashMessage = \"\";\n    }, 200);\n  }\n}\n\ncustomElements.define(\"cloud-login\", CloudLogin);\n","import \"./account/cloud-account\";\nimport \"./login/cloud-login\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { property, customElement } from \"lit-element\";\nimport { HomeAssistant, Route } from \"../../../types\";\nimport { navigate } from \"../../../common/navigate\";\nimport { CloudStatus } from \"../../../data/cloud\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { PolymerElement } from \"@polymer/polymer\";\n\nconst LOGGED_IN_URLS = [\"account\", \"google-assistant\", \"alexa\"];\nconst NOT_LOGGED_IN_URLS = [\"login\", \"register\", \"forgot-password\"];\n\n@customElement(\"ha-config-cloud\")\nclass HaConfigCloud extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() public cloudStatus!: CloudStatus;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"login\",\n    showLoading: true,\n    initialLoad: () => this._cloudStatusLoaded,\n    // Guard the different pages based on if we're logged in.\n    beforeRender: (page: string) => {\n      if (this.cloudStatus.logged_in) {\n        if (!LOGGED_IN_URLS.includes(page)) {\n          return \"account\";\n        }\n      } else {\n        if (!NOT_LOGGED_IN_URLS.includes(page)) {\n          return \"login\";\n        }\n      }\n      return undefined;\n    },\n    routes: {\n      login: {\n        tag: \"cloud-login\",\n      },\n      register: {\n        tag: \"cloud-register\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-register\" */ \"./register/cloud-register\"\n          ),\n      },\n      \"forgot-password\": {\n        tag: \"cloud-forgot-password\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-forgot-password\" */ \"./forgot-password/cloud-forgot-password\"\n          ),\n      },\n      account: {\n        tag: \"cloud-account\",\n      },\n      \"google-assistant\": {\n        tag: \"cloud-google-assistant\",\n        load: () =>\n          import(\n            /* webpackChunkName: \"cloud-google-assistant\" */ \"./google-assistant/cloud-google-assistant\"\n          ),\n      },\n      alexa: {\n        tag: \"cloud-alexa\",\n        load: () =>\n          import(/* webpackChunkName: \"cloud-alexa\" */ \"./alexa/cloud-alexa\"),\n      },\n    },\n  };\n\n  @property() private _flashMessage = \"\";\n  @property() private _loginEmail = \"\";\n  private _resolveCloudStatusLoaded!: () => void;\n  private _cloudStatusLoaded = new Promise((resolve) => {\n    this._resolveCloudStatusLoaded = resolve;\n  });\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"cloud-done\", (ev) => {\n      this._flashMessage = (ev as any).detail.flashMessage;\n      navigate(this, \"/config/cloud/login\");\n    });\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"cloudStatus\")) {\n      const oldStatus = changedProps.get(\"cloudStatus\") as\n        | CloudStatus\n        | undefined;\n      if (oldStatus === undefined) {\n        this._resolveCloudStatusLoaded();\n      } else if (oldStatus.logged_in !== this.cloudStatus.logged_in) {\n        navigate(this, this.route.prefix, true);\n      }\n    }\n  }\n\n  protected createElement(tag: string) {\n    const el = super.createElement(tag);\n    el.addEventListener(\"email-changed\", (ev) => {\n      this._loginEmail = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    el.addEventListener(\"flash-message-changed\", (ev) => {\n      this._flashMessage = (ev as PolymerChangedEvent<string>).detail.value;\n    });\n    return el;\n  }\n\n  protected updatePageEl(el) {\n    // We are not going to update if the current page if we are not logged in\n    // and the current page requires being logged in. Happens when we log out.\n    if (\n      this.cloudStatus &&\n      !this.cloudStatus.logged_in &&\n      LOGGED_IN_URLS.includes(this._currentPage)\n    ) {\n      return;\n    }\n\n    if (\"setProperties\" in el) {\n      // As long as we have Polymer pages\n      (el as PolymerElement).setProperties({\n        hass: this.hass,\n        email: this._loginEmail,\n        isWide: this.isWide,\n        cloudStatus: this.cloudStatus,\n        flashMessage: this._flashMessage,\n      });\n    } else {\n      el.hass = this.hass;\n      el.email = this._loginEmail;\n      el.isWide = this.isWide;\n      el.narrow = this.narrow;\n      el.cloudStatus = this.cloudStatus;\n      el.flashMessage = this._flashMessage;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-cloud\": HaConfigCloud;\n  }\n}\n"],"sourceRoot":""}