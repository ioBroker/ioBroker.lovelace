{"version":3,"sources":["webpack:///./src/panels/lovelace/editor/select-view/hui-dialog-select-view.ts"],"names":["HuiDialogSelectView","customElement","property","params","this","_params","updateComplete","changedProps","toggleAttribute","lovelace","config","views","some","view","icon","html","_openedChanged","_selectView","shadowRoot","querySelector","e","detail","viewSelectedCallback","_dialog","close","ev","value","undefined","LitElement"],"mappings":"myDAmBO,IAAMA,E,+1LAAb,EADCC,YAAc,4BACf,cADA,MACaD,UADb,EACoD,uCAApD,SAAaA,EAAb,6BACGE,eADH,kEAGE,eAAwBC,GACtBC,KAAKC,QAAUF,QACTC,KAAKE,iBALf,mCAQE,SAAkBC,GAChB,IATSP,EAST,qCAAcO,GACdC,YACEJ,KACA,cACAA,KAAKC,QAASI,SAAUC,SACnBN,KAAKC,QAASI,SAAUC,OAAOC,MAAMC,KAAMC,GAASA,EAAKC,SAdpE,kCAmBE,WACE,OAAKV,KAAKC,QAGHU,GAAK;;;;2BAIWX,KAAKY;;;;0BAINZ,KAAKC,QAASI,SAASC;yBACxBN,KAAKa;;;MAXjBF,GAAK,KArBlB,gCAsCE,WACE,OAAOX,KAAKc,WAAYC,cAAc,qBAvC1C,uCA0CE,SAAoBC,GAClB,MAAMP,EAAeO,EAAEC,OAAOR,KAC9BT,KAAKC,QAASiB,qBAAqBT,GACnCT,KAAKmB,QAAQC,UA7CjB,0CAgDE,SAAuBC,GACfA,EAAGJ,OAAeK,QACtBtB,KAAKC,aAAUsB,SAlDoBC","file":"chunk.76359b07273673748eea.js","sourcesContent":["import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport { toggleAttribute } from \"../../../../common/dom/toggle_attribute\";\nimport \"../../components/hui-views-list\";\n\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\n\nimport { SelectViewDialogParams } from \"./show-select-view-dialog\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\n\n@customElement(\"hui-dialog-select-view\")\nexport class HuiDialogSelectView extends LitElement {\n  @property() private _params?: SelectViewDialogParams;\n\n  public async showDialog(params: SelectViewDialogParams): Promise<void> {\n    this._params = params;\n    await this.updateComplete;\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    toggleAttribute(\n      this,\n      \"hide-icons\",\n      this._params!.lovelace!.config\n        ? !this._params!.lovelace!.config.views.some((view) => view.icon)\n        : true\n    );\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>Choose a view</h2>\n        <hui-views-list \n        .lovelaceConfig=${this._params!.lovelace.config} \n        @view-selected=${this._selectView}>\n        </hui-view-list>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _selectView(e: CustomEvent): void {\n    const view: number = e.detail.view;\n    this._params!.viewSelectedCallback(view);\n    this._dialog.close();\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-select-view\": HuiDialogSelectView;\n  }\n}\n"],"sourceRoot":""}