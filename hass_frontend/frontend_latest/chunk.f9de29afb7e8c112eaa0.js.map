{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","this","value","attributes","device_class","changedProps","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_clearValue","length","ev","stopPropagation","_setValue","detail","newValue","setTimeout","fireEvent","css","LitElement","customElements","define","configElementStyle","customElement","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","newEntities","splice"],"mappings":"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","file":"chunk.f9de29afb7e8c112eaa0.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n"],"sourceRoot":""}