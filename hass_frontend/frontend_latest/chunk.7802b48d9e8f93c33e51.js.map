{"version":3,"sources":["webpack:///./src/mixins/localize-mixin.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/components/ha-card.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/mixins/events-mixin.js","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/components/entity/state-badge.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/common/string/compare.ts","webpack:///./src/data/device_registry.ts","webpack:///./src/dialogs/confirmation/show-dialog-confirmation.ts","webpack:///./src/data/area_registry.ts","webpack:///./src/data/entity_registry.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/data/config_entries.ts","webpack:///./src/common/search/search-input.ts","webpack:///./src/data/config_flow.ts","webpack:///./src/components/ha-checkbox.ts","webpack:///./src/components/data-table/ha-data-table.ts","webpack:///./src/components/data-table/sort_filter_worker.ts","webpack:///./src/dialogs/config-flow/show-dialog-data-entry-flow.ts","webpack:///./src/components/entity/ha-state-icon.js","webpack:///./src/dialogs/config-flow/show-dialog-config-flow.ts","webpack:///./src/panels/config/devices/ha-devices-data-table.ts","webpack:///./src/panels/config/integrations/ha-config-entries-dashboard.ts","webpack:///./src/panels/config/integrations/config-entry/ha-ce-entities-card.js","webpack:///./src/data/options_flow.ts","webpack:///./src/dialogs/config-flow/show-dialog-options-flow.ts","webpack:///./src/dialogs/config-entry-system-options/show-dialog-config-entry-system-options.ts","webpack:///./src/panels/config/integrations/config-entry/ha-config-entry-page.ts","webpack:///./src/panels/config/integrations/ha-config-integrations.ts"],"names":["dedupingMixin","superClass","hass","Object","localize","type","Function","computed","__computeLocalize","computeStateName","stateObj","undefined","attributes","friendly_name","computeObjectId","entity_id","replace","HaCard","property","css","html","this","header","LitElement","customElements","define","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","counter","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","persistent_notification","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","zone","domainIcon","domain","state","console","warn","DEFAULT_DOMAIN_ICON","EventsMixin","fire","detail","options","fireEvent","node","ironIconClass","get","loaded","HaIcon","listen","eventName","methodName","super","_iconsetName","computeStateDomain","computeDomain","StateBadge","query","overrideIcon","stateIcon","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","entity_picture","overrideImage","imageUrl","hassUrl","display","hs_color","hue","sat","brightness","errorMessage","assign","_icon","style","entityId","substr","indexOf","debounce","func","wait","immediate","timeout","args","context","callNow","clearTimeout","setTimeout","apply","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","domainIcons","binary_sensor","activated","device_class","cover","open","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","UNIT_C","UNIT_F","has_date","has_time","icon","HaConfigSection","PolymerElement","narrow","Boolean","isWide","value","computeContentClasses","classes","computeClasses","compare","a","b","caseInsensitiveCompare","toLowerCase","computeDeviceName","device","entities","name_by_user","name","fallbackDeviceName","entity","states","updateDeviceRegistryEntry","deviceId","updates","callWS","device_id","fetchDeviceRegistry","conn","sendMessagePromise","subscribeDeviceRegistryUpdates","store","subscribeEvents","then","devices","setState","subscribeDeviceRegistry","onChange","createCollection","loadConfirmationDialog","showConfirmationDialog","element","systemLogDetailParams","dialogTag","dialogImport","dialogParams","createAreaRegistryEntry","values","updateAreaRegistryEntry","areaId","area_id","deleteAreaRegistryEntry","fetchAreaRegistry","areas","sort","ent1","ent2","subscribeAreaRegistryUpdates","subscribeAreaRegistry","computeEntityRegistryName","entry","updateEntityRegistryEntry","removeEntityRegistryEntry","fetchEntityRegistry","subscribeEntityRegistryUpdates","subscribeEntityRegistry","MwcFab","customElement","mini","exited","extended","showLabel","label","ripple","classMap","disabled","showIconAtEnd","HaIconNext","connectedCallback","window","getComputedStyle","direction","afterNextRender","cb","requestAnimationFrame","nextRender","Promise","resolve","getConfigEntries","callApi","deleteConfigEntry","configEntryId","getConfigEntrySystemOptions","entry_id","updateConfigEntrySystemOptions","params","_filterInputChanged","_clearSearch","String","e","_filterChanged","target","createConfigFlow","handler","fetchConfigFlow","flowId","handleConfigFlowStep","data","deleteConfigFlow","getConfigFlowHandlers","fetchConfigFlowInProgress","subscribeConfigFlowInProgressUpdates","flows","getConfigFlowInProgressCollection","getCollection","subscribeConfigFlowInProgress","connection","subscribe","localizeConfigFlowTitle","flow","placeholders","title_placeholders","placeholderKeys","keys","length","forEach","key","push","MwcCheckbox","HaCheckbox","setProperty","HaDataTable","Array","MDCDataTableFoundation","queryAll","ev","_filter","_worker","sortFilterWorker","properties","_filterable","columns","some","column","filterable","columnId","_sortDirection","_sortColumn","clonedColumns","deepClone","title","template","_sortColumns","_filterData","_handleSearchChange","selectable","_handleHeaderRowCheckboxChange","_headerIndeterminate","_headerChecked","entries","map","columnEntry","sorted","sortable","_handleHeaderClick","repeat","_filteredData","row","id","_handleRowClick","_handleRowCheckboxChange","_checkedRows","includes","addClassAtRowIndex","rowIndex","cssClasses","rowElements","classList","add","getRowCount","getRowElements","getRowIdAtIndex","_getRowIdAtIndex","getRowIndexByChildElement","el","prototype","call","closest","getSelectedRowCount","isCheckboxAtRowIndexChecked","isHeaderRowCheckboxChecked","isRowsSelectable","notifyRowSelectionChanged","notifySelectedAll","notifyUnselectedAll","registerHeaderRowCheckbox","registerRowCheckboxes","removeClassAtRowIndex","remove","setAttributeAtRowIndex","attr","setAttribute","setHeaderRowCheckboxChecked","checked","setHeaderRowCheckboxIndeterminate","indeterminate","setRowCheckboxCheckedAtIndex","_setRowChecked","startTime","Date","getTime","curRequest","filterProm","filterSortData","all","elapsed","getAttribute","_headerCheckbox","mdcFoundation","handleHeaderRowCheckboxChange","checkbox","rowId","handleRowCheckboxChange","bubbles","index","splice","selected","_debounceSearch","BaseElement","addMethods","methods","module","exports","w","Worker","loadDataEntryFlowDialog","showFlowDialog","flowConfig","HaStateIcon","computeIcon","loadConfigFlowDialog","showConfigFlowDialog","loadDevicesAndAreas","getFlowHandlers","handlers","handlerA","handlerB","createFlow","fetchFlow","handleFlowStep","deleteFlow","renderAbortDescription","step","description","localizeKey","reason","description_placeholders","renderShowFormStepHeader","step_id","renderShowFormStepDescription","renderShowFormStepFieldLabel","field","renderShowFormStepFieldError","error","renderExternalStepHeader","renderExternalStepDescription","renderCreateEntryDescription","memoizeOne","outputDevices","deviceLookup","deviceEntityLookup","entryLookup","areaLookup","area","config_entries","find","entryId","model","manufacturer","integration","entId","join","battery_entity","_batteryEntity","batteryEntity","_columns","_devices","_handleRowClicked","navigate","HaConfigManagerDashboard","configEntriesInProgress","_continueFlow","flow_id","entityRegistryEntries","configEntries","item","idx","_getEntities","_createFlow","computeRTL","dialogClosedCallback","showAdvanced","continueFlowId","configEntry","config_entry_id","HaCeEntitiesCard","LocalizeMixIn","heading","_computeStateObj","_computeEntityName","_openMoreInfo","createOptionsFlow","fetchOptionsFlow","handleOptionsFlowStep","deleteOptionsFlow","loadConfigEntrySystemOptionsDialog","HaConfigEntryPage","ent","_configEntry","configEntryDevices","_computeConfigEntryDevices","deviceRegistryEntries","noDeviceEntities","_computeNoDeviceEntities","supports_options","_showSettings","_showSystemOptions","_confirmRemoveEntry","startFlowHandler","_step","_hass","showOptionsFlowDialog","text","confirm","_removeEntry","result","require_restart","HaConfigIntegrations","defaultPage","routes","dashboard","tag","config_entry","_loadData","_unsubs","pop","addEventListener","refresh","pageEl","_entityRegistryEntries","_configEntries","_currentPage","routeTail","path","_deviceRegistryEntries","_areas","_configEntriesInProgress","conf1","conf2","flowsInProgress","HassRouterPage"],"mappings":"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","file":"chunk.7802b48d9e8f93c33e51.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  counter: \"hass:counter\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  persistent_notification: \"hass:bell\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n  zone: \"hass:map-marker\",\n};\n\nexport const domainIcon = (domain: string, state?: string): string => {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n};\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\nimport { HomeAssistant } from \"../../types\";\n\nclass StateBadge extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @property() public overrideImage?: string;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult | void {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${computeStateDomain(stateObj)}\n        data-state=${stateObj.state}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (\n        (stateObj.attributes.entity_picture && !this.overrideIcon) ||\n        this.overrideImage\n      ) {\n        let imageUrl = this.overrideImage || stateObj.attributes.entity_picture;\n        if (this.hass) {\n          imageUrl = this.hass.hassUrl(imageUrl);\n        }\n        hostStyle.backgroundImage = `url(${imageUrl})`;\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n        vertical-align: middle;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      /* Color the icon if light or sun is on */\n      ha-icon[data-domain=\"light\"][data-state=\"on\"],\n      ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n      ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n      ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n      ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"] {\n        color: var(--paper-item-icon-active-color, #fdd835);\n      }\n\n      /* Color the icon if unavailable */\n      ha-icon[data-state=\"unavailable\"] {\n        color: var(--state-icon-unavailable-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icon\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport { domainIcon } from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\n\nimport { computeDomain } from \"./compute_domain\";\nimport { domainIcon } from \"./domain_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { HomeAssistant } from \"../types\";\nimport { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { debounce } from \"../common/util/debounce\";\nimport { EntityRegistryEntry } from \"./entity_registry\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\n\nexport interface DeviceRegistryEntry {\n  id: string;\n  config_entries: string[];\n  connections: Array<[string, string]>;\n  manufacturer: string;\n  model?: string;\n  name?: string;\n  sw_version?: string;\n  via_device_id?: string;\n  area_id?: string;\n  name_by_user?: string;\n}\n\nexport interface DeviceRegistryEntryMutableParams {\n  area_id?: string | null;\n  name_by_user?: string | null;\n}\n\nexport const computeDeviceName = (\n  device: DeviceRegistryEntry,\n  hass: HomeAssistant,\n  entities?: EntityRegistryEntry[] | string[]\n) => {\n  return (\n    device.name_by_user ||\n    device.name ||\n    (entities && fallbackDeviceName(hass, entities)) ||\n    hass.localize(\"ui.panel.config.devices.unnamed_device\")\n  );\n};\n\nexport const fallbackDeviceName = (\n  hass: HomeAssistant,\n  entities: EntityRegistryEntry[] | string[]\n) => {\n  for (const entity of entities || []) {\n    const entityId = typeof entity === \"string\" ? entity : entity.entity_id;\n    const stateObj = hass.states[entityId];\n    if (stateObj) {\n      return computeStateName(stateObj);\n    }\n  }\n  return undefined;\n};\n\nexport const updateDeviceRegistryEntry = (\n  hass: HomeAssistant,\n  deviceId: string,\n  updates: Partial<DeviceRegistryEntryMutableParams>\n) =>\n  hass.callWS<DeviceRegistryEntry>({\n    type: \"config/device_registry/update\",\n    device_id: deviceId,\n    ...updates,\n  });\n\nconst fetchDeviceRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/device_registry/list\",\n  });\n\nconst subscribeDeviceRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchDeviceRegistry(conn).then((devices) =>\n          store.setState(devices, true)\n        ),\n      500,\n      true\n    ),\n    \"device_registry_updated\"\n  );\n\nexport const subscribeDeviceRegistry = (\n  conn: Connection,\n  onChange: (devices: DeviceRegistryEntry[]) => void\n) =>\n  createCollection<DeviceRegistryEntry[]>(\n    \"_dr\",\n    fetchDeviceRegistry,\n    subscribeDeviceRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface ConfirmationDialogParams {\n  title?: string;\n  text: string;\n  confirmBtnText?: string;\n  cancelBtnText?: string;\n  confirm: () => void;\n}\n\nexport const loadConfirmationDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-confirmation\");\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: ConfirmationDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-confirmation\",\n    dialogImport: loadConfirmationDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { compare } from \"../common/string/compare\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface AreaRegistryEntry {\n  area_id: string;\n  name: string;\n}\n\nexport interface AreaRegistryEntryMutableParams {\n  name: string;\n}\n\nexport const createAreaRegistryEntry = (\n  hass: HomeAssistant,\n  values: AreaRegistryEntryMutableParams\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/create\",\n    ...values,\n  });\n\nexport const updateAreaRegistryEntry = (\n  hass: HomeAssistant,\n  areaId: string,\n  updates: Partial<AreaRegistryEntryMutableParams>\n) =>\n  hass.callWS<AreaRegistryEntry>({\n    type: \"config/area_registry/update\",\n    area_id: areaId,\n    ...updates,\n  });\n\nexport const deleteAreaRegistryEntry = (hass: HomeAssistant, areaId: string) =>\n  hass.callWS({\n    type: \"config/area_registry/delete\",\n    area_id: areaId,\n  });\n\nconst fetchAreaRegistry = (conn) =>\n  conn\n    .sendMessagePromise({\n      type: \"config/area_registry/list\",\n    })\n    .then((areas) => areas.sort((ent1, ent2) => compare(ent1.name, ent2.name)));\n\nconst subscribeAreaRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchAreaRegistry(conn).then((areas) => store.setState(areas, true)),\n      500,\n      true\n    ),\n    \"area_registry_updated\"\n  );\n\nexport const subscribeAreaRegistry = (\n  conn: Connection,\n  onChange: (areas: AreaRegistryEntry[]) => void\n) =>\n  createCollection<AreaRegistryEntry[]>(\n    \"_areaRegistry\",\n    fetchAreaRegistry,\n    subscribeAreaRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface EntityRegistryEntry {\n  entity_id: string;\n  name: string;\n  platform: string;\n  config_entry_id?: string;\n  device_id?: string;\n  disabled_by: string | null;\n}\n\nexport interface EntityRegistryEntryUpdateParams {\n  name?: string | null;\n  disabled_by?: string | null;\n  new_entity_id?: string;\n}\n\nexport const computeEntityRegistryName = (\n  hass: HomeAssistant,\n  entry: EntityRegistryEntry\n): string | null => {\n  if (entry.name) {\n    return entry.name;\n  }\n  const state = hass.states[entry.entity_id];\n  return state ? computeStateName(state) : null;\n};\n\nexport const updateEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string,\n  updates: Partial<EntityRegistryEntryUpdateParams>\n): Promise<EntityRegistryEntry> =>\n  hass.callWS<EntityRegistryEntry>({\n    type: \"config/entity_registry/update\",\n    entity_id: entityId,\n    ...updates,\n  });\n\nexport const removeEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"config/entity_registry/remove\",\n    entity_id: entityId,\n  });\n\nconst fetchEntityRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/entity_registry/list\",\n  });\n\nconst subscribeEntityRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchEntityRegistry(conn).then((entities) =>\n          store.setState(entities, true)\n        ),\n      500,\n      true\n    ),\n    \"entity_registry_updated\"\n  );\n\nexport const subscribeEntityRegistry = (\n  conn: Connection,\n  onChange: (entities: EntityRegistryEntry[]) => void\n) =>\n  createCollection<EntityRegistryEntry[]>(\n    \"_entityRegistry\",\n    fetchEntityRegistry,\n    subscribeEntityRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { HomeAssistant } from \"../types\";\n\nexport interface ConfigEntry {\n  entry_id: string;\n  domain: string;\n  title: string;\n  source: string;\n  state: string;\n  connection_class: string;\n  supports_options: boolean;\n}\n\nexport interface ConfigEntrySystemOptions {\n  disable_new_entities: boolean;\n}\n\nexport const getConfigEntries = (hass: HomeAssistant) =>\n  hass.callApi<ConfigEntry[]>(\"GET\", \"config/config_entries/entry\");\n\nexport const deleteConfigEntry = (hass: HomeAssistant, configEntryId: string) =>\n  hass.callApi<{\n    require_restart: boolean;\n  }>(\"DELETE\", `config/config_entries/entry/${configEntryId}`);\n\nexport const getConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string\n) =>\n  hass.callWS<ConfigEntrySystemOptions>({\n    type: \"config_entries/system_options/list\",\n    entry_id: configEntryId,\n  });\n\nexport const updateConfigEntrySystemOptions = (\n  hass: HomeAssistant,\n  configEntryId: string,\n  params: Partial<ConfigEntrySystemOptions>\n) =>\n  hass.callWS({\n    type: \"config_entries/system_options/update\",\n    entry_id: configEntryId,\n    ...params,\n  });\n","import { TemplateResult, html } from \"lit-html\";\nimport {\n  css,\n  CSSResult,\n  customElement,\n  LitElement,\n  property,\n} from \"lit-element\";\nimport { fireEvent } from \"../dom/fire_event\";\nimport \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-button\";\n\n@customElement(\"search-input\")\nclass SearchInput extends LitElement {\n  @property() private filter?: string;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <div class=\"search-container\">\n        <paper-input\n          autofocus\n          label=\"Search\"\n          .value=${this.filter}\n          @value-changed=${this._filterInputChanged}\n        >\n          <iron-icon\n            icon=\"hass:magnify\"\n            slot=\"prefix\"\n            class=\"prefix\"\n          ></iron-icon>\n          ${this.filter &&\n            html`\n              <paper-icon-button\n                slot=\"suffix\"\n                class=\"suffix\"\n                @click=${this._clearSearch}\n                icon=\"hass:close\"\n                alt=\"Clear\"\n                title=\"Clear\"\n              ></paper-icon-button>\n            `}\n        </paper-input>\n      </div>\n    `;\n  }\n\n  private async _filterChanged(value: string) {\n    fireEvent(this, \"value-changed\", { value: String(value) });\n  }\n\n  private async _filterInputChanged(e) {\n    this._filterChanged(e.target.value);\n  }\n\n  private async _clearSearch() {\n    this._filterChanged(\"\");\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input {\n        flex: 1 1 auto;\n        margin: 0 16px;\n      }\n      .search-container {\n        display: inline-flex;\n        width: 100%;\n        align-items: center;\n      }\n      .prefix {\n        margin: 8px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"search-input\": SearchInput;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { DataEntryFlowStep, DataEntryFlowProgress } from \"./data_entry_flow\";\nimport { debounce } from \"../common/util/debounce\";\nimport { getCollection, Connection } from \"home-assistant-js-websocket\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\n\nexport const createConfigFlow = (hass: HomeAssistant, handler: string) =>\n  hass.callApi<DataEntryFlowStep>(\"POST\", \"config/config_entries/flow\", {\n    handler,\n  });\n\nexport const fetchConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"GET\",\n    `config/config_entries/flow/${flowId}`\n  );\n\nexport const handleConfigFlowStep = (\n  hass: HomeAssistant,\n  flowId: string,\n  data: { [key: string]: any }\n) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"POST\",\n    `config/config_entries/flow/${flowId}`,\n    data\n  );\n\nexport const deleteConfigFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi(\"DELETE\", `config/config_entries/flow/${flowId}`);\n\nexport const getConfigFlowHandlers = (hass: HomeAssistant) =>\n  hass.callApi<string[]>(\"GET\", \"config/config_entries/flow_handlers\");\n\nconst fetchConfigFlowInProgress = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config_entries/flow/progress\",\n  });\n\nconst subscribeConfigFlowInProgressUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchConfigFlowInProgress(conn).then((flows) =>\n          store.setState(flows, true)\n        ),\n      500,\n      true\n    ),\n    \"config_entry_discovered\"\n  );\n\nexport const getConfigFlowInProgressCollection = (conn: Connection) =>\n  getCollection<DataEntryFlowProgress[]>(\n    conn,\n    \"_configFlowProgress\",\n    fetchConfigFlowInProgress,\n    subscribeConfigFlowInProgressUpdates\n  );\n\nexport const subscribeConfigFlowInProgress = (\n  hass: HomeAssistant,\n  onChange: (flows: DataEntryFlowProgress[]) => void\n) => getConfigFlowInProgressCollection(hass.connection).subscribe(onChange);\n\nexport const localizeConfigFlowTitle = (\n  localize: LocalizeFunc,\n  flow: DataEntryFlowProgress\n) => {\n  const placeholders = flow.context.title_placeholders || {};\n  const placeholderKeys = Object.keys(placeholders);\n  if (placeholderKeys.length === 0) {\n    return localize(`component.${flow.handler}.config.title`);\n  }\n  const args: string[] = [];\n  placeholderKeys.forEach((key) => {\n    args.push(key);\n    args.push(placeholders[key]);\n  });\n  return localize(`component.${flow.handler}.config.flow_title`, ...args);\n};\n","import { customElement, CSSResult, css } from \"lit-element\";\nimport \"@material/mwc-checkbox\";\n// tslint:disable-next-line\nimport { Checkbox } from \"@material/mwc-checkbox\";\nimport { style } from \"@material/mwc-checkbox/mwc-checkbox-css\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcCheckbox = customElements.get(\"mwc-checkbox\") as Constructor<Checkbox>;\n\n@customElement(\"ha-checkbox\")\nexport class HaCheckbox extends MwcCheckbox {\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate)\n          ~ .mdc-checkbox__background {\n          border-color: rgba(var(--rgb-primary-text-color), 0.54);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-checkbox\": HaCheckbox;\n  }\n}\n","import { repeat } from \"lit-html/directives/repeat\";\nimport deepClone from \"deep-clone-simple\";\n\nimport {\n  MDCDataTableAdapter,\n  MDCDataTableFoundation,\n} from \"@material/data-table\";\n\nimport { classMap } from \"lit-html/directives/class-map\";\n\nimport {\n  html,\n  query,\n  queryAll,\n  CSSResult,\n  css,\n  customElement,\n  property,\n  TemplateResult,\n  PropertyValues,\n} from \"lit-element\";\n\nimport { BaseElement } from \"@material/mwc-base/base-element\";\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// @ts-ignore\n// tslint:disable-next-line: no-implicit-dependencies\nimport sortFilterWorker from \"workerize-loader!./sort_filter_worker\";\n\nimport \"../ha-icon\";\nimport \"../../common/search/search-input\";\nimport \"../ha-checkbox\";\n// tslint:disable-next-line\nimport { HaCheckbox } from \"../ha-checkbox\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { debounce } from \"../../common/util/debounce\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"selection-changed\": SelectionChangedEvent;\n    \"row-click\": RowClickedEvent;\n    \"sorting-changed\": SortingChangedEvent;\n  }\n}\n\nexport interface RowClickedEvent {\n  id: string;\n}\n\nexport interface SelectionChangedEvent {\n  id: string;\n  selected: boolean;\n}\n\nexport interface SortingChangedEvent {\n  column: string;\n  direction: SortingDirection;\n}\n\nexport type SortingDirection = \"desc\" | \"asc\" | null;\n\nexport interface DataTableColumnContainer {\n  [key: string]: DataTableColumnData;\n}\n\nexport interface DataTableSortColumnData {\n  sortable?: boolean;\n  filterable?: boolean;\n  filterKey?: string;\n  direction?: SortingDirection;\n}\n\nexport interface DataTableColumnData extends DataTableSortColumnData {\n  title: string;\n  type?: \"numeric\" | \"icon\";\n  template?: <T>(data: any, row: T) => TemplateResult;\n}\n\nexport interface DataTableRowData {\n  [key: string]: any;\n}\n\n@customElement(\"ha-data-table\")\nexport class HaDataTable extends BaseElement {\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n  @property({ type: Boolean }) public selectable = false;\n  @property({ type: String }) public id = \"id\";\n  protected mdcFoundation!: MDCDataTableFoundation;\n  protected readonly mdcFoundationClass = MDCDataTableFoundation;\n  @query(\".mdc-data-table\") protected mdcRoot!: HTMLElement;\n  @queryAll(\".mdc-data-table__row\") protected rowElements!: HTMLElement[];\n  @query(\"#header-checkbox\") private _headerCheckbox!: HaCheckbox;\n  @property({ type: Boolean }) private _filterable = false;\n  @property({ type: Boolean }) private _headerChecked = false;\n  @property({ type: Boolean }) private _headerIndeterminate = false;\n  @property({ type: Array }) private _checkedRows: string[] = [];\n  @property({ type: String }) private _filter = \"\";\n  @property({ type: String }) private _sortColumn?: string;\n  @property({ type: String }) private _sortDirection: SortingDirection = null;\n  @property({ type: Array }) private _filteredData: DataTableRowData[] = [];\n  private _sortColumns: {\n    [key: string]: DataTableSortColumnData;\n  } = {};\n  private curRequest = 0;\n  private _worker: any | undefined;\n\n  private _debounceSearch = debounce(\n    (ev) => {\n      this._filter = ev.detail.value;\n    },\n    200,\n    false\n  );\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this._worker = sortFilterWorker();\n  }\n\n  protected updated(properties: PropertyValues) {\n    super.updated(properties);\n\n    if (properties.has(\"columns\")) {\n      this._filterable = Object.values(this.columns).some(\n        (column) => column.filterable\n      );\n\n      for (const columnId in this.columns) {\n        if (this.columns[columnId].direction) {\n          this._sortDirection = this.columns[columnId].direction!;\n          this._sortColumn = columnId;\n          break;\n        }\n      }\n\n      const clonedColumns: DataTableColumnContainer = deepClone(this.columns);\n      Object.values(clonedColumns).forEach((column: DataTableColumnData) => {\n        delete column.title;\n        delete column.type;\n        delete column.template;\n      });\n\n      this._sortColumns = clonedColumns;\n    }\n\n    if (\n      properties.has(\"data\") ||\n      properties.has(\"columns\") ||\n      properties.has(\"_filter\") ||\n      properties.has(\"_sortColumn\") ||\n      properties.has(\"_sortDirection\")\n    ) {\n      this._filterData();\n    }\n  }\n\n  protected render() {\n    return html`\n      ${this._filterable\n        ? html`\n            <search-input\n              @value-changed=${this._handleSearchChange}\n            ></search-input>\n          `\n        : \"\"}\n      <div class=\"mdc-data-table\">\n        <table class=\"mdc-data-table__table\">\n          <thead>\n            <tr class=\"mdc-data-table__header-row\">\n              ${this.selectable\n                ? html`\n                    <th\n                      class=\"mdc-data-table__header-cell mdc-data-table__header-cell--checkbox\"\n                      role=\"columnheader\"\n                      scope=\"col\"\n                    >\n                      <ha-checkbox\n                        id=\"header-checkbox\"\n                        class=\"mdc-data-table__row-checkbox\"\n                        @change=${this._handleHeaderRowCheckboxChange}\n                        .indeterminate=${this._headerIndeterminate}\n                        .checked=${this._headerChecked}\n                      >\n                      </ha-checkbox>\n                    </th>\n                  `\n                : \"\"}\n              ${Object.entries(this.columns).map((columnEntry) => {\n                const [key, column] = columnEntry;\n                const sorted = key === this._sortColumn;\n                const classes = {\n                  \"mdc-data-table__header-cell--numeric\": Boolean(\n                    column.type && column.type === \"numeric\"\n                  ),\n                  \"mdc-data-table__header-cell--icon\": Boolean(\n                    column.type && column.type === \"icon\"\n                  ),\n                  sortable: Boolean(column.sortable),\n                  \"not-sorted\": Boolean(column.sortable && !sorted),\n                };\n                return html`\n                  <th\n                    class=\"mdc-data-table__header-cell ${classMap(classes)}\"\n                    role=\"columnheader\"\n                    scope=\"col\"\n                    @click=${this._handleHeaderClick}\n                    data-column-id=\"${key}\"\n                  >\n                    ${column.sortable\n                      ? html`\n                          <ha-icon\n                            .icon=${sorted && this._sortDirection === \"desc\"\n                              ? \"hass:arrow-down\"\n                              : \"hass:arrow-up\"}\n                          ></ha-icon>\n                        `\n                      : \"\"}\n                    <span>${column.title}</span>\n                  </th>\n                `;\n              })}\n            </tr>\n          </thead>\n          <tbody class=\"mdc-data-table__content\">\n            ${repeat(\n              this._filteredData!,\n              (row: DataTableRowData) => row[this.id],\n              (row: DataTableRowData) => html`\n                <tr\n                  data-row-id=\"${row[this.id]}\"\n                  @click=${this._handleRowClick}\n                  class=\"mdc-data-table__row\"\n                >\n                  ${this.selectable\n                    ? html`\n                        <td\n                          class=\"mdc-data-table__cell mdc-data-table__cell--checkbox\"\n                        >\n                          <ha-checkbox\n                            class=\"mdc-data-table__row-checkbox\"\n                            @change=${this._handleRowCheckboxChange}\n                            .checked=${this._checkedRows.includes(row[this.id])}\n                          >\n                          </ha-checkbox>\n                        </td>\n                      `\n                    : \"\"}\n                  ${Object.entries(this.columns).map((columnEntry) => {\n                    const [key, column] = columnEntry;\n                    return html`\n                      <td\n                        class=\"mdc-data-table__cell ${classMap({\n                          \"mdc-data-table__cell--numeric\": Boolean(\n                            column.type && column.type === \"numeric\"\n                          ),\n                          \"mdc-data-table__cell--icon\": Boolean(\n                            column.type && column.type === \"icon\"\n                          ),\n                        })}\"\n                      >\n                        ${column.template\n                          ? column.template(row[key], row)\n                          : row[key]}\n                      </td>\n                    `;\n                  })}\n                </tr>\n              `\n            )}\n          </tbody>\n        </table>\n      </div>\n    `;\n  }\n\n  protected createAdapter(): MDCDataTableAdapter {\n    return {\n      addClassAtRowIndex: (rowIndex: number, cssClasses: string) => {\n        this.rowElements[rowIndex].classList.add(cssClasses);\n      },\n      getRowCount: () => this.data.length,\n      getRowElements: () => this.rowElements,\n      getRowIdAtIndex: (rowIndex: number) => this._getRowIdAtIndex(rowIndex),\n      getRowIndexByChildElement: (el: Element) =>\n        Array.prototype.indexOf.call(this.rowElements, el.closest(\"tr\")),\n      getSelectedRowCount: () => this._checkedRows.length,\n      isCheckboxAtRowIndexChecked: (rowIndex: number) =>\n        this._checkedRows.includes(this._getRowIdAtIndex(rowIndex)),\n      isHeaderRowCheckboxChecked: () => this._headerChecked,\n      isRowsSelectable: () => true,\n      notifyRowSelectionChanged: () => undefined,\n      notifySelectedAll: () => undefined,\n      notifyUnselectedAll: () => undefined,\n      registerHeaderRowCheckbox: () => undefined,\n      registerRowCheckboxes: () => undefined,\n      removeClassAtRowIndex: (rowIndex: number, cssClasses: string) => {\n        this.rowElements[rowIndex].classList.remove(cssClasses);\n      },\n      setAttributeAtRowIndex: (\n        rowIndex: number,\n        attr: string,\n        value: string\n      ) => {\n        this.rowElements[rowIndex].setAttribute(attr, value);\n      },\n      setHeaderRowCheckboxChecked: (checked: boolean) => {\n        this._headerChecked = checked;\n      },\n      setHeaderRowCheckboxIndeterminate: (indeterminate: boolean) => {\n        this._headerIndeterminate = indeterminate;\n      },\n      setRowCheckboxCheckedAtIndex: (rowIndex: number, checked: boolean) => {\n        this._setRowChecked(this._getRowIdAtIndex(rowIndex), checked);\n      },\n    };\n  }\n\n  private async _filterData() {\n    const startTime = new Date().getTime();\n    this.curRequest++;\n    const curRequest = this.curRequest;\n\n    const filterProm = this._worker.filterSortData(\n      this.data,\n      this._sortColumns,\n      this._filter,\n      this._sortDirection,\n      this._sortColumn\n    );\n\n    const [data] = await Promise.all([filterProm, nextRender]);\n\n    const curTime = new Date().getTime();\n    const elapsed = curTime - startTime;\n\n    if (elapsed < 100) {\n      await new Promise((resolve) => setTimeout(resolve, 100 - elapsed));\n    }\n    if (this.curRequest !== curRequest) {\n      return;\n    }\n    this._filteredData = data;\n  }\n\n  private _getRowIdAtIndex(rowIndex: number): string {\n    return this.rowElements[rowIndex].getAttribute(\"data-row-id\")!;\n  }\n\n  private _handleHeaderClick(ev: Event) {\n    const columnId = (ev.target as HTMLElement)\n      .closest(\"th\")!\n      .getAttribute(\"data-column-id\")!;\n    if (!this.columns[columnId].sortable) {\n      return;\n    }\n    if (!this._sortDirection || this._sortColumn !== columnId) {\n      this._sortDirection = \"asc\";\n    } else if (this._sortDirection === \"asc\") {\n      this._sortDirection = \"desc\";\n    } else {\n      this._sortDirection = null;\n    }\n\n    this._sortColumn = this._sortDirection === null ? undefined : columnId;\n\n    fireEvent(this, \"sorting-changed\", {\n      column: columnId,\n      direction: this._sortDirection,\n    });\n  }\n\n  private _handleHeaderRowCheckboxChange() {\n    this._headerChecked = this._headerCheckbox.checked;\n    this._headerIndeterminate = this._headerCheckbox.indeterminate;\n    this.mdcFoundation.handleHeaderRowCheckboxChange();\n  }\n\n  private _handleRowCheckboxChange(ev: Event) {\n    const checkbox = ev.target as HaCheckbox;\n    const rowId = checkbox.closest(\"tr\")!.getAttribute(\"data-row-id\");\n\n    this._setRowChecked(rowId!, checkbox.checked);\n    this.mdcFoundation.handleRowCheckboxChange(ev);\n  }\n\n  private _handleRowClick(ev: Event) {\n    const rowId = (ev.target as HTMLElement)\n      .closest(\"tr\")!\n      .getAttribute(\"data-row-id\")!;\n    fireEvent(this, \"row-click\", { id: rowId }, { bubbles: false });\n  }\n\n  private _setRowChecked(rowId: string, checked: boolean) {\n    if (checked && !this._checkedRows.includes(rowId)) {\n      this._checkedRows = [...this._checkedRows, rowId];\n    } else if (!checked) {\n      const index = this._checkedRows.indexOf(rowId);\n      if (index !== -1) {\n        this._checkedRows.splice(index, 1);\n      }\n    }\n    fireEvent(this, \"selection-changed\", {\n      id: rowId,\n      selected: checked,\n    });\n  }\n\n  private _handleSearchChange(ev: CustomEvent): void {\n    this._debounceSearch(ev);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      /* default mdc styles, colors changed, without checkbox styles */\n\n      .mdc-data-table__content {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        font-weight: 400;\n        letter-spacing: 0.0178571429em;\n        text-decoration: inherit;\n        text-transform: inherit;\n      }\n\n      .mdc-data-table {\n        background-color: var(--data-table-background-color);\n        border-radius: 4px;\n        border-width: 1px;\n        border-style: solid;\n        border-color: rgba(var(--rgb-primary-text-color), 0.12);\n        display: inline-flex;\n        flex-direction: column;\n        box-sizing: border-box;\n        overflow-x: auto;\n      }\n\n      .mdc-data-table__row--selected {\n        background-color: rgba(var(--rgb-primary-color), 0.04);\n      }\n\n      .mdc-data-table__row {\n        border-top-color: rgba(var(--rgb-primary-text-color), 0.12);\n      }\n\n      .mdc-data-table__row {\n        border-top-width: 1px;\n        border-top-style: solid;\n      }\n\n      .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n        background-color: rgba(var(--rgb-primary-text-color), 0.04);\n      }\n\n      .mdc-data-table__header-cell {\n        color: var(--primary-text-color);\n      }\n\n      .mdc-data-table__cell {\n        color: var(--primary-text-color);\n      }\n\n      .mdc-data-table__header-row {\n        height: 56px;\n      }\n\n      .mdc-data-table__row {\n        height: 52px;\n      }\n\n      .mdc-data-table__cell,\n      .mdc-data-table__header-cell {\n        padding-right: 16px;\n        padding-left: 16px;\n      }\n\n      .mdc-data-table__header-cell--checkbox,\n      .mdc-data-table__cell--checkbox {\n        /* @noflip */\n        padding-left: 16px;\n        /* @noflip */\n        padding-right: 0;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell--checkbox,\n      .mdc-data-table__header-cell--checkbox[dir=\"rtl\"],\n      [dir=\"rtl\"] .mdc-data-table__cell--checkbox,\n      .mdc-data-table__cell--checkbox[dir=\"rtl\"] {\n        /* @noflip */\n        padding-left: 0;\n        /* @noflip */\n        padding-right: 16px;\n      }\n\n      .mdc-data-table__table {\n        width: 100%;\n        border: 0;\n        white-space: nowrap;\n        border-collapse: collapse;\n      }\n\n      .mdc-data-table__cell {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.25rem;\n        font-weight: 400;\n        letter-spacing: 0.0178571429em;\n        text-decoration: inherit;\n        text-transform: inherit;\n      }\n\n      .mdc-data-table__cell--numeric {\n        text-align: right;\n      }\n      [dir=\"rtl\"] .mdc-data-table__cell--numeric,\n      .mdc-data-table__cell--numeric[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: left;\n      }\n\n      .mdc-data-table__cell--icon {\n        color: var(--secondary-text-color);\n        text-align: center;\n      }\n\n      .mdc-data-table__header-cell {\n        font-family: Roboto, sans-serif;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-size: 0.875rem;\n        line-height: 1.375rem;\n        font-weight: 500;\n        letter-spacing: 0.0071428571em;\n        text-decoration: inherit;\n        text-transform: inherit;\n        text-align: left;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell,\n      .mdc-data-table__header-cell[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: right;\n      }\n\n      .mdc-data-table__header-cell--numeric {\n        text-align: right;\n      }\n      [dir=\"rtl\"] .mdc-data-table__header-cell--numeric,\n      .mdc-data-table__header-cell--numeric[dir=\"rtl\"] {\n        /* @noflip */\n        text-align: left;\n      }\n\n      .mdc-data-table__header-cell--icon {\n        text-align: center;\n      }\n\n      /* custom from here */\n\n      .mdc-data-table {\n        display: block;\n      }\n      .mdc-data-table__header-cell {\n        overflow: hidden;\n      }\n      .mdc-data-table__header-cell.sortable {\n        cursor: pointer;\n      }\n      .mdc-data-table__header-cell.not-sorted:not(.mdc-data-table__header-cell--numeric):not(.mdc-data-table__header-cell--icon)\n        span {\n        position: relative;\n        left: -24px;\n      }\n      .mdc-data-table__header-cell.not-sorted > * {\n        transition: left 0.2s ease 0s;\n      }\n      .mdc-data-table__header-cell.not-sorted ha-icon {\n        left: -36px;\n      }\n      .mdc-data-table__header-cell.not-sorted:not(.mdc-data-table__header-cell--numeric):not(.mdc-data-table__header-cell--icon):hover\n        span {\n        left: 0px;\n      }\n      .mdc-data-table__header-cell:hover.not-sorted ha-icon {\n        left: 0px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-data-table\": HaDataTable;\n  }\n}\n","\n\t\t\t\tvar addMethods = require(\"../../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"filterSortData\",\"filterData\",\"sortData\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"c48b0433f76320638017.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import { TemplateResult } from \"lit-html\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../types\";\nimport {\n  DataEntryFlowStepCreateEntry,\n  DataEntryFlowStepExternal,\n  DataEntryFlowStepForm,\n  DataEntryFlowStep,\n  DataEntryFlowStepAbort,\n  FieldSchema,\n} from \"../../data/data_entry_flow\";\n\nexport interface FlowConfig {\n  loadDevicesAndAreas: boolean;\n\n  getFlowHandlers?: (hass: HomeAssistant) => Promise<string[]>;\n\n  createFlow(hass: HomeAssistant, handler: string): Promise<DataEntryFlowStep>;\n\n  fetchFlow(hass: HomeAssistant, flowId: string): Promise<DataEntryFlowStep>;\n\n  handleFlowStep(\n    hass: HomeAssistant,\n    flowId: string,\n    data: { [key: string]: any }\n  ): Promise<DataEntryFlowStep>;\n\n  deleteFlow(hass: HomeAssistant, flowId: string): Promise<unknown>;\n\n  renderAbortDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepAbort\n  ): TemplateResult | \"\";\n\n  renderShowFormStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): string;\n\n  renderShowFormStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm\n  ): TemplateResult | \"\";\n\n  renderShowFormStepFieldLabel(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    field: FieldSchema\n  ): string;\n\n  renderShowFormStepFieldError(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepForm,\n    error: string\n  ): string;\n\n  renderExternalStepHeader(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): string;\n\n  renderExternalStepDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepExternal\n  ): TemplateResult | \"\";\n\n  renderCreateEntryDescription(\n    hass: HomeAssistant,\n    step: DataEntryFlowStepCreateEntry\n  ): TemplateResult | \"\";\n}\n\nexport interface DataEntryFlowDialogParams {\n  startFlowHandler?: string;\n  continueFlowId?: string;\n  dialogClosedCallback?: (params: { flowFinished: boolean }) => void;\n  flowConfig: FlowConfig;\n  showAdvanced?: boolean;\n}\n\nexport const loadDataEntryFlowDialog = () =>\n  import(\n    /* webpackChunkName: \"dialog-config-flow\" */ \"./dialog-data-entry-flow\"\n  );\n\nexport const showFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">,\n  flowConfig: FlowConfig\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-data-entry-flow\",\n    dialogImport: loadDataEntryFlowDialog,\n    dialogParams: {\n      ...dialogParams,\n      flowConfig,\n    },\n  });\n};\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../ha-icon\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\n\nclass HaStateIcon extends PolymerElement {\n  static get template() {\n    return html`\n      <ha-icon icon=\"[[computeIcon(stateObj)]]\"></ha-icon>\n    `;\n  }\n\n  static get properties() {\n    return {\n      stateObj: {\n        type: Object,\n      },\n    };\n  }\n\n  computeIcon(stateObj) {\n    return stateIcon(stateObj);\n  }\n}\n\ncustomElements.define(\"ha-state-icon\", HaStateIcon);\n","import {\n  getConfigFlowHandlers,\n  fetchConfigFlow,\n  handleConfigFlowStep,\n  deleteConfigFlow,\n  createConfigFlow,\n} from \"../../data/config_flow\";\nimport { html } from \"lit-element\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport {\n  showFlowDialog,\n  DataEntryFlowDialogParams,\n  loadDataEntryFlowDialog,\n} from \"./show-dialog-data-entry-flow\";\nimport { caseInsensitiveCompare } from \"../../common/string/compare\";\n\nexport const loadConfigFlowDialog = loadDataEntryFlowDialog;\n\nexport const showConfigFlowDialog = (\n  element: HTMLElement,\n  dialogParams: Omit<DataEntryFlowDialogParams, \"flowConfig\">\n): void =>\n  showFlowDialog(element, dialogParams, {\n    loadDevicesAndAreas: true,\n    getFlowHandlers: (hass) =>\n      getConfigFlowHandlers(hass).then((handlers) =>\n        handlers.sort((handlerA, handlerB) =>\n          caseInsensitiveCompare(\n            hass.localize(`component.${handlerA}.config.title`),\n            hass.localize(`component.${handlerB}.config.title`)\n          )\n        )\n      ),\n    createFlow: createConfigFlow,\n    fetchFlow: fetchConfigFlow,\n    handleFlowStep: handleConfigFlowStep,\n    deleteFlow: deleteConfigFlow,\n\n    renderAbortDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.abort.${step.reason}`,\n        step.description_placeholders\n      );\n\n      return description\n        ? html`\n            <ha-markdown allowsvg .content=${description}></ha-markdown>\n          `\n        : \"\";\n    },\n\n    renderShowFormStepHeader(hass, step) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.title`\n      );\n    },\n\n    renderShowFormStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.step.${step.step_id}.description`,\n        step.description_placeholders\n      );\n      return description\n        ? html`\n            <ha-markdown allowsvg .content=${description}></ha-markdown>\n          `\n        : \"\";\n    },\n\n    renderShowFormStepFieldLabel(hass, step, field) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.data.${field.name}`\n      );\n    },\n\n    renderShowFormStepFieldError(hass, step, error) {\n      return hass.localize(`component.${step.handler}.config.error.${error}`);\n    },\n\n    renderExternalStepHeader(hass, step) {\n      return hass.localize(\n        `component.${step.handler}.config.step.${step.step_id}.title`\n      );\n    },\n\n    renderExternalStepDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.${step.step_id}.description`,\n        step.description_placeholders\n      );\n\n      return html`\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.external_step.description\"\n          )}\n        </p>\n        ${description\n          ? html`\n              <ha-markdown allowsvg .content=${description}></ha-markdown>\n            `\n          : \"\"}\n      `;\n    },\n\n    renderCreateEntryDescription(hass, step) {\n      const description = localizeKey(\n        hass.localize,\n        `component.${step.handler}.config.create_entry.${step.description ||\n          \"default\"}`,\n        step.description_placeholders\n      );\n\n      return html`\n        ${description\n          ? html`\n              <ha-markdown allowsvg .content=${description}></ha-markdown>\n            `\n          : \"\"}\n        <p>\n          ${hass.localize(\n            \"ui.panel.config.integrations.config_flow.created_config\",\n            \"name\",\n            step.title\n          )}\n        </p>\n      `;\n    },\n  });\n","import \"../../../components/data-table/ha-data-table\";\nimport \"../../../components/entity/ha-state-icon\";\n\nimport memoizeOne from \"memoize-one\";\n\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n// tslint:disable-next-line\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n  DataTableRowData,\n} from \"../../../components/data-table/ha-data-table\";\n// tslint:disable-next-line\nimport {\n  DeviceRegistryEntry,\n  computeDeviceName,\n} from \"../../../data/device_registry\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\nimport { ConfigEntry } from \"../../../data/config_entries\";\nimport { AreaRegistryEntry } from \"../../../data/area_registry\";\nimport { navigate } from \"../../../common/navigate\";\nimport { LocalizeFunc } from \"../../../common/translations/localize\";\n\nexport interface DeviceRowData extends DeviceRegistryEntry {\n  device?: DeviceRowData;\n  area?: string;\n  integration?: string;\n  battery_entity?: string;\n}\n\nexport interface DeviceEntityLookup {\n  [deviceId: string]: EntityRegistryEntry[];\n}\n\n@customElement(\"ha-devices-data-table\")\nexport class HaDevicesDataTable extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow = false;\n  @property() public devices!: DeviceRegistryEntry[];\n  @property() public entries!: ConfigEntry[];\n  @property() public entities!: EntityRegistryEntry[];\n  @property() public areas!: AreaRegistryEntry[];\n  @property() public domain!: string;\n\n  private _devices = memoizeOne(\n    (\n      devices: DeviceRegistryEntry[],\n      entries: ConfigEntry[],\n      entities: EntityRegistryEntry[],\n      areas: AreaRegistryEntry[],\n      domain: string,\n      localize: LocalizeFunc\n    ) => {\n      // Some older installations might have devices pointing at invalid entryIDs\n      // So we guard for that.\n\n      let outputDevices: DeviceRowData[] = devices;\n\n      const deviceLookup: { [deviceId: string]: DeviceRegistryEntry } = {};\n      for (const device of devices) {\n        deviceLookup[device.id] = device;\n      }\n\n      const deviceEntityLookup: DeviceEntityLookup = {};\n      for (const entity of entities) {\n        if (!entity.device_id) {\n          continue;\n        }\n        if (!(entity.device_id in deviceEntityLookup)) {\n          deviceEntityLookup[entity.device_id] = [];\n        }\n        deviceEntityLookup[entity.device_id].push(entity);\n      }\n\n      const entryLookup: { [entryId: string]: ConfigEntry } = {};\n      for (const entry of entries) {\n        entryLookup[entry.entry_id] = entry;\n      }\n\n      const areaLookup: { [areaId: string]: AreaRegistryEntry } = {};\n      for (const area of areas) {\n        areaLookup[area.area_id] = area;\n      }\n\n      if (domain) {\n        outputDevices = outputDevices.filter((device) =>\n          device.config_entries.find(\n            (entryId) =>\n              entryId in entryLookup && entryLookup[entryId].domain === domain\n          )\n        );\n      }\n\n      outputDevices = outputDevices.map((device) => {\n        return {\n          ...device,\n          name: computeDeviceName(\n            device,\n            this.hass,\n            deviceEntityLookup[device.id]\n          ),\n          model: device.model || \"<unknown>\",\n          manufacturer: device.manufacturer || \"<unknown>\",\n          area: device.area_id ? areaLookup[device.area_id].name : \"No area\",\n          integration: device.config_entries.length\n            ? device.config_entries\n                .filter((entId) => entId in entryLookup)\n                .map(\n                  (entId) =>\n                    localize(\n                      `component.${entryLookup[entId].domain}.config.title`\n                    ) || entryLookup[entId].domain\n                )\n                .join(\", \")\n            : \"No integration\",\n          battery_entity: this._batteryEntity(device.id, deviceEntityLookup),\n        };\n      });\n\n      return outputDevices;\n    }\n  );\n\n  private _columns = memoizeOne(\n    (narrow: boolean): DataTableColumnContainer =>\n      narrow\n        ? {\n            name: {\n              title: \"Device\",\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n              template: (name, device: DataTableRowData) => {\n                const battery = device.battery_entity\n                  ? this.hass.states[device.battery_entity]\n                  : undefined;\n                // Have to work on a nice layout for mobile\n                return html`\n                  ${name}<br />\n                  ${device.area} | ${device.integration}<br />\n                  ${battery\n                    ? html`\n                        ${battery.state}%\n                        <ha-state-icon\n                          .hass=${this.hass!}\n                          .stateObj=${battery}\n                        ></ha-state-icon>\n                      `\n                    : \"\"}\n                `;\n              },\n            },\n          }\n        : {\n            name: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.device\"\n              ),\n              sortable: true,\n              filterable: true,\n              direction: \"asc\",\n            },\n            manufacturer: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.manufacturer\"\n              ),\n              sortable: true,\n              filterable: true,\n            },\n            model: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.model\"\n              ),\n              sortable: true,\n              filterable: true,\n            },\n            area: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.area\"\n              ),\n              sortable: true,\n              filterable: true,\n            },\n            integration: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.integration\"\n              ),\n              sortable: true,\n              filterable: true,\n            },\n            battery_entity: {\n              title: this.hass.localize(\n                \"ui.panel.config.devices.data_table.battery\"\n              ),\n              sortable: true,\n              type: \"numeric\",\n              template: (batteryEntity: string) => {\n                const battery = batteryEntity\n                  ? this.hass.states[batteryEntity]\n                  : undefined;\n                return battery\n                  ? html`\n                      ${battery.state}%\n                      <ha-state-icon\n                        .hass=${this.hass!}\n                        .stateObj=${battery}\n                      ></ha-state-icon>\n                    `\n                  : html`\n                      -\n                    `;\n              },\n            },\n          }\n  );\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-data-table\n        .columns=${this._columns(this.narrow)}\n        .data=${this._devices(\n          this.devices,\n          this.entries,\n          this.entities,\n          this.areas,\n          this.domain,\n          this.hass.localize\n        )}\n        @row-click=${this._handleRowClicked}\n      ></ha-data-table>\n    `;\n  }\n\n  private _batteryEntity(\n    deviceId: string,\n    deviceEntityLookup: DeviceEntityLookup\n  ): string | undefined {\n    const batteryEntity = (deviceEntityLookup[deviceId] || []).find(\n      (entity) =>\n        this.hass.states[entity.entity_id] &&\n        this.hass.states[entity.entity_id].attributes.device_class === \"battery\"\n    );\n\n    return batteryEntity ? batteryEntity.entity_id : undefined;\n  }\n\n  private _handleRowClicked(ev: CustomEvent) {\n    const deviceId = (ev.detail as RowClickedEvent).id;\n    navigate(this, `/config/devices/device/${deviceId}`);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-devices-data-table\": HaDevicesDataTable;\n  }\n}\n","import \"@polymer/iron-flex-layout/iron-flex-layout-classes\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport \"@material/mwc-button\";\nimport \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport \"../../../components/ha-fab\";\nimport \"../../../components/entity/ha-state-icon\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\nimport \"../../../components/ha-icon\";\n\nimport { computeRTL } from \"../../../common/util/compute_rtl\";\nimport \"../ha-config-section\";\n\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport {\n  loadConfigFlowDialog,\n  showConfigFlowDialog,\n} from \"../../../dialogs/config-flow/show-dialog-config-flow\";\nimport { localizeConfigFlowTitle } from \"../../../data/config_flow\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  property,\n  customElement,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ConfigEntry } from \"../../../data/config_entries\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\nimport { DataEntryFlowProgress } from \"../../../data/data_entry_flow\";\n\n@customElement(\"ha-config-entries-dashboard\")\nexport class HaConfigManagerDashboard extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  @property() private configEntries!: ConfigEntry[];\n\n  /**\n   * Entity Registry entries.\n   */\n  @property() private entityRegistryEntries!: EntityRegistryEntry[];\n\n  /**\n   * Current flows that are in progress and have not been started by a user.\n   * For example, can be discovered devices that require more config.\n   */\n  @property() private configEntriesInProgress!: DataEntryFlowProgress[];\n\n  public connectedCallback() {\n    super.connectedCallback();\n    loadConfigFlowDialog();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-subpage\n        header=${this.hass.localize(\"ui.panel.config.integrations.caption\")}\n      >\n        ${this.configEntriesInProgress.length\n          ? html`\n              <ha-config-section>\n                <span slot=\"header\"\n                  >${this.hass.localize(\n                    \"ui.panel.config.integrations.discovered\"\n                  )}</span\n                >\n                <ha-card>\n                  ${this.configEntriesInProgress.map(\n                    (flow) => html`\n                      <div class=\"config-entry-row\">\n                        <paper-item-body>\n                          ${localizeConfigFlowTitle(this.hass.localize, flow)}\n                        </paper-item-body>\n                        <mwc-button\n                          @click=${this._continueFlow}\n                          data-id=\"${flow.flow_id}\"\n                          >${this.hass.localize(\n                            \"ui.panel.config.integrations.configure\"\n                          )}</mwc-button\n                        >\n                      </div>\n                    `\n                  )}\n                </ha-card>\n              </ha-config-section>\n            `\n          : \"\"}\n\n        <ha-config-section class=\"configured\">\n          <span slot=\"header\"\n            >${this.hass.localize(\n              \"ui.panel.config.integrations.configured\"\n            )}</span\n          >\n          <ha-card>\n            ${this.entityRegistryEntries.length\n              ? this.configEntries.map(\n                  (item: any, idx) => html`\n                    <a\n                      href=\"/config/integrations/config_entry/${item.entry_id}\"\n                    >\n                      <paper-item data-index=${idx}>\n                        <paper-item-body two-line>\n                          <div>\n                            ${this.hass.localize(\n                              `component.${item.domain}.config.title`\n                            )}:\n                            ${item.title}\n                          </div>\n                          <div secondary>\n                            ${this._getEntities(item).map(\n                              (entity) => html`\n                                <span>\n                                  <ha-state-icon\n                                    .stateObj=${entity}\n                                  ></ha-state-icon>\n                                  <paper-tooltip position=\"bottom\"\n                                    >${computeStateName(entity)}</paper-tooltip\n                                  >\n                                </span>\n                              `\n                            )}\n                          </div>\n                        </paper-item-body>\n                        <ha-icon-next></ha-icon-next>\n                      </paper-item>\n                    </a>\n                  `\n                )\n              : html`\n                  <div class=\"config-entry-row\">\n                    <paper-item-body two-line>\n                      <div>\n                        ${this.hass.localize(\n                          \"ui.panel.config.integrations.none\"\n                        )}\n                      </div>\n                    </paper-item-body>\n                  </div>\n                `}\n          </ha-card>\n        </ha-config-section>\n\n        <ha-fab\n          icon=\"hass:plus\"\n          title=${this.hass.localize(\"ui.panel.config.integrations.new\")}\n          @click=${this._createFlow}\n          ?rtl=${computeRTL(this.hass!)}\n        ></ha-fab>\n      </hass-subpage>\n    `;\n  }\n\n  private _createFlow() {\n    showConfigFlowDialog(this, {\n      dialogClosedCallback: () => fireEvent(this, \"hass-reload-entries\"),\n      showAdvanced: this.showAdvanced,\n    });\n  }\n\n  private _continueFlow(ev: Event) {\n    showConfigFlowDialog(this, {\n      continueFlowId:\n        (ev.target as HTMLElement).getAttribute(\"data-id\") || undefined,\n      dialogClosedCallback: () => fireEvent(this, \"hass-reload-entries\"),\n    });\n  }\n\n  private _getEntities(configEntry: ConfigEntry): HassEntity[] {\n    if (!this.entityRegistryEntries) {\n      return [];\n    }\n    const states: HassEntity[] = [];\n    this.entityRegistryEntries.forEach((entity) => {\n      if (\n        entity.config_entry_id === configEntry.entry_id &&\n        entity.entity_id in this.hass.states\n      ) {\n        states.push(this.hass.states[entity.entity_id]);\n      }\n    });\n    return states;\n  }\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        overflow: hidden;\n      }\n      mwc-button {\n        top: 3px;\n        margin-right: -0.57em;\n      }\n      .config-entry-row {\n        display: flex;\n        padding: 0 16px;\n      }\n      ha-icon {\n        cursor: pointer;\n        margin: 8px;\n      }\n      .configured a {\n        color: var(--primary-text-color);\n        text-decoration: none;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n\n      ha-fab[rtl] {\n        right: auto;\n        left: 16px;\n      }\n    `;\n  }\n}\n","import \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../../components/ha-card\";\nimport \"../../../../layouts/hass-subpage\";\n\nimport { EventsMixin } from \"../../../../mixins/events-mixin\";\nimport LocalizeMixIn from \"../../../../mixins/localize-mixin\";\nimport \"../../../../components/entity/state-badge\";\nimport { computeEntityRegistryName } from \"../../../../data/entity_registry\";\n\n/*\n * @appliesMixin LocalizeMixIn\n * @appliesMixin EventsMixin\n */\nclass HaCeEntitiesCard extends LocalizeMixIn(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style>\n        ha-card {\n          margin-top: 8px;\n          padding-bottom: 8px;\n        }\n        paper-icon-item {\n          cursor: pointer;\n          padding-top: 4px;\n          padding-bottom: 4px;\n        }\n      </style>\n      <ha-card header=\"[[heading]]\">\n        <template is=\"dom-repeat\" items=\"[[entities]]\" as=\"entity\">\n          <paper-icon-item on-click=\"_openMoreInfo\">\n            <state-badge\n              state-obj=\"[[_computeStateObj(entity, hass)]]\"\n              slot=\"item-icon\"\n            ></state-badge>\n            <paper-item-body>\n              <div class=\"name\">[[_computeEntityName(entity, hass)]]</div>\n              <div class=\"secondary entity-id\">[[entity.entity_id]]</div>\n            </paper-item-body>\n          </paper-icon-item>\n        </template>\n      </ha-card>\n    `;\n  }\n\n  static get properties() {\n    return {\n      heading: String,\n      entities: Array,\n      hass: Object,\n    };\n  }\n\n  _computeStateObj(entity, hass) {\n    return hass.states[entity.entity_id];\n  }\n\n  _computeEntityName(entity, hass) {\n    return (\n      computeEntityRegistryName(hass, entity) ||\n      `(${this.localize(\n        \"ui.panel.config.integrations.config_entry.entity_unavailable\"\n      )})`\n    );\n  }\n\n  _openMoreInfo(ev) {\n    this.fire(\"hass-more-info\", { entityId: ev.model.entity.entity_id });\n  }\n}\n\ncustomElements.define(\"ha-ce-entities-card\", HaCeEntitiesCard);\n","import { HomeAssistant } from \"../types\";\nimport { DataEntryFlowStep } from \"./data_entry_flow\";\n\nexport const createOptionsFlow = (hass: HomeAssistant, handler: string) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"POST\",\n    \"config/config_entries/options/flow\",\n    {\n      handler,\n    }\n  );\n\nexport const fetchOptionsFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"GET\",\n    `config/config_entries/options/flow/${flowId}`\n  );\n\nexport const handleOptionsFlowStep = (\n  hass: HomeAssistant,\n  flowId: string,\n  data: { [key: string]: any }\n) =>\n  hass.callApi<DataEntryFlowStep>(\n    \"POST\",\n    `config/config_entries/options/flow/${flowId}`,\n    data\n  );\n\nexport const deleteOptionsFlow = (hass: HomeAssistant, flowId: string) =>\n  hass.callApi(\"DELETE\", `config/config_entries/options/flow/${flowId}`);\n","import {\n  fetchOptionsFlow,\n  handleOptionsFlowStep,\n  deleteOptionsFlow,\n  createOptionsFlow,\n} from \"../../data/options_flow\";\nimport { html } from \"lit-element\";\nimport { localizeKey } from \"../../common/translations/localize\";\nimport {\n  showFlowDialog,\n  loadDataEntryFlowDialog,\n} from \"./show-dialog-data-entry-flow\";\nimport { ConfigEntry } from \"../../data/config_entries\";\n\nexport const loadOptionsFlowDialog = loadDataEntryFlowDialog;\n\nexport const showOptionsFlowDialog = (\n  element: HTMLElement,\n  configEntry: ConfigEntry\n): void =>\n  showFlowDialog(\n    element,\n    {\n      startFlowHandler: configEntry.entry_id,\n    },\n    {\n      loadDevicesAndAreas: false,\n      createFlow: createOptionsFlow,\n      fetchFlow: fetchOptionsFlow,\n      handleFlowStep: handleOptionsFlowStep,\n      deleteFlow: deleteOptionsFlow,\n\n      renderAbortDescription(hass, step) {\n        const description = localizeKey(\n          hass.localize,\n          `component.${configEntry.domain}.options.abort.${step.reason}`,\n          step.description_placeholders\n        );\n\n        return description\n          ? html`\n              <ha-markdown allowsvg .content=${description}></ha-markdown>\n            `\n          : \"\";\n      },\n\n      renderShowFormStepHeader(hass, _step) {\n        return hass.localize(`ui.dialogs.options_flow.form.header`);\n      },\n\n      renderShowFormStepDescription(_hass, _step) {\n        return \"\";\n      },\n\n      renderShowFormStepFieldLabel(hass, step, field) {\n        return hass.localize(\n          `component.${configEntry.domain}.options.step.${step.step_id}.data.${field.name}`\n        );\n      },\n\n      renderShowFormStepFieldError(hass, _step, error) {\n        return hass.localize(\n          `component.${configEntry.domain}.options.error.${error}`\n        );\n      },\n\n      renderExternalStepHeader(_hass, _step) {\n        return \"\";\n      },\n\n      renderExternalStepDescription(_hass, _step) {\n        return \"\";\n      },\n\n      renderCreateEntryDescription(hass, _step) {\n        return html`\n          <p>${hass.localize(`ui.dialogs.options_flow.success.description`)}</p>\n        `;\n      },\n    }\n  );\n","import { fireEvent } from \"../../common/dom/fire_event\";\nimport { ConfigEntry } from \"../../data/config_entries\";\n\nexport interface ConfigEntrySystemOptionsDialogParams {\n  entry: ConfigEntry;\n  // updateEntry: (\n  //   updates: Partial<EntityRegistryEntryUpdateParams>\n  // ) => Promise<unknown>;\n  // removeEntry: () => Promise<boolean>;\n}\n\nexport const loadConfigEntrySystemOptionsDialog = () =>\n  import(\n    /* webpackChunkName: \"config-entry-system-options\" */ \"./dialog-config-entry-system-options\"\n  );\n\nexport const showConfigEntrySystemOptionsDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: ConfigEntrySystemOptionsDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-config-entry-system-options\",\n    dialogImport: loadConfigEntrySystemOptionsDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import memoizeOne from \"memoize-one\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../layouts/hass-error-screen\";\n\nimport \"../../devices/ha-devices-data-table\";\nimport \"./ha-ce-entities-card\";\nimport { showOptionsFlowDialog } from \"../../../../dialogs/config-flow/show-dialog-options-flow\";\nimport { property, LitElement, CSSResult, css, html } from \"lit-element\";\nimport { navigate } from \"../../../../common/navigate\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  ConfigEntry,\n  deleteConfigEntry,\n} from \"../../../../data/config_entries\";\nimport { EntityRegistryEntry } from \"../../../../data/entity_registry\";\nimport { DeviceRegistryEntry } from \"../../../../data/device_registry\";\nimport { AreaRegistryEntry } from \"../../../../data/area_registry\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { showConfigEntrySystemOptionsDialog } from \"../../../../dialogs/config-entry-system-options/show-dialog-config-entry-system-options\";\nimport { showConfirmationDialog } from \"../../../../dialogs/confirmation/show-dialog-confirmation\";\n\nclass HaConfigEntryPage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public configEntryId!: string;\n  @property() public configEntries!: ConfigEntry[];\n  @property() public entityRegistryEntries!: EntityRegistryEntry[];\n  @property() public deviceRegistryEntries!: DeviceRegistryEntry[];\n  @property() public areas!: AreaRegistryEntry[];\n\n  private get _configEntry(): ConfigEntry | undefined {\n    return this.configEntries\n      ? this.configEntries.find(\n          (entry) => entry.entry_id === this.configEntryId\n        )\n      : undefined;\n  }\n\n  private _computeConfigEntryDevices = memoizeOne(\n    (configEntry: ConfigEntry, devices: DeviceRegistryEntry[]) => {\n      if (!devices) {\n        return [];\n      }\n      return devices.filter((device) =>\n        device.config_entries.includes(configEntry.entry_id)\n      );\n    }\n  );\n\n  private _computeNoDeviceEntities = memoizeOne(\n    (configEntry: ConfigEntry, entities: EntityRegistryEntry[]) => {\n      if (!entities) {\n        return [];\n      }\n      return entities.filter(\n        (ent) => !ent.device_id && ent.config_entry_id === configEntry.entry_id\n      );\n    }\n  );\n\n  protected render() {\n    const configEntry = this._configEntry;\n\n    if (!configEntry) {\n      return html`\n        <hass-error-screen\n          error=\"${this.hass.localize(\n            \"ui.panel.config.integrations.integration_not_found\"\n          )}\"\n        ></hass-error-screen>\n      `;\n    }\n\n    const configEntryDevices = this._computeConfigEntryDevices(\n      configEntry,\n      this.deviceRegistryEntries\n    );\n\n    const noDeviceEntities = this._computeNoDeviceEntities(\n      configEntry,\n      this.entityRegistryEntries\n    );\n\n    return html`\n      <hass-subpage .header=${configEntry.title}>\n        ${configEntry.supports_options\n          ? html`\n              <paper-icon-button\n                slot=\"toolbar-icon\"\n                icon=\"hass:settings\"\n                @click=${this._showSettings}\n                title=${this.hass.localize(\n                  \"ui.panel.config.integrations.config_entry.settings_button\",\n                  \"integration\",\n                  configEntry.title\n                )}\n              ></paper-icon-button>\n            `\n          : \"\"}\n        <paper-icon-button\n          slot=\"toolbar-icon\"\n          icon=\"hass:message-settings-variant\"\n          title=${this.hass.localize(\n            \"ui.panel.config.integrations.config_entry.system_options_button\",\n            \"integration\",\n            configEntry.title\n          )}\n          @click=${this._showSystemOptions}\n        ></paper-icon-button>\n        <paper-icon-button\n          slot=\"toolbar-icon\"\n          icon=\"hass:delete\"\n          title=${this.hass.localize(\n            \"ui.panel.config.integrations.config_entry.delete_button\",\n            \"integration\",\n            configEntry.title\n          )}\n          @click=${this._confirmRemoveEntry}\n        ></paper-icon-button>\n\n        <div class=\"content\">\n          ${configEntryDevices.length === 0 && noDeviceEntities.length === 0\n            ? html`\n                <p>\n                  ${this.hass.localize(\n                    \"ui.panel.config.integrations.config_entry.no_devices\"\n                  )}\n                </p>\n              `\n            : html`\n                <ha-devices-data-table\n                  .hass=${this.hass}\n                  .narrow=${this.narrow}\n                  .devices=${configEntryDevices}\n                  .entries=${this.configEntries}\n                  .entities=${this.entityRegistryEntries}\n                  .areas=${this.areas}\n                ></ha-devices-data-table>\n              `}\n          ${noDeviceEntities.length > 0\n            ? html`\n                <ha-ce-entities-card\n                  .heading=${this.hass.localize(\n                    \"ui.panel.config.integrations.config_entry.no_device\"\n                  )}\n                  .entities=${noDeviceEntities}\n                  .hass=${this.hass}\n                  .narrow=${this.narrow}\n                ></ha-ce-entities-card>\n              `\n            : \"\"}\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  private _showSettings() {\n    showOptionsFlowDialog(this, this._configEntry!);\n  }\n\n  private _showSystemOptions() {\n    showConfigEntrySystemOptionsDialog(this, {\n      entry: this._configEntry!,\n    });\n  }\n\n  private _confirmRemoveEntry() {\n    showConfirmationDialog(this, {\n      text: this.hass.localize(\n        \"ui.panel.config.integrations.config_entry.delete_confirm\"\n      ),\n      confirm: () => this._removeEntry(),\n    });\n  }\n\n  private _removeEntry() {\n    deleteConfigEntry(this.hass, this.configEntryId).then((result) => {\n      fireEvent(this, \"hass-reload-entries\");\n      if (result.require_restart) {\n        alert(\n          this.hass.localize(\n            \"ui.panel.config.integrations.config_entry.restart_confirm\"\n          )\n        );\n      }\n      navigate(this, \"/config/integrations/dashboard\", true);\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .content {\n        padding: 4px;\n      }\n      p {\n        text-align: center;\n      }\n      ha-devices-data-table {\n        width: 100%;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-entry-page\", HaConfigEntryPage);\n","import \"@polymer/app-route/app-route\";\nimport { property, customElement, PropertyValues } from \"lit-element\";\n\nimport \"./ha-config-entries-dashboard\";\nimport \"./config-entry/ha-config-entry-page\";\nimport { compare } from \"../../../common/string/compare\";\nimport {\n  subscribeAreaRegistry,\n  AreaRegistryEntry,\n} from \"../../../data/area_registry\";\nimport {\n  HassRouterPage,\n  RouterOptions,\n} from \"../../../layouts/hass-router-page\";\nimport { HomeAssistant } from \"../../../types\";\nimport { ConfigEntry, getConfigEntries } from \"../../../data/config_entries\";\nimport {\n  EntityRegistryEntry,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport {\n  DeviceRegistryEntry,\n  subscribeDeviceRegistry,\n} from \"../../../data/device_registry\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { DataEntryFlowProgress } from \"../../../data/data_entry_flow\";\nimport {\n  subscribeConfigFlowInProgress,\n  getConfigFlowInProgressCollection,\n} from \"../../../data/config_flow\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"hass-reload-entries\": undefined;\n  }\n}\n\n@customElement(\"ha-config-integrations\")\nclass HaConfigIntegrations extends HassRouterPage {\n  @property() public hass!: HomeAssistant;\n  @property() public narrow!: boolean;\n  @property() public showAdvanced!: boolean;\n\n  protected routerOptions: RouterOptions = {\n    defaultPage: \"dashboard\",\n    routes: {\n      dashboard: {\n        tag: \"ha-config-entries-dashboard\",\n      },\n      config_entry: {\n        tag: \"ha-config-entry-page\",\n      },\n    },\n  };\n\n  @property() private _configEntries: ConfigEntry[] = [];\n  @property() private _configEntriesInProgress: DataEntryFlowProgress[] = [];\n  @property() private _entityRegistryEntries: EntityRegistryEntry[] = [];\n  @property() private _deviceRegistryEntries: DeviceRegistryEntry[] = [];\n  @property() private _areas: AreaRegistryEntry[] = [];\n\n  private _unsubs?: UnsubscribeFunc[];\n\n  public connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.hass) {\n      return;\n    }\n    this._loadData();\n  }\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubs) {\n      while (this._unsubs.length) {\n        this._unsubs.pop()!();\n      }\n      this._unsubs = undefined;\n    }\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this.addEventListener(\"hass-reload-entries\", () => {\n      this._loadData();\n      getConfigFlowInProgressCollection(this.hass.connection).refresh();\n    });\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n    if (!this._unsubs && changedProps.has(\"hass\")) {\n      this._loadData();\n    }\n  }\n\n  protected updatePageEl(pageEl) {\n    pageEl.hass = this.hass;\n\n    pageEl.entityRegistryEntries = this._entityRegistryEntries;\n    pageEl.configEntries = this._configEntries;\n    pageEl.narrow = this.narrow;\n    pageEl.showAdvanced = this.showAdvanced;\n\n    if (this._currentPage === \"dashboard\") {\n      pageEl.configEntriesInProgress = this._configEntriesInProgress;\n      return;\n    }\n\n    pageEl.configEntryId = this.routeTail.path.substr(1);\n    pageEl.deviceRegistryEntries = this._deviceRegistryEntries;\n    pageEl.areas = this._areas;\n  }\n\n  private _loadData() {\n    getConfigEntries(this.hass).then((configEntries) => {\n      this._configEntries = configEntries.sort((conf1, conf2) =>\n        compare(conf1.title, conf2.title)\n      );\n    });\n    if (this._unsubs) {\n      return;\n    }\n    this._unsubs = [\n      subscribeAreaRegistry(this.hass.connection, (areas) => {\n        this._areas = areas;\n      }),\n      subscribeEntityRegistry(this.hass.connection, (entries) => {\n        this._entityRegistryEntries = entries;\n      }),\n      subscribeDeviceRegistry(this.hass.connection, (entries) => {\n        this._deviceRegistryEntries = entries;\n      }),\n      subscribeConfigFlowInProgress(this.hass, (flowsInProgress) => {\n        this._configEntriesInProgress = flowsInProgress;\n      }),\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-integrations\": HaConfigIntegrations;\n  }\n}\n"],"sourceRoot":""}