{"version":3,"sources":["webpack:///./node_modules/@polymer/neon-animation/neon-animatable-behavior.js","webpack:///./node_modules/@polymer/neon-animation/neon-animation-runner-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/config/cloud/dialog-cloud-certificate/dialog-cloud-certificate.ts"],"names":["NeonAnimatableBehavior","properties","animationConfig","type","Object","entryAnimation","observer","String","exitAnimation","_entryAnimationChanged","this","name","node","_exitAnimationChanged","_copyProperties","config1","config2","property","_cloneConfig","config","clone","isClone","_getAnimationConfigRecursive","map","allConfigs","thisConfig","value","_warn","_logf","Array","isArray","index","animatable","id","cachedConfig","push","getAnimationConfig","key","NeonAnimationRunnerBehavior","_configureAnimations","configs","results","resultsToPlay","length","neonAnimation","document","createElement","isNeonAnimation","result","configure","console","warn","is","i","cancel","timeline","play","e","animation","_shouldComplete","activeEntries","finished","playState","_complete","complete","playAnimation","cookie","_active","onfinish","fire","bubbles","bind","cancelAnimation","k","entries","j","PaperDialogBehaviorImpl","hostAttributes","modal","Boolean","__readied","observers","listeners","ready","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","dom","l","indexOf","target","hasAttribute","close","stopPropagation","PaperDialogBehavior","IronOverlayBehavior","$_documentContainer","setAttribute","innerHTML","head","appendChild","content","Polymer","_template","html","behaviors","_renderOpened","_renderClosed","_onNeonAnimationFinish","opened","_finishRenderOpened","_finishRenderClosed","HaIronFocusablesHelper","getTabbableNodes","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","localName","getDistributedNodes","shadowRoot","root","paperDialogClass","customElements","get","haTabFixBehaviorImpl","HaPaperDialog","mixinBehaviors","define","customElement","params","_params","updateComplete","_dialog","open","certificateInfo","hass","localize","format_date_time","Date","expire_date","language","fingerprint","_closeDialog","querySelector","haStyle","css","LitElement"],"mappings":"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","file":"chunk.efa801a72abf04c8b3b0.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\n/**\n * `NeonAnimatableBehavior` is implemented by elements containing\n * animations for use with elements implementing\n * `NeonAnimationRunnerBehavior`.\n * @polymerBehavior\n */\nexport const NeonAnimatableBehavior = {\n\n  properties: {\n\n    /**\n     * Animation configuration. See README for more info.\n     */\n    animationConfig: {type: Object},\n\n    /**\n     * Convenience property for setting an 'entry' animation. Do not set\n     * `animationConfig.entry` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    entryAnimation: {\n      observer: '_entryAnimationChanged',\n      type: String,\n    },\n\n    /**\n     * Convenience property for setting an 'exit' animation. Do not set\n     * `animationConfig.exit` manually if using this. The animated node is set\n     * to `this` if using this property.\n     */\n    exitAnimation: {\n      observer: '_exitAnimationChanged',\n      type: String,\n    },\n\n  },\n\n  _entryAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['entry'] = [{name: this.entryAnimation, node: this}];\n  },\n\n  _exitAnimationChanged: function() {\n    this.animationConfig = this.animationConfig || {};\n    this.animationConfig['exit'] = [{name: this.exitAnimation, node: this}];\n  },\n\n  _copyProperties: function(config1, config2) {\n    // shallowly copy properties from config2 to config1\n    for (var property in config2) {\n      config1[property] = config2[property];\n    }\n  },\n\n  _cloneConfig: function(config) {\n    var clone = {isClone: true};\n    this._copyProperties(clone, config);\n    return clone;\n  },\n\n  _getAnimationConfigRecursive: function(type, map, allConfigs) {\n    if (!this.animationConfig) {\n      return;\n    }\n\n    if (this.animationConfig.value &&\n        typeof this.animationConfig.value === 'function') {\n      this._warn(this._logf(\n          'playAnimation',\n          'Please put \\'animationConfig\\' inside of your components \\'properties\\' object instead of outside of it.'));\n      return;\n    }\n\n    // type is optional\n    var thisConfig;\n    if (type) {\n      thisConfig = this.animationConfig[type];\n    } else {\n      thisConfig = this.animationConfig;\n    }\n\n    if (!Array.isArray(thisConfig)) {\n      thisConfig = [thisConfig];\n    }\n\n    // iterate animations and recurse to process configurations from child nodes\n    if (thisConfig) {\n      for (var config, index = 0; config = thisConfig[index]; index++) {\n        if (config.animatable) {\n          config.animatable._getAnimationConfigRecursive(\n              config.type || type, map, allConfigs);\n        } else {\n          if (config.id) {\n            var cachedConfig = map[config.id];\n            if (cachedConfig) {\n              // merge configurations with the same id, making a clone lazily\n              if (!cachedConfig.isClone) {\n                map[config.id] = this._cloneConfig(cachedConfig);\n                cachedConfig = map[config.id];\n              }\n              this._copyProperties(cachedConfig, config);\n            } else {\n              // put any configs with an id into a map\n              map[config.id] = config;\n            }\n          } else {\n            allConfigs.push(config);\n          }\n        }\n      }\n    }\n  },\n\n  /**\n   * An element implementing `NeonAnimationRunnerBehavior` calls this\n   * method to configure an animation with an optional type. Elements\n   * implementing `NeonAnimatableBehavior` should define the property\n   * `animationConfig`, which is either a configuration object or a map of\n   * animation type to array of configuration objects.\n   */\n  getAnimationConfig: function(type) {\n    var map = {};\n    var allConfigs = [];\n    this._getAnimationConfigRecursive(type, map, allConfigs);\n    // append the configurations saved in the map to the array\n    for (var key in map) {\n      allConfigs.push(map[key]);\n    }\n    return allConfigs;\n  }\n\n};\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {NeonAnimatableBehavior} from './neon-animatable-behavior.js';\n\n/**\n * `NeonAnimationRunnerBehavior` adds a method to run animations.\n *\n * @polymerBehavior NeonAnimationRunnerBehavior\n */\nexport const NeonAnimationRunnerBehaviorImpl = {\n\n  _configureAnimations: function(configs) {\n    var results = [];\n    var resultsToPlay = [];\n\n    if (configs.length > 0) {\n      for (let config, index = 0; config = configs[index]; index++) {\n        let neonAnimation = document.createElement(config.name);\n        // is this element actually a neon animation?\n        if (neonAnimation.isNeonAnimation) {\n          let result = null;\n          // Closure compiler does not work well with a try / catch here.\n          // .configure needs to be explicitly defined\n          if (!neonAnimation.configure) {\n            /**\n             * @param {Object} config\n             * @return {AnimationEffectReadOnly}\n             */\n            neonAnimation.configure = function(config) {\n              return null;\n            }\n          }\n\n          result = neonAnimation.configure(config);\n          resultsToPlay.push({\n            result: result,\n            config: config,\n            neonAnimation: neonAnimation,\n          });\n        } else {\n          console.warn(this.is + ':', config.name, 'not found!');\n        }\n      }\n    }\n\n    for (var i = 0; i < resultsToPlay.length; i++) {\n      let result = resultsToPlay[i].result;\n      let config = resultsToPlay[i].config;\n      let neonAnimation = resultsToPlay[i].neonAnimation;\n      // configuration or play could fail if polyfills aren't loaded\n      try {\n        // Check if we have an Effect rather than an Animation\n        if (typeof result.cancel != 'function') {\n          result = document.timeline.play(result);\n        }\n      } catch (e) {\n        result = null;\n        console.warn('Couldnt play', '(', config.name, ').', e);\n      }\n\n      if (result) {\n        results.push({\n          neonAnimation: neonAnimation,\n          config: config,\n          animation: result,\n        });\n      }\n    }\n\n    return results;\n  },\n\n  _shouldComplete: function(activeEntries) {\n    var finished = true;\n    for (var i = 0; i < activeEntries.length; i++) {\n      if (activeEntries[i].animation.playState != 'finished') {\n        finished = false;\n        break;\n      }\n    }\n    return finished;\n  },\n\n  _complete: function(activeEntries) {\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].neonAnimation.complete(activeEntries[i].config);\n    }\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.cancel();\n    }\n  },\n\n  /**\n   * Plays an animation with an optional `type`.\n   * @param {string=} type\n   * @param {!Object=} cookie\n   */\n  playAnimation: function(type, cookie) {\n    var configs = this.getAnimationConfig(type);\n    if (!configs) {\n      return;\n    }\n    this._active = this._active || {};\n    if (this._active[type]) {\n      this._complete(this._active[type]);\n      delete this._active[type];\n    }\n\n    var activeEntries = this._configureAnimations(configs);\n\n    if (activeEntries.length == 0) {\n      this.fire('neon-animation-finish', cookie, {bubbles: false});\n      return;\n    }\n\n    this._active[type] = activeEntries;\n\n    for (var i = 0; i < activeEntries.length; i++) {\n      activeEntries[i].animation.onfinish = function() {\n        if (this._shouldComplete(activeEntries)) {\n          this._complete(activeEntries);\n          delete this._active[type];\n          this.fire('neon-animation-finish', cookie, {bubbles: false});\n        }\n      }.bind(this);\n    }\n  },\n\n  /**\n   * Cancels the currently running animations.\n   */\n  cancelAnimation: function() {\n    for (var k in this._active) {\n      var entries = this._active[k]\n\n                    for (var j in entries) {\n        entries[j].animation.cancel();\n      }\n    }\n\n    this._active = {};\n  }\n};\n\n/** @polymerBehavior */\nexport const NeonAnimationRunnerBehavior =\n    [NeonAnimatableBehavior, NeonAnimationRunnerBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area,\n  and an action area for buttons. Use the `<h2>` tag for the header and the\n  `buttons` class for the action area. You can use the `paper-dialog-scrollable`\n  element (in its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive\n  controls to close the dialog. If the user dismisses the dialog with\n  `dialog-confirm`, the `closingReason` will update to include `confirmed:\n  true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may\n  be more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the\n  element. It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior =\n    [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color | `--primary-background-color`\n`--paper-dialog-color` | Dialog foreground color | `--primary-text-color`\n`--paper-dialog` | Mixin applied to the dialog | `{}`\n`--paper-dialog-title` | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color` | Button area foreground color | `--default-primary-color`\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  html,\n  LitElement,\n  css,\n  CSSResult,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport \"@material/mwc-button\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\n// This is not a duplicate import, one is for types, one is for element.\n// tslint:disable-next-line\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\n\nimport { HomeAssistant } from \"../../../../types\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport { CloudCertificateParams as CloudCertificateDialogParams } from \"./show-dialog-cloud-certificate\";\nimport format_date_time from \"../../../../common/datetime/format_date_time\";\n\n@customElement(\"dialog-cloud-certificate\")\nclass DialogCloudCertificate extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property()\n  private _params?: CloudCertificateDialogParams;\n\n  public async showDialog(params: CloudCertificateDialogParams) {\n    this._params = params;\n    // Wait till dialog is rendered.\n    await this.updateComplete;\n    this._dialog.open();\n  }\n\n  protected render() {\n    if (!this._params) {\n      return html``;\n    }\n    const { certificateInfo } = this._params;\n\n    return html`\n      <ha-paper-dialog with-backdrop>\n        <h2>\n          ${this.hass!.localize(\n            \"ui.panel.config.cloud.dialog_certificate.certificate_information\"\n          )}\n        </h2>\n        <div>\n          <p>\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.certificate_expiration_date\"\n            )}\n            ${format_date_time(\n              new Date(certificateInfo.expire_date),\n              this.hass!.language\n            )}<br />\n            (${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.will_be_auto_renewed\"\n            )})\n          </p>\n          <p class=\"break-word\">\n            ${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.fingerprint\"\n            )}\n            ${certificateInfo.fingerprint}\n          </p>\n        </div>\n\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=\"${this._closeDialog}\"\n            >${this.hass!.localize(\n              \"ui.panel.config.cloud.dialog_certificate.close\"\n            )}</mwc-button\n          >\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  private _closeDialog() {\n    this._dialog.close();\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        ha-paper-dialog {\n          width: 535px;\n        }\n        .break-word {\n          overflow-wrap: break-word;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-cloud-certificate\": DialogCloudCertificate;\n  }\n}\n"],"sourceRoot":""}